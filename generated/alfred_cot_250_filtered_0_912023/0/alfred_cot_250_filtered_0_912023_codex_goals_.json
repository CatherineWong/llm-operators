{
    "train/look_at_obj_in_light-Cloth-None-DeskLamp-303/trial_T20190908_131610_591705": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a towel with a lamp.\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a towel with a lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 2 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 3 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 4 for 'examine a towel with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Cloth-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o ClothType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161428_039508": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled mug on the coffee maker.\n;; PDDL guess 1 for 'put a chilled mug on the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a chilled mug on the coffee maker.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a chilled mug on the coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a chilled mug on the coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-GlassbottleType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a chilled mug on the coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a chilled mug on the coffee maker.\"\n;; Official goal name: pick_cool_then_place_in_recep-CupType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n"
        ]
    },
    "train/look_at_obj_in_light-TissueBox-None-FloorLamp-225/trial_T20190907_150815_536818": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nto see the tissue box in the lamp light.\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to see the tissue box in the lamp light.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 2 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 3 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 4 for 'to see the tissue box in the lamp light.'\n;; Simplified Goal: \nlook_at_obj_in_light-TissueBox-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o TissueBoxType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-WineBottle-None-GarbageCan-16/trial_T20190907_015045_510934": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill bottle in refrigerator , throw in trash can to front left of paper towels.\n;; PDDL guess 1 for 'chill bottle in refrigerator , throw in trash can to front left of paper towels.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.chill bottle in refrigerator , throw in trash can to front left of paper towels.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-Glassbottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-WateringCanType-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WateringCanType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-SoapBottleType-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"chill bottle in refrigerator , throw in trash can to front left of paper towels.\"\n;; Official goal name: pick_cool_then_place_in_recep-SprayBottleType-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-Pencil-None-Shelf-310/trial_T20190908_023618_136375": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove a pencil to the desk shelf.\n;; PDDL guess 1 for 'move a pencil to the desk shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a pencil to the desk shelf.\n;; PDDL guess 1 for 'move a pencil to the desk shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a pencil to the desk shelf.\n;; PDDL guess 1 for 'move a pencil to the desk shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a pencil to the desk shelf.\n;; PDDL guess 1 for 'move a pencil to the desk shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a pencil to the desk shelf.\n;; PDDL guess 1 for 'move a pencil to the desk shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a pencil to the desk shelf.\n;; PDDL guess 1 for 'move a pencil to the desk shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a pencil to the desk shelf.\n;; PDDL guess 1 for 'move a pencil to the desk shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a pencil to the desk shelf.\n;; PDDL guess 1 for 'move a pencil to the desk shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a pencil to the desk shelf.\n;; PDDL guess 1 for 'move a pencil to the desk shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a pencil to the desk shelf.\n;; PDDL guess 1 for 'move a pencil to the desk shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pencil-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move a pencil to the desk shelf.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"move a pencil to the desk shelf.\"\n;; Official goal name: pick_and_place_simple-Pencil-None-Shelf\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PencilType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"move a pencil to the desk shelf.\"\n;; Official goal name: pick_and_place_simple-PenType-None-Shelf\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"move a pencil to the desk shelf.\"\n;; Official goal name: pick_and_place_simple-ClothType-None-Shelf\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"move a pencil to the desk shelf.\"\n;; Official goal name: pick_and_place_simple-PaperTowelType-None-Shelf\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PaperTowelType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_034437_632398": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto take a mug from the microwave to put it away in the cabinet.\n;; PDDL guess 1 for 'to take a mug from the microwave to put it away in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to take a mug from the microwave to put it away in the cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_and_place_simple-Mug-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_and_place_simple-CoffeeMachineType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeMachineType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_and_place_simple-TeacupType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeacupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"to take a mug from the microwave to put it away in the cabinet.\"\n;; Official goal name: pick_and_place_simple-DiningTableType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o DiningTableType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_and_place_simple-AppleSliced-None-Fridge-30/trial_T20190907_105723_672392": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace an apple slice inside of the fridge.\n;; PDDL guess 1 for 'place an apple slice inside of the fridge.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace an apple slice inside of the fridge.\n;; PDDL guess 1 for 'place an apple slice inside of the fridge.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace an apple slice inside of the fridge.\n;; PDDL guess 1 for 'place an apple slice inside of the fridge.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace an apple slice inside of the fridge.\n;; PDDL guess 1 for 'place an apple slice inside of the fridge.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace an apple slice inside of the fridge.\n;; PDDL guess 1 for 'place an apple slice inside of the fridge.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace an apple slice inside of the fridge.\n;; PDDL guess 1 for 'place an apple slice inside of the fridge.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace an apple slice inside of the fridge.\n;; PDDL guess 1 for 'place an apple slice inside of the fridge.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace an apple slice inside of the fridge.\n;; PDDL guess 1 for 'place an apple slice inside of the fridge.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace an apple slice inside of the fridge.\n;; PDDL guess 1 for 'place an apple slice inside of the fridge.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace an apple slice inside of the fridge.\n;; PDDL guess 1 for 'place an apple slice inside of the fridge.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place an apple slice inside of the fridge.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place an apple slice inside of the fridge.\"\n;; Official goal name: pick_and_place_simple-Apple-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place an apple slice inside of the fridge.\"\n;; Official goal name: pick_and_place_simple-AppleSliced-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place an apple slice inside of the fridge.\"\n;; Official goal name: pick_and_place_simple-Apple-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place an apple slice inside of the fridge.\"\n;; Official goal name: pick_and_place_simple-AppleSliced-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (isSliced ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Potato-None-SinkBasin-24/trial_T20190909_052222_333703": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the chilled potato in the sink.\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled potato in the sink.\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled potato in the sink.\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled potato in the sink.\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled potato in the sink.\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled potato in the sink.\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled potato in the sink.\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled potato in the sink.\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled potato in the sink.\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled potato in the sink.\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the chilled potato in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put the chilled potato in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Mug-None-DeskLamp-301/trial_T20190908_155916_103990": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a mug with a lamp.\n;; PDDL guess 1 for 'inspect a mug with a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Mug-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o MugType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.inspect a mug with a lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"inspect a mug with a lamp.\"\n;; Official goal name: look_at_obj_in_light-Mug-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o MugType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?ot DeskLampType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for \"inspect a mug with a lamp.\"\n;; Official goal name: look_at_obj_in_light-Mug-None-TableLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o MugType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?ot TableLampType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for \"inspect a mug with a lamp.\"\n;; Official goal name: look_at_obj_in_light-Mug-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o MugType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?ot FloorLampType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for \"inspect a mug with a lamp.\"\n;; Official goal name: look_at_obj_in_light-Mug-None-BedsideLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?o MugType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?ot BedsideLampType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/look_at_obj_in_light-RemoteControl-None-FloorLamp-229/trial_T20190907_184408_159194": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a remote in hand.\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn a lamp on with a remote in hand.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for 'turn a lamp on with a remote in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-11/trial_T20190907_164503_292853": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug in the coffee maker.\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated mug in the coffee maker.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a heated mug in the coffee maker.'\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put a heated mug in the coffee maker.'\n;; Official goal name: pick_heat_then_place_in_recep-Cup-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a heated mug in the coffee maker.'\n;; Official goal name: pick_heat_then_place_in_recep-TeddyBear-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeddyBearType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a heated mug in the coffee maker.'\n;; Official goal name: pick_heat_then_place_in_recep-Vase-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-TomatoSliced-None-SideTable-28/trial_T20190908_213552_035696": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice the tomato on the black stand.\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the tomato on the black stand.\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the tomato on the black stand.\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the tomato on the black stand.\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the tomato on the black stand.\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the tomato on the black stand.\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the tomato on the black stand.\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the tomato on the black stand.\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the tomato on the black stand.\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the tomato on the black stand.\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice the tomato on the black stand.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'slice the tomato on the black stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Ottoman\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r OttomanType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Potato-None-SideTable-28/trial_T20190907_075841_463460": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated potato on the small black table.\n;; PDDL guess 1 for 'put a heated potato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato on the small black table.\n;; PDDL guess 1 for 'put a heated potato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato on the small black table.\n;; PDDL guess 1 for 'put a heated potato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato on the small black table.\n;; PDDL guess 1 for 'put a heated potato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato on the small black table.\n;; PDDL guess 1 for 'put a heated potato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato on the small black table.\n;; PDDL guess 1 for 'put a heated potato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato on the small black table.\n;; PDDL guess 1 for 'put a heated potato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato on the small black table.\n;; PDDL guess 1 for 'put a heated potato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato on the small black table.\n;; PDDL guess 1 for 'put a heated potato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato on the small black table.\n;; PDDL guess 1 for 'put a heated potato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated potato on the small black table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a heated potato on the small black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a heated potato on the small black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-CoffeeTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a heated potato on the small black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-OttomanType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r OttomanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a heated potato on the small black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-DresserType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-421/trial_T20190907_041233_785188": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a clean bar of soap in the trash can.\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in the trash can.\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in the trash can.\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in the trash can.\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in the trash can.\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in the trash can.\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in the trash can.\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in the trash can.\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in the trash can.\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in the trash can.\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a clean bar of soap in the trash can.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a clean bar of soap in the trash can.'\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put a clean bar of soap in the trash can.'\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a clean bar of soap in the trash can.'\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a clean bar of soap in the trash can.'\n;; Official goal name: pick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-PotatoSliced-None-SinkBasin-25/trial_T20190907_062007_896057": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice a potato in a sink with a knife.\n;; PDDL guess 1 for 'slice a potato in a sink with a knife.'\n;; Simplified Goal: \npick_and_place_simple-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato in a sink with a knife.\n;; PDDL guess 1 for 'slice a potato in a sink with a knife.'\n;; Simplified Goal: \npick_and_place_simple-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato in a sink with a knife.\n;; PDDL guess 1 for 'slice a potato in a sink with a knife.'\n;; Simplified Goal: \npick_and_place_simple-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato in a sink with a knife.\n;; PDDL guess 1 for 'slice a potato in a sink with a knife.'\n;; Simplified Goal: \npick_and_place_simple-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato in a sink with a knife.\n;; PDDL guess 1 for 'slice a potato in a sink with a knife.'\n;; Simplified Goal: \npick_and_place_simple-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato in a sink with a knife.\n;; PDDL guess 1 for 'slice a potato in a sink with a knife.'\n;; Simplified Goal: \npick_and_place_simple-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato in a sink with a knife.\n;; PDDL guess 1 for 'slice a potato in a sink with a knife.'\n;; Simplified Goal: \npick_and_place_simple-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato in a sink with a knife.\n;; PDDL guess 1 for 'slice a potato in a sink with a knife.'\n;; Simplified Goal: \npick_and_place_simple-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato in a sink with a knife.\n;; PDDL guess 1 for 'slice a potato in a sink with a knife.'\n;; Simplified Goal: \npick_and_place_simple-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato in a sink with a knife.\n;; PDDL guess 1 for 'slice a potato in a sink with a knife.'\n;; Simplified Goal: \npick_and_place_simple-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice a potato in a sink with a knife.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"slice a potato in a sink with a knife.\"\n;; Official goal name: pick_and_place_simple-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"slice a potato in a sink with a knife.\"\n;; Official goal name: pick_and_place_simple-PotatoSliced-None-CoconutMilkWashBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CoconutMilkWashBasinType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"slice a potato in a sink with a knife.\"\n;; Official goal name: pick_and_place_simple-PotatoSliced-None-BathroomSink\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r BathroomSinkType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"slice a potato in a sink with a knife.\"\n;; Official goal name: pick_and_place_simple-PotatoSliced-None-FrontYardSink\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FrontYardSinkType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Tomato-None-CounterTop-14/trial_T20190909_012732_375728": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a clean tomato on the counter.\n;; PDDL guess 1 for 'place a clean tomato on the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean tomato on the counter.\n;; PDDL guess 1 for 'place a clean tomato on the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean tomato on the counter.\n;; PDDL guess 1 for 'place a clean tomato on the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean tomato on the counter.\n;; PDDL guess 1 for 'place a clean tomato on the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean tomato on the counter.\n;; PDDL guess 1 for 'place a clean tomato on the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean tomato on the counter.\n;; PDDL guess 1 for 'place a clean tomato on the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean tomato on the counter.\n;; PDDL guess 1 for 'place a clean tomato on the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean tomato on the counter.\n;; PDDL guess 1 for 'place a clean tomato on the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean tomato on the counter.\n;; PDDL guess 1 for 'place a clean tomato on the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean tomato on the counter.\n;; PDDL guess 1 for 'place a clean tomato on the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a clean tomato on the counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a clean tomato on the counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a clean tomato on the counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Apple-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a clean tomato on the counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Cucumber-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CucumberType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a clean tomato on the counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Banana-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BananaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Potato-None-SinkBasin-26/trial_T20190909_095444_078134": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated potato in the sink.\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato in the sink.\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato in the sink.\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato in the sink.\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato in the sink.\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato in the sink.\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato in the sink.\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato in the sink.\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato in the sink.\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated potato in the sink.\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated potato in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'put a heated potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_and_place_simple-Glassbottle-None-Fridge-16/trial_T20190908_045933_322597": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a vase in a fridge.\n;; PDDL guess 1 for 'put a vase in a fridge.'\n;; Simplified Goal: \npick_and_place_simple-Glassbottle-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a vase in a fridge.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a vase in a fridge\"\n;; Official goal name: pick_and_place_simple-VaseType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n        )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a vase in a fridge\"\n;; Official goal name: pick_and_place_simple-StatueType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o StatueType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n        )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a vase in a fridge\"\n;; Official goal name: pick_and_place_simple-HousePlantType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o HousePlantType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n        )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a vase in a fridge\"\n;; Official goal name: pick_and_place_simple-PaintingType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PaintingType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n        )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-BreadSliced-None-Fridge-2/trial_T20190909_075013_874186": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of warm toast in the fridge.\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a slice of warm toast in the fridge.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-Bread-None-FridgeType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n            )\n)))\n",
            "\n;; PDDL guess 3 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-Tomato-None-FridgeType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n            )\n)))\n",
            "\n;; PDDL guess 4 for 'put a slice of warm toast in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-Apple-None-FridgeType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n            )\n)))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Egg-None-SinkBasin-8/trial_T20190907_001539_470934": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ndrop a cooked egg in the sink.\n;; PDDL guess 1 for 'drop a cooked egg in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ndrop a cooked egg in the sink.\n;; PDDL guess 1 for 'drop a cooked egg in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ndrop a cooked egg in the sink.\n;; PDDL guess 1 for 'drop a cooked egg in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ndrop a cooked egg in the sink.\n;; PDDL guess 1 for 'drop a cooked egg in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ndrop a cooked egg in the sink.\n;; PDDL guess 1 for 'drop a cooked egg in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ndrop a cooked egg in the sink.\n;; PDDL guess 1 for 'drop a cooked egg in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ndrop a cooked egg in the sink.\n;; PDDL guess 1 for 'drop a cooked egg in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ndrop a cooked egg in the sink.\n;; PDDL guess 1 for 'drop a cooked egg in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ndrop a cooked egg in the sink.\n;; PDDL guess 1 for 'drop a cooked egg in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ndrop a cooked egg in the sink.\n;; PDDL guess 1 for 'drop a cooked egg in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.drop a cooked egg in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"drop a cooked egg in the sink.\"\n;; Official goal name: pick_then_place_in_recep-Egg-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"drop a cooked egg in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"drop a cooked egg in the sink.\"\n;; Official goal name: pick_then_place_in_recep-Egg-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"drop a cooked egg in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220047_928975": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice lettuce on the table with the knife.\n;; PDDL guess 1 for 'slice lettuce on the table with the knife.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice lettuce on the table with the knife.\n;; PDDL guess 1 for 'slice lettuce on the table with the knife.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice lettuce on the table with the knife.\n;; PDDL guess 1 for 'slice lettuce on the table with the knife.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice lettuce on the table with the knife.\n;; PDDL guess 1 for 'slice lettuce on the table with the knife.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice lettuce on the table with the knife.\n;; PDDL guess 1 for 'slice lettuce on the table with the knife.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice lettuce on the table with the knife.\n;; PDDL guess 1 for 'slice lettuce on the table with the knife.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice lettuce on the table with the knife.\n;; PDDL guess 1 for 'slice lettuce on the table with the knife.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice lettuce on the table with the knife.\n;; PDDL guess 1 for 'slice lettuce on the table with the knife.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice lettuce on the table with the knife.\n;; PDDL guess 1 for 'slice lettuce on the table with the knife.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice lettuce on the table with the knife.\n;; PDDL guess 1 for 'slice lettuce on the table with the knife.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice lettuce on the table with the knife.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"slice lettuce on the table with the knife.\"\n;; Official goal name: pick_and_place_simple-LettuceSliced-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"slice lettuce on the table with the knife.\"\n;; Official goal name: pick_and_place_simple-AppleSliced-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"slice lettuce on the table with the knife.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"slice lettuce on the table with the knife.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin-13/trial_T20190919_030951_364977": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cold potato slice in the sink.\n;; PDDL guess 1 for 'place a cold potato slice in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cold potato slice in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a cold potato slice in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a cold potato slice in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-CartType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CartType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a cold potato slice in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-KettleType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r KettleType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a cold potato slice in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-MicrowaveType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-4/trial_T20190909_064937_166184": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a tomato slice and place it in the sink.\n;; PDDL guess 1 for 'to heat a tomato slice and place it in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to heat a tomato slice and place it in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"to heat a tomato slice and place it in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    ))) \n",
            "\n;; PDDL guess 2 for \"to heat a tomato slice and place it in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    ))) \n",
            "\n;; PDDL guess 3 for \"to heat a tomato slice and place it in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    ))) \n",
            "\n;; PDDL guess 4 for \"to heat a tomato slice and place it in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    ))) \n"
        ]
    },
    "train/pick_clean_then_place_in_recep-ButterKnife-None-CounterTop-25/trial_T20190907_212022_934468": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean knife in the large sink.\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a clean knife in the large sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-KnifeType-None-SinkBasinType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SpoonType-None-SinkBasinType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'place a clean knife in the large sink.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ForkType-None-SinkBasinType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Mug-None-Cabinet-30/trial_T20190909_044538_375844": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto heat a mug and put it inside of the cabinet.\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a mug and put it inside of the cabinet.\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a mug and put it inside of the cabinet.\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a mug and put it inside of the cabinet.\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a mug and put it inside of the cabinet.\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a mug and put it inside of the cabinet.\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a mug and put it inside of the cabinet.\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a mug and put it inside of the cabinet.\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a mug and put it inside of the cabinet.\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a mug and put it inside of the cabinet.\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to heat a mug and put it inside of the cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'to heat a mug and put it inside of the cabinet.'\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'to heat a mug and put it inside of the cabinet.'\n;; Official goal name: pick_heat_then_place_in_recep-TeaCup-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeaCupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'to heat a mug and put it inside of the cabinet.'\n;; Official goal name: pick_heat_then_place_in_recep-CoffeeCup-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeCupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'to heat a mug and put it inside of the cabinet.'\n;; Official goal name: pick_heat_then_place_in_recep-TravelMug-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TravelMugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-SprayBottle-None-Toilet-418/trial_T20190906_190917_905379": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a spray bottle on top of a toilet cistern.\n;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'\n;; Simplified Goal: \npick_and_place_simple-SprayBottle-None-Toilet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a spray bottle on top of a toilet cistern.\n;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'\n;; Simplified Goal: \npick_and_place_simple-SprayBottle-None-Toilet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a spray bottle on top of a toilet cistern.\n;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'\n;; Simplified Goal: \npick_and_place_simple-SprayBottle-None-Toilet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a spray bottle on top of a toilet cistern.\n;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'\n;; Simplified Goal: \npick_and_place_simple-SprayBottle-None-Toilet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a spray bottle on top of a toilet cistern.\n;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'\n;; Simplified Goal: \npick_and_place_simple-SprayBottle-None-Toilet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a spray bottle on top of a toilet cistern.\n;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'\n;; Simplified Goal: \npick_and_place_simple-SprayBottle-None-Toilet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a spray bottle on top of a toilet cistern.\n;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'\n;; Simplified Goal: \npick_and_place_simple-SprayBottle-None-Toilet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a spray bottle on top of a toilet cistern.\n;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'\n;; Simplified Goal: \npick_and_place_simple-SprayBottle-None-Toilet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a spray bottle on top of a toilet cistern.\n;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'\n;; Simplified Goal: \npick_and_place_simple-SprayBottle-None-Toilet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a spray bottle on top of a toilet cistern.\n;; PDDL guess 1 for 'place a spray bottle on top of a toilet cistern.'\n;; Simplified Goal: \npick_and_place_simple-SprayBottle-None-Toilet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a spray bottle on top of a toilet cistern.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a spray bottle on top of a toilet cistern.\"\n;; Official goal name: pick_and_place_simple-SprayBottle-None-Toilet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"place a spray bottle on top of a toilet cistern.\"\n;; Official goal name: pick_and_place_simple-SprayBottle-None-Toilet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"place a spray bottle on top of a toilet cistern.\"\n;; Official goal name: pick_and_place_simple-SprayBottle-None-Toilet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"place a spray bottle on top of a toilet cistern.\"\n;; Official goal name: pick_and_place_simple-SprayBottle-None-Toilet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SprayBottleType) \n                (receptacleType ?r ToiletType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-2/trial_T20190909_094553_729319": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a cold potato slice in the microwave.\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.putting a cold potato slice in the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'putting a cold potato slice in the microwave.'\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 2 for 'putting a cold potato slice in the microwave.'\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 3 for 'putting a cold potato slice in the microwave.'\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 4 for 'putting a cold potato slice in the microwave.'\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n"
        ]
    },
    "train/pick_and_place_simple-ToiletPaper-None-ToiletPaperHanger-426/trial_T20190909_044756_658872": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto put an empty roll on the toilet paper holder on the wall.\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to put an empty roll on the toilet paper holder on the wall.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'to put an empty roll on the toilet paper holder on the wall.'\n;; Simplified Goal: \npick_and_place_simple-ToiletPaper-None-ToiletPaperHanger\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToiletPaperType) \n                (receptacleType ?r ToiletPaperHangerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-5/trial_T20190914_020559_534073": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cold potato slice in the microwave.\n;; PDDL guess 1 for 'put a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold potato slice in the microwave.\n;; PDDL guess 1 for 'put a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold potato slice in the microwave.\n;; PDDL guess 1 for 'put a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold potato slice in the microwave.\n;; PDDL guess 1 for 'put a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold potato slice in the microwave.\n;; PDDL guess 1 for 'put a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold potato slice in the microwave.\n;; PDDL guess 1 for 'put a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold potato slice in the microwave.\n;; PDDL guess 1 for 'put a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold potato slice in the microwave.\n;; PDDL guess 1 for 'put a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold potato slice in the microwave.\n;; PDDL guess 1 for 'put a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold potato slice in the microwave.\n;; PDDL guess 1 for 'put a cold potato slice in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cold potato slice in the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a cold potato slice in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a cold potato slice in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a cold potato slice in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a cold potato slice in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Apple-None-SinkBasin-24/trial_T20190909_040401_888395": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nputting a hot apple in the sink.\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a hot apple in the sink.\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a hot apple in the sink.\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a hot apple in the sink.\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a hot apple in the sink.\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a hot apple in the sink.\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a hot apple in the sink.\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a hot apple in the sink.\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a hot apple in the sink.\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nputting a hot apple in the sink.\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.putting a hot apple in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'putting a hot apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Onion-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OnionType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Mug-None-Cabinet-22/trial_T20190908_144232_130522": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the chilled mug in the cabinet.\n;; PDDL guess 1 for 'put the chilled mug in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled mug in the cabinet.\n;; PDDL guess 1 for 'put the chilled mug in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled mug in the cabinet.\n;; PDDL guess 1 for 'put the chilled mug in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled mug in the cabinet.\n;; PDDL guess 1 for 'put the chilled mug in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled mug in the cabinet.\n;; PDDL guess 1 for 'put the chilled mug in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled mug in the cabinet.\n;; PDDL guess 1 for 'put the chilled mug in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled mug in the cabinet.\n;; PDDL guess 1 for 'put the chilled mug in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled mug in the cabinet.\n;; PDDL guess 1 for 'put the chilled mug in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled mug in the cabinet.\n;; PDDL guess 1 for 'put the chilled mug in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled mug in the cabinet.\n;; PDDL guess 1 for 'put the chilled mug in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the chilled mug in the cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put the chilled mug in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Mug-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put the chilled mug in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-CupType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put the chilled mug in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-MugType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put the chilled mug in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Cup-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-AppleSliced-None-Fridge-6/trial_T20190907_182032_987487": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a hot chunk of apple in the freezer.\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot chunk of apple in the freezer.\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot chunk of apple in the freezer.\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot chunk of apple in the freezer.\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot chunk of apple in the freezer.\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot chunk of apple in the freezer.\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot chunk of apple in the freezer.\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot chunk of apple in the freezer.\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot chunk of apple in the freezer.\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot chunk of apple in the freezer.\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a hot chunk of apple in the freezer.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a hot chunk of apple in the freezer.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Bowl-None-DeskLamp-302/trial_T20190908_030636_661532": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn a lamp on with a bowl in hand.\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn a lamp on with a bowl in hand.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 2 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 3 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 4 for 'turn a lamp on with a bowl in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Apple-None-CounterTop-2/trial_T20190908_112534_364453": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a heated apple on a counter.\n;; PDDL guess 1 for 'place a heated apple on a counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated apple on a counter.\n;; PDDL guess 1 for 'place a heated apple on a counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated apple on a counter.\n;; PDDL guess 1 for 'place a heated apple on a counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated apple on a counter.\n;; PDDL guess 1 for 'place a heated apple on a counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated apple on a counter.\n;; PDDL guess 1 for 'place a heated apple on a counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated apple on a counter.\n;; PDDL guess 1 for 'place a heated apple on a counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated apple on a counter.\n;; PDDL guess 1 for 'place a heated apple on a counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated apple on a counter.\n;; PDDL guess 1 for 'place a heated apple on a counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated apple on a counter.\n;; PDDL guess 1 for 'place a heated apple on a counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated apple on a counter.\n;; PDDL guess 1 for 'place a heated apple on a counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a heated apple on a counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a heated apple on a counter.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a heated apple on a counter.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a heated apple on a counter.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a heated apple on a counter.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Plate-None-Cabinet-22/trial_T20190908_084019_408981": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cooled plate in a cabinet.\n;; PDDL guess 1 for 'place a cooled plate in a cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled plate in a cabinet.\n;; PDDL guess 1 for 'place a cooled plate in a cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled plate in a cabinet.\n;; PDDL guess 1 for 'place a cooled plate in a cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled plate in a cabinet.\n;; PDDL guess 1 for 'place a cooled plate in a cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled plate in a cabinet.\n;; PDDL guess 1 for 'place a cooled plate in a cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled plate in a cabinet.\n;; PDDL guess 1 for 'place a cooled plate in a cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled plate in a cabinet.\n;; PDDL guess 1 for 'place a cooled plate in a cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled plate in a cabinet.\n;; PDDL guess 1 for 'place a cooled plate in a cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled plate in a cabinet.\n;; PDDL guess 1 for 'place a cooled plate in a cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled plate in a cabinet.\n;; PDDL guess 1 for 'place a cooled plate in a cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Plate-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cooled plate in a cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a cooled plate in a cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Plate-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a cooled plate in a cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-BowlType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a cooled plate in a cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-DishType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o DishType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a cooled plate in a cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-CupType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Mug-None-Shelf-20/trial_T20190907_054109_225243": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the heated cup on the shelf.\n;; PDDL guess 1 for 'put the heated cup on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the heated cup on the shelf.\n;; PDDL guess 1 for 'put the heated cup on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the heated cup on the shelf.\n;; PDDL guess 1 for 'put the heated cup on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the heated cup on the shelf.\n;; PDDL guess 1 for 'put the heated cup on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the heated cup on the shelf.\n;; PDDL guess 1 for 'put the heated cup on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the heated cup on the shelf.\n;; PDDL guess 1 for 'put the heated cup on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the heated cup on the shelf.\n;; PDDL guess 1 for 'put the heated cup on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the heated cup on the shelf.\n;; PDDL guess 1 for 'put the heated cup on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the heated cup on the shelf.\n;; PDDL guess 1 for 'put the heated cup on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the heated cup on the shelf.\n;; PDDL guess 1 for 'put the heated cup on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the heated cup on the shelf.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put the heated cup on the shelf.\"\n;; Official goal name: pick_and_place_simple-Mug-None-ShelfType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put the heated cup on the shelf.\"\n;; Official goal name: pick_and_place_simple-CupType-None-ShelfType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put the heated cup on the shelf.\"\n;; Official goal name: pick_and_place_simple-MugType-None-ShelfType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put the heated cup on the shelf.\"\n;; Official goal name: pick_and_place_simple-Cup-None-ShelfType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-AppleSliced-None-DiningTable-17/trial_T20190908_095621_618627": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove a heated piece of apple from the refrigerator to the table.\n;; PDDL guess 1 for 'move a heated piece of apple from the refrigerator to the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a heated piece of apple from the refrigerator to the table.\n;; PDDL guess 1 for 'move a heated piece of apple from the refrigerator to the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a heated piece of apple from the refrigerator to the table.\n;; PDDL guess 1 for 'move a heated piece of apple from the refrigerator to the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a heated piece of apple from the refrigerator to the table.\n;; PDDL guess 1 for 'move a heated piece of apple from the refrigerator to the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a heated piece of apple from the refrigerator to the table.\n;; PDDL guess 1 for 'move a heated piece of apple from the refrigerator to the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a heated piece of apple from the refrigerator to the table.\n;; PDDL guess 1 for 'move a heated piece of apple from the refrigerator to the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a heated piece of apple from the refrigerator to the table.\n;; PDDL guess 1 for 'move a heated piece of apple from the refrigerator to the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a heated piece of apple from the refrigerator to the table.\n;; PDDL guess 1 for 'move a heated piece of apple from the refrigerator to the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a heated piece of apple from the refrigerator to the table.\n;; PDDL guess 1 for 'move a heated piece of apple from the refrigerator to the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a heated piece of apple from the refrigerator to the table.\n;; PDDL guess 1 for 'move a heated piece of apple from the refrigerator to the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move a heated piece of apple from the refrigerator to the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"move a heated piece of apple from the refrigerator to the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"move a heated piece of apple from the refrigerator to the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"move a heated piece of apple from the refrigerator to the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"move a heated piece of apple from the refrigerator to the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-AppleSliced-None-DiningTable-15/trial_T20190907_224100_128711": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto heat a piece of apple and place it on the end of the table.\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a piece of apple and place it on the end of the table.\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a piece of apple and place it on the end of the table.\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a piece of apple and place it on the end of the table.\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a piece of apple and place it on the end of the table.\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a piece of apple and place it on the end of the table.\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a piece of apple and place it on the end of the table.\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a piece of apple and place it on the end of the table.\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a piece of apple and place it on the end of the table.\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto heat a piece of apple and place it on the end of the table.\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to heat a piece of apple and place it on the end of the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'to heat a piece of apple and place it on the end of the table.'\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'to heat a piece of apple and place it on the end of the table.'\n;; Official goal name: pick_heat_then_place_in_recep-AppleSlice-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleSliceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'to heat a piece of apple and place it on the end of the table.'\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'to heat a piece of apple and place it on the end of the table.'\n;; Official goal name: pick_heat_then_place_in_recep-AppleSlice-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleSliceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Spoon-None-Drawer-5/trial_T20190907_080537_064131": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a washed spoon in a drawer with the fork.\n;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed spoon in a drawer with the fork.\n;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed spoon in a drawer with the fork.\n;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed spoon in a drawer with the fork.\n;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed spoon in a drawer with the fork.\n;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed spoon in a drawer with the fork.\n;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed spoon in a drawer with the fork.\n;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed spoon in a drawer with the fork.\n;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed spoon in a drawer with the fork.\n;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed spoon in a drawer with the fork.\n;; PDDL guess 1 for 'place a washed spoon in a drawer with the fork.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spoon-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a washed spoon in a drawer with the fork.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a washed spoon in a drawer with the fork.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spoon-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a washed spoon in a drawer with the fork.\"\n;; Official goal name: pick_clean_then_place_in_recep-Fork-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a washed spoon in a drawer with the fork.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spoon-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a washed spoon in a drawer with the fork.\"\n;; Official goal name: pick_clean_then_place_in_recep-Fork-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-15/trial_T20190909_020319_726874": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a slice of heated tomato in a sink.\n;; PDDL guess 1 for 'place a slice of heated tomato in a sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of heated tomato in a sink.\n;; PDDL guess 1 for 'place a slice of heated tomato in a sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of heated tomato in a sink.\n;; PDDL guess 1 for 'place a slice of heated tomato in a sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of heated tomato in a sink.\n;; PDDL guess 1 for 'place a slice of heated tomato in a sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of heated tomato in a sink.\n;; PDDL guess 1 for 'place a slice of heated tomato in a sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of heated tomato in a sink.\n;; PDDL guess 1 for 'place a slice of heated tomato in a sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of heated tomato in a sink.\n;; PDDL guess 1 for 'place a slice of heated tomato in a sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of heated tomato in a sink.\n;; PDDL guess 1 for 'place a slice of heated tomato in a sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of heated tomato in a sink.\n;; PDDL guess 1 for 'place a slice of heated tomato in a sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of heated tomato in a sink.\n;; PDDL guess 1 for 'place a slice of heated tomato in a sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a slice of heated tomato in a sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a slice of heated tomato in a sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a slice of heated tomato in a sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a slice of heated tomato in a sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a slice of heated tomato in a sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Bowl-None-DeskLamp-327/trial_T20190907_094422_792919": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp on the desk while holding the bowl.\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn on the lamp on the desk while holding the bowl.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'turn on the lamp on the desk while holding the bowl.'\n;; Official goal name: look_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for 'turn on the lamp on the desk while holding the bowl.'\n;; Official goal name: look_at_obj_in_light-Spatula-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o SpatulaType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for 'turn on the lamp on the desk while holding the bowl.'\n;; Official goal name: look_at_obj_in_light-Whisk-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WhiskType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for 'turn on the lamp on the desk while holding the bowl.'\n;; Official goal name: look_at_obj_in_light-PenType-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-20/trial_T20190906_161453_754806": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled mug in a coffee maker.\n;; PDDL guess 1 for 'place a chilled mug in a coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a chilled mug in a coffee maker.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_and_place_cooled-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_and_place_cooled-Ladle-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_and_place_cooled-ForkType-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a chilled mug in a coffee maker.\"\n;; Official goal name: pick_and_place_cooled-SpoonType-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190918_162404_957531": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a slice of tomato in the fridge.\n;; PDDL guess 1 for 'place a slice of tomato in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a slice of tomato in the fridge.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a slice of tomato in the fridge.\"\n;; Official goal name: pick_and_place_simple-SpoonType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a slice of tomato in the fridge.\"\n;; Official goal name: pick_and_place_simple-PlateType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a slice of tomato in the fridge.\"\n;; Official goal name: pick_and_place_simple-TomatoType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a slice of tomato in the fridge.\"\n;; Official goal name: pick_and_place_simple-KnifeType-None-FridgeType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Laptop-None-FloorLamp-205/trial_T20190907_130015_600297": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a laptop by the dim light of a living room.\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a laptop by the dim light of a living room.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 2 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-TableLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot TableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 3 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-LivingRoomLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot LivingRoomLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 4 for 'examine a laptop by the dim light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-CeilingLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot CeilingLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"
        ]
    },
    "train/pick_and_place_simple-Book-None-Cabinet-310/trial_T20190908_154222_896076": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the book in the desk cabinet.\n;; PDDL guess 1 for 'put the book in the desk cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the book in the desk cabinet.\n;; PDDL guess 1 for 'put the book in the desk cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the book in the desk cabinet.\n;; PDDL guess 1 for 'put the book in the desk cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the book in the desk cabinet.\n;; PDDL guess 1 for 'put the book in the desk cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the book in the desk cabinet.\n;; PDDL guess 1 for 'put the book in the desk cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the book in the desk cabinet.\n;; PDDL guess 1 for 'put the book in the desk cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the book in the desk cabinet.\n;; PDDL guess 1 for 'put the book in the desk cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the book in the desk cabinet.\n;; PDDL guess 1 for 'put the book in the desk cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the book in the desk cabinet.\n;; PDDL guess 1 for 'put the book in the desk cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the book in the desk cabinet.\n;; PDDL guess 1 for 'put the book in the desk cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the book in the desk cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put the book in the desk cabinet.\"\n;; Official goal name: pick_and_place_simple-Book-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put the book in the desk cabinet.\"\n;; Official goal name: pick_and_place_simple-Magazine-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MagazineType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put the book in the desk cabinet.\"\n;; Official goal name: pick_and_place_simple-Notebook-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NotebookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put the book in the desk cabinet.\"\n;; Official goal name: pick_and_place_simple-Journal-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o JournalType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan-12/trial_T20190907_121108_221602": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated slice of bred in a bin.\n;; PDDL guess 1 for 'put a heated slice of bred in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bred in a bin.\n;; PDDL guess 1 for 'put a heated slice of bred in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bred in a bin.\n;; PDDL guess 1 for 'put a heated slice of bred in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bred in a bin.\n;; PDDL guess 1 for 'put a heated slice of bred in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bred in a bin.\n;; PDDL guess 1 for 'put a heated slice of bred in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bred in a bin.\n;; PDDL guess 1 for 'put a heated slice of bred in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bred in a bin.\n;; PDDL guess 1 for 'put a heated slice of bred in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bred in a bin.\n;; PDDL guess 1 for 'put a heated slice of bred in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bred in a bin.\n;; PDDL guess 1 for 'put a heated slice of bred in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bred in a bin.\n;; PDDL guess 1 for 'put a heated slice of bred in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated slice of bred in a bin.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a heated slice of bred in a bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a heated slice of bred in a bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-TrashCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r TrashCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a heated slice of bred in a bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-WasteBasket\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r WasteBasketType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a heated slice of bred in a bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-RecyclingBin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r RecyclingBinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-Box-None-Sofa-205/trial_T20190907_214830_497445": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ntake the box from the kitchen table , put it on the red couch.\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the kitchen table , put it on the red couch.\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the kitchen table , put it on the red couch.\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the kitchen table , put it on the red couch.\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the kitchen table , put it on the red couch.\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the kitchen table , put it on the red couch.\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the kitchen table , put it on the red couch.\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the kitchen table , put it on the red couch.\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the kitchen table , put it on the red couch.\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the kitchen table , put it on the red couch.\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.take the box from the kitchen table , put it on the red couch.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'take the box from the kitchen table , put it on the red couch.'\n;; Official goal name: pick_and_place_simple-Box-None-Sofa\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'take the box from the kitchen table , put it on the red couch.'\n;; Official goal name: pick_and_place_simple-ToyBox-None-Sofa\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToyBoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'take the box from the kitchen table , put it on the red couch.'\n;; Official goal name: pick_and_place_simple-StorageBox-None-Sofa\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o StorageBoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'take the box from the kitchen table , put it on the red couch.'\n;; Official goal name: pick_and_place_simple-ShoeBox-None-Sofa\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ShoeBoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-Box-None-Sofa-220/trial_T20190907_165527_462462": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ntake the box from the table , put it on the couch.\n;; PDDL guess 1 for 'take the box from the table , put it on the couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the table , put it on the couch.\n;; PDDL guess 1 for 'take the box from the table , put it on the couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the table , put it on the couch.\n;; PDDL guess 1 for 'take the box from the table , put it on the couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the table , put it on the couch.\n;; PDDL guess 1 for 'take the box from the table , put it on the couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the table , put it on the couch.\n;; PDDL guess 1 for 'take the box from the table , put it on the couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the table , put it on the couch.\n;; PDDL guess 1 for 'take the box from the table , put it on the couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the table , put it on the couch.\n;; PDDL guess 1 for 'take the box from the table , put it on the couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the table , put it on the couch.\n;; PDDL guess 1 for 'take the box from the table , put it on the couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the table , put it on the couch.\n;; PDDL guess 1 for 'take the box from the table , put it on the couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the box from the table , put it on the couch.\n;; PDDL guess 1 for 'take the box from the table , put it on the couch.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.take the box from the table , put it on the couch.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'take the box from the table, put it on the couch.'\n;; Official goal name: pick_and_place_simple-Box-None-Sofa\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'take the box from the table, put it on the couch.'\n;; Official goal name: pick_and_place_simple-Box-None-Sofa\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'take the box from the table, put it on the couch.'\n;; Official goal name: pick_and_place_simple-Box-None-Sofa\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'take the box from the table, put it on the couch.'\n;; Official goal name: pick_and_place_simple-Box-None-Sofa\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Pot-None-CounterTop-17/trial_T20190908_235146_972017": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nchill a pot and place it on the counter.\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pot and place it on the counter.\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pot and place it on the counter.\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pot and place it on the counter.\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pot and place it on the counter.\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pot and place it on the counter.\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pot and place it on the counter.\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pot and place it on the counter.\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pot and place it on the counter.\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pot and place it on the counter.\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.chill a pot and place it on the counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'chill a pot and place it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-BreadSliced-None-DiningTable-19/trial_T20190907_203429_844011": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice the bread , cook a slice put it on the table.\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bread , cook a slice put it on the table.\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bread , cook a slice put it on the table.\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bread , cook a slice put it on the table.\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bread , cook a slice put it on the table.\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bread , cook a slice put it on the table.\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bread , cook a slice put it on the table.\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bread , cook a slice put it on the table.\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bread , cook a slice put it on the table.\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bread , cook a slice put it on the table.\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice the bread , cook a slice put it on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'slice the bread , cook a slice put it on the table.'\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'slice the bread , cook a slice put it on the table.'\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'slice the bread , cook a slice put it on the table.'\n;; Official goal name: pick_heat_then_place_in_recep-LettuceSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'slice the bread , cook a slice put it on the table.'\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n"
        ]
    },
    "train/pick_and_place_simple-CD-None-Dresser-323/trial_T20190908_005459_168199": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cd that ' s on top of the desk to on top of the dresser.\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move the cd that ' s on top of the desk to on top of the dresser.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Official goal name: move_object-CD-None-Dresser-12\n(:goal\n    (exists (?lo - location)\n        (exists (?ll - location)\n            (exists (?o - object)\n                (and\n                    (objectType ?o CDType)\n                    (atLocation ?o ?lo)\n                    (atLocation ?ll ?lo)\n                    (receptacleType ?ll DeskType)\n                    (receptacleType ?r DresserType)\n                    (not (= ?lo ?ll))\n                    (inReceptacle ?o ?ll)\n                    (not (inReceptacle ?o ?r))\n                )))))\n",
            "\n;; PDDL guess 2 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Official goal name: move_object-CD-None-Dresser-12\n(:goal\n    (exists (?lo - location)\n        (exists (?ll - location)\n            (exists (?o - object)\n                (and\n                    (objectType ?o CDType)\n                    (atLocation ?o ?lo)\n                    (atLocation ?ll ?lo)\n                    (receptacleType ?ll DeskType)\n                    (receptacleType ?r DresserType)\n                    (not (= ?lo ?ll))\n                    (inReceptacle ?o ?ll)\n                    (not (inReceptacle ?o ?r))\n                )))))\n",
            "\n;; PDDL guess 3 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Official goal name: move_object-CD-None-Dresser-12\n(:goal\n    (exists (?lo - location)\n        (exists (?ll - location)\n            (exists (?o - object)\n                (and\n                    (objectType ?o CDType)\n                    (atLocation ?o ?lo)\n                    (atLocation ?ll ?lo)\n                    (receptacleType ?ll DeskType)\n                    (receptacleType ?r DresserType)\n                    (not (= ?lo ?ll))\n                    (inReceptacle ?o ?ll)\n                    (not (inReceptacle ?o ?r))\n                )))))\n",
            "\n;; PDDL guess 4 for 'move the cd that ' s on top of the desk to on top of the dresser.'\n;; Official goal name: move_object-CD-None-Dresser-12\n(:goal\n    (exists (?lo - location)\n        (exists (?ll - location)\n            (exists (?o - object)\n                (and\n                    (objectType ?o CDType)\n                    (atLocation ?o ?lo)\n                    (atLocation ?ll ?lo)\n                    (receptacleType ?ll DeskType)\n                    (receptacleType ?r DresserType)\n                    (not (= ?lo ?ll))\n                    (inReceptacle ?o ?ll)\n                    (not (inReceptacle ?o ?r))\n                )))))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190909_101511_247105": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a chilled tomato slice on the table.\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled tomato slice on the table.\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled tomato slice on the table.\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled tomato slice on the table.\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled tomato slice on the table.\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled tomato slice on the table.\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled tomato slice on the table.\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled tomato slice on the table.\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled tomato slice on the table.\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled tomato slice on the table.\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a chilled tomato slice on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a chilled tomato slice on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171151_027975": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto place an apple in the microwave and cut it into three slices.\n;; PDDL guess 1 for 'to place an apple in the microwave and cut it into three slices.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place an apple in the microwave and cut it into three slices.\n;; PDDL guess 1 for 'to place an apple in the microwave and cut it into three slices.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place an apple in the microwave and cut it into three slices.\n;; PDDL guess 1 for 'to place an apple in the microwave and cut it into three slices.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place an apple in the microwave and cut it into three slices.\n;; PDDL guess 1 for 'to place an apple in the microwave and cut it into three slices.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place an apple in the microwave and cut it into three slices.\n;; PDDL guess 1 for 'to place an apple in the microwave and cut it into three slices.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place an apple in the microwave and cut it into three slices.\n;; PDDL guess 1 for 'to place an apple in the microwave and cut it into three slices.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place an apple in the microwave and cut it into three slices.\n;; PDDL guess 1 for 'to place an apple in the microwave and cut it into three slices.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place an apple in the microwave and cut it into three slices.\n;; PDDL guess 1 for 'to place an apple in the microwave and cut it into three slices.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place an apple in the microwave and cut it into three slices.\n;; PDDL guess 1 for 'to place an apple in the microwave and cut it into three slices.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place an apple in the microwave and cut it into three slices.\n;; PDDL guess 1 for 'to place an apple in the microwave and cut it into three slices.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to place an apple in the microwave and cut it into three slices.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"to place an apple in the microwave and cut it into three slices.\"\n;; Official goal name: pick_and_place_simple-Apple-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"to place an apple in the microwave and cut it into three slices.\"\n;; Official goal name: pick_and_place_simple-Apple-None-OttomanType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r OttomanType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"to place an apple in the microwave and cut it into three slices.\"\n;; Official goal name: pick_and_place_simple-Apple-None-DresserType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"to place an apple in the microwave and cut it into three slices.\"\n;; Official goal name: pick_and_place_simple-Apple-None-CounterTopType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Apple-None-Fridge-12/trial_T20190909_151749_236238": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated apple in the fridge.\n;; PDDL guess 1 for 'put a heated apple in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated apple in the fridge.\n;; PDDL guess 1 for 'put a heated apple in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated apple in the fridge.\n;; PDDL guess 1 for 'put a heated apple in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated apple in the fridge.\n;; PDDL guess 1 for 'put a heated apple in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated apple in the fridge.\n;; PDDL guess 1 for 'put a heated apple in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated apple in the fridge.\n;; PDDL guess 1 for 'put a heated apple in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated apple in the fridge.\n;; PDDL guess 1 for 'put a heated apple in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated apple in the fridge.\n;; PDDL guess 1 for 'put a heated apple in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated apple in the fridge.\n;; PDDL guess 1 for 'put a heated apple in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated apple in the fridge.\n;; PDDL guess 1 for 'put a heated apple in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated apple in the fridge.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a heated apple in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a heated apple in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a heated apple in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a heated apple in the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Mug-None-Cabinet-6/trial_T20190908_034250_033547": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nheat up mug , put mug in cabinet.\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat up mug , put mug in cabinet.\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat up mug , put mug in cabinet.\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat up mug , put mug in cabinet.\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat up mug , put mug in cabinet.\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat up mug , put mug in cabinet.\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat up mug , put mug in cabinet.\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat up mug , put mug in cabinet.\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat up mug , put mug in cabinet.\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat up mug , put mug in cabinet.\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.heat up mug , put mug in cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'heat up mug , put mug in cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Potato-None-SinkBasin-14/trial_T20190908_231758_432650": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a warm potato in the sink.\n;; PDDL guess 1 for 'put a warm potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm potato in the sink.\n;; PDDL guess 1 for 'put a warm potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm potato in the sink.\n;; PDDL guess 1 for 'put a warm potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm potato in the sink.\n;; PDDL guess 1 for 'put a warm potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm potato in the sink.\n;; PDDL guess 1 for 'put a warm potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm potato in the sink.\n;; PDDL guess 1 for 'put a warm potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm potato in the sink.\n;; PDDL guess 1 for 'put a warm potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm potato in the sink.\n;; PDDL guess 1 for 'put a warm potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm potato in the sink.\n;; PDDL guess 1 for 'put a warm potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm potato in the sink.\n;; PDDL guess 1 for 'put a warm potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Potato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a warm potato in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a warm potato in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a warm potato in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a warm potato in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a warm potato in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-Pen-None-Shelf-310/trial_T20190909_113535_223329": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove pen from desk to shelf.\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove pen from desk to shelf.\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove pen from desk to shelf.\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove pen from desk to shelf.\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove pen from desk to shelf.\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove pen from desk to shelf.\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove pen from desk to shelf.\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove pen from desk to shelf.\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove pen from desk to shelf.\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove pen from desk to shelf.\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move pen from desk to shelf.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'move pen from desk to shelf.'\n;; Simplified Goal: \npick_and_place_simple-Pen-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Kettle-None-CounterTop-18/trial_T20190908_025529_009980": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a washed kettle on a kitchen counter top.\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Kettle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed kettle on a kitchen counter top.\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Kettle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed kettle on a kitchen counter top.\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Kettle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed kettle on a kitchen counter top.\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Kettle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed kettle on a kitchen counter top.\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Kettle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed kettle on a kitchen counter top.\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Kettle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed kettle on a kitchen counter top.\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Kettle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed kettle on a kitchen counter top.\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Kettle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed kettle on a kitchen counter top.\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Kettle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a washed kettle on a kitchen counter top.\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Kettle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a washed kettle on a kitchen counter top.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'place a washed kettle on a kitchen counter top.'\n;; Official goal name: pick_clean_then_place_in_recep-Kettle-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KettleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'place a washed kettle on a kitchen counter top.'\n;; Official goal name: pick_clean_then_place_in_recep-PanType-None-CounterTopType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'place a washed kettle on a kitchen counter top.'\n;; Official goal name: pick_clean_then_place_in_recep-TeapotType-None-CounterTopType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeapotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'place a washed kettle on a kitchen counter top.'\n;; Official goal name: pick_clean_then_place_in_recep-CoffeeMachineType-None-CounterTopType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeMachineType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan-2/trial_T20190908_105707_315068": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of bread in the trash can.\n;; PDDL guess 1 for 'put a heated slice of bread in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated slice of bread in the trash can.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a heated slice of bread in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a heated slice of bread in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a heated slice of bread in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a heated slice of bread in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Tomato-None-SideTable-21/trial_T20190909_012146_287700": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated tomato on the small black table.\n;; PDDL guess 1 for 'put a heated tomato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato on the small black table.\n;; PDDL guess 1 for 'put a heated tomato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato on the small black table.\n;; PDDL guess 1 for 'put a heated tomato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato on the small black table.\n;; PDDL guess 1 for 'put a heated tomato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato on the small black table.\n;; PDDL guess 1 for 'put a heated tomato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato on the small black table.\n;; PDDL guess 1 for 'put a heated tomato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato on the small black table.\n;; PDDL guess 1 for 'put a heated tomato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato on the small black table.\n;; PDDL guess 1 for 'put a heated tomato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato on the small black table.\n;; PDDL guess 1 for 'put a heated tomato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato on the small black table.\n;; PDDL guess 1 for 'put a heated tomato on the small black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated tomato on the small black table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a heated tomato on the small black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a heated tomato on the small black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a heated tomato on the small black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-CoffeeTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a heated tomato on the small black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-CoffeeTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Mug-None-CoffeeMachine-25/trial_T20190907_223942_379753": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nclean mug in sink and return to coffee maker.\n;; PDDL guess 1 for 'clean mug in sink and return to coffee maker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.clean mug in sink and return to coffee maker.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"clean mug in sink and return to coffee maker.\"\n;; Official goal name: pick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"clean mug in sink and return to coffee maker.\"\n;; Official goal name: pick_clean_then_place_in_recep-CupType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"clean mug in sink and return to coffee maker.\"\n;; Official goal name: pick_clean_then_place_in_recep-MugType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"clean mug in sink and return to coffee maker.\"\n;; Official goal name: pick_clean_then_place_in_recep-CupType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n)))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-BreadSliced-None-GarbageCan-16/trial_T20190907_232412_371318": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a hot slice of bread in a bin.\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a hot slice of bread in a bin.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'put a hot slice of bread in a bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Pot-None-DiningTable-23/trial_T20190909_061357_391676": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a pan in the fridge and put it on the counter.\n;; PDDL guess 1 for 'chill a pan in the fridge and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.chill a pan in the fridge and put it on the counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"chill a pan in the fridge and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"chill a pan in the fridge and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"chill a pan in the fridge and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-CoffeeTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"chill a pan in the fridge and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan-20/trial_T20190909_125307_108909": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a chilled piece of sliced lettuce in a green bin.\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled piece of sliced lettuce in a green bin.\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled piece of sliced lettuce in a green bin.\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled piece of sliced lettuce in a green bin.\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled piece of sliced lettuce in a green bin.\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled piece of sliced lettuce in a green bin.\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled piece of sliced lettuce in a green bin.\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled piece of sliced lettuce in a green bin.\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled piece of sliced lettuce in a green bin.\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled piece of sliced lettuce in a green bin.\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a chilled piece of sliced lettuce in a green bin.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'put a chilled piece of sliced lettuce in a green bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n"
        ]
    },
    "train/pick_and_place_simple-Book-None-Cabinet-310/trial_T20190908_154238_160623": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove a book into a cabinet.\n;; PDDL guess 1 for 'move a book into a cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a book into a cabinet.\n;; PDDL guess 1 for 'move a book into a cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a book into a cabinet.\n;; PDDL guess 1 for 'move a book into a cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a book into a cabinet.\n;; PDDL guess 1 for 'move a book into a cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a book into a cabinet.\n;; PDDL guess 1 for 'move a book into a cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a book into a cabinet.\n;; PDDL guess 1 for 'move a book into a cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a book into a cabinet.\n;; PDDL guess 1 for 'move a book into a cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a book into a cabinet.\n;; PDDL guess 1 for 'move a book into a cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a book into a cabinet.\n;; PDDL guess 1 for 'move a book into a cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a book into a cabinet.\n;; PDDL guess 1 for 'move a book into a cabinet.'\n;; Simplified Goal: \npick_and_place_simple-Book-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move a book into a cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"move a book into a cabinet.\"\n;; Official goal name: pick_and_place_simple-Book-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"move a book into a cabinet.\"\n;; Official goal name: pick_and_place_simple-Book-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"move a book into a cabinet.\"\n;; Official goal name: pick_and_place_simple-Book-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"move a book into a cabinet.\"\n;; Official goal name: pick_and_place_simple-Book-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BookType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Egg-None-GarbageCan-8/trial_T20190909_120617_866099": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a microwaved egg in the garbage.\n;; PDDL guess 1 for 'put a microwaved egg in the garbage.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved egg in the garbage.\n;; PDDL guess 1 for 'put a microwaved egg in the garbage.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved egg in the garbage.\n;; PDDL guess 1 for 'put a microwaved egg in the garbage.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved egg in the garbage.\n;; PDDL guess 1 for 'put a microwaved egg in the garbage.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved egg in the garbage.\n;; PDDL guess 1 for 'put a microwaved egg in the garbage.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved egg in the garbage.\n;; PDDL guess 1 for 'put a microwaved egg in the garbage.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved egg in the garbage.\n;; PDDL guess 1 for 'put a microwaved egg in the garbage.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved egg in the garbage.\n;; PDDL guess 1 for 'put a microwaved egg in the garbage.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved egg in the garbage.\n;; PDDL guess 1 for 'put a microwaved egg in the garbage.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved egg in the garbage.\n;; PDDL guess 1 for 'put a microwaved egg in the garbage.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a microwaved egg in the garbage.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a microwaved egg in the garbage.\"\n;; Official goal name: pick_heat_then_place_in_recep-Egg-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a microwaved egg in the garbage.\"\n;; Official goal name: pick_heat_then_place_in_recep-Potato-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a microwaved egg in the garbage.\"\n;; Official goal name: pick_heat_then_place_in_recep-Ladle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a microwaved egg in the garbage.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleType-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-KeyChain-None-FloorLamp-205/trial_T20190909_114633_189769": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a key chain by the dim natural light of a living room.\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a key chain by the dim natural light of a living room.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 2 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 3 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 4 for 'examine a key chain by the dim natural light of a living room.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"
        ]
    },
    "train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220204_504890": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nuse the knife on the table by the stove to slice the cabbage on the white table.\n;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife on the table by the stove to slice the cabbage on the white table.\n;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife on the table by the stove to slice the cabbage on the white table.\n;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife on the table by the stove to slice the cabbage on the white table.\n;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife on the table by the stove to slice the cabbage on the white table.\n;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife on the table by the stove to slice the cabbage on the white table.\n;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife on the table by the stove to slice the cabbage on the white table.\n;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife on the table by the stove to slice the cabbage on the white table.\n;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife on the table by the stove to slice the cabbage on the white table.\n;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife on the table by the stove to slice the cabbage on the white table.\n;; PDDL guess 1 for 'use the knife on the table by the stove to slice the cabbage on the white table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.use the knife on the table by the stove to slice the cabbage on the white table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"use the knife on the table by the stove to slice the cabbage on the white table.\"\n;; Official goal name: pick_and_place_simple-CabbageSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CabbageType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"use the knife on the table by the stove to slice the cabbage on the white table.\"\n;; Official goal name: pick_and_place_simple-LettuceSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"use the knife on the table by the stove to slice the cabbage on the white table.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"use the knife on the table by the stove to slice the cabbage on the white table.\"\n;; Official goal name: pick_and_place_simple-OnionSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OnionType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-Plunger-None-Cabinet-405/trial_T20190908_120726_695995": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove the plunger from next to the toilet to the cupboard under the sink.\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger from next to the toilet to the cupboard under the sink.\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger from next to the toilet to the cupboard under the sink.\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger from next to the toilet to the cupboard under the sink.\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger from next to the toilet to the cupboard under the sink.\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger from next to the toilet to the cupboard under the sink.\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger from next to the toilet to the cupboard under the sink.\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger from next to the toilet to the cupboard under the sink.\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger from next to the toilet to the cupboard under the sink.\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger from next to the toilet to the cupboard under the sink.\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move the plunger from next to the toilet to the cupboard under the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Official goal name: pick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Official goal name: pick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Official goal name: pick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'move the plunger from next to the toilet to the cupboard under the sink.'\n;; Official goal name: pick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-CreditCard-None-FloorLamp-228/trial_T20190908_113131_743545": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a credit card and turn a lamp on.\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up a credit card and turn a lamp on.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 2 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 3 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 4 for 'pick up a credit card and turn a lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-BreadSliced-None-Microwave-19/trial_T20190911_082218_676174": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove a slice of cold bread to the microwave.\n;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a slice of cold bread to the microwave.\n;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a slice of cold bread to the microwave.\n;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a slice of cold bread to the microwave.\n;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a slice of cold bread to the microwave.\n;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a slice of cold bread to the microwave.\n;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a slice of cold bread to the microwave.\n;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a slice of cold bread to the microwave.\n;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a slice of cold bread to the microwave.\n;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a slice of cold bread to the microwave.\n;; PDDL guess 1 for 'move a slice of cold bread to the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move a slice of cold bread to the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"move a slice of cold bread to the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-BreadSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"move a slice of cold bread to the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Toast-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToastType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"move a slice of cold bread to the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Sandwich-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SandwichType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"move a slice of cold bread to the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-BreadLoaf-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadLoafType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_and_place_simple-Box-None-DiningTable-223/trial_T20190907_201444_740434": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a box on a table.\n;; PDDL guess 1 for 'put a box on a table.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a box on a table.\n;; PDDL guess 1 for 'put a box on a table.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a box on a table.\n;; PDDL guess 1 for 'put a box on a table.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a box on a table.\n;; PDDL guess 1 for 'put a box on a table.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a box on a table.\n;; PDDL guess 1 for 'put a box on a table.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a box on a table.\n;; PDDL guess 1 for 'put a box on a table.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a box on a table.\n;; PDDL guess 1 for 'put a box on a table.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a box on a table.\n;; PDDL guess 1 for 'put a box on a table.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a box on a table.\n;; PDDL guess 1 for 'put a box on a table.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a box on a table.\n;; PDDL guess 1 for 'put a box on a table.'\n;; Simplified Goal: \npick_and_place_simple-Box-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a box on a table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a box on a table.\"\n;; Official goal name: pick_and_place_simple-Box-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a box on a table.\"\n;; Official goal name: pick_and_place_simple-Box-None-CoffeeTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a box on a table.\"\n;; Official goal name: pick_and_place_simple-Box-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a box on a table.\"\n;; Official goal name: pick_and_place_simple-Box-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BoxType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-PotatoSliced-None-DiningTable-27/trial_T20190908_030342_504066": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto cool a slice of potato and place it on the table.\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of potato and place it on the table.\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of potato and place it on the table.\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of potato and place it on the table.\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of potato and place it on the table.\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of potato and place it on the table.\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of potato and place it on the table.\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of potato and place it on the table.\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of potato and place it on the table.\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of potato and place it on the table.\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to cool a slice of potato and place it on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-CarrotSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CarrotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AvocadoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AvocadoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'to cool a slice of potato and place it on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-OnionSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OnionType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-TomatoSliced-None-Fridge-15/trial_T20190909_005143_132045": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice in the refrigerator.\n;; PDDL guess 1 for 'place a cooked tomato slice in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cooked tomato slice in the refrigerator.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a cooked tomato slice in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a cooked tomato slice in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-OnionSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OnionType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a cooked tomato slice in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-CheeseSlice-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CheeseType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a cooked tomato slice in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-CucumberSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CucumberType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-LettuceSliced-None-DiningTable-24/trial_T20190906_220147_111155": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nuse the knife to cut the lettuce on the table.\n;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife to cut the lettuce on the table.\n;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife to cut the lettuce on the table.\n;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife to cut the lettuce on the table.\n;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife to cut the lettuce on the table.\n;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife to cut the lettuce on the table.\n;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife to cut the lettuce on the table.\n;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife to cut the lettuce on the table.\n;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife to cut the lettuce on the table.\n;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse the knife to cut the lettuce on the table.\n;; PDDL guess 1 for 'use the knife to cut the lettuce on the table.'\n;; Simplified Goal: \npick_and_place_simple-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.use the knife to cut the lettuce on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"use the knife to cut the lettuce on the table.\"\n;; Official goal name: pick_and_place_simple-LettuceSliced-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"use the knife to cut the lettuce on the table.\"\n;; Official goal name: pick_and_place_simple-CabbageType-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CabbageType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"use the knife to cut the lettuce on the table.\"\n;; Official goal name: pick_and_place_simple-CheeseType-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CheeseType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"use the knife to cut the lettuce on the table.\"\n;; Official goal name: pick_and_place_simple-CarrotType-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CarrotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Bowl-None-DeskLamp-302/trial_T20190907_190751_819937": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ninspect a bowl by lamplight.\n;; PDDL guess 1 for 'inspect a bowl by lamplight.'\n;; Simplified Goal: \nlook_at_obj_in_light-Bowl-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.inspect a bowl by lamplight.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"inspect a bowl by lamplight.\"\n;; Official goal name: look_at_obj_in_light-Bowl-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n        (exists (?o - object)\n        (exists (?r - receptacle)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for \"inspect a bowl by lamplight.\"\n;; Official goal name: look_at_obj_in_light-Bowl-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n        (exists (?o - object)\n        (exists (?r - receptacle)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for \"inspect a bowl by lamplight.\"\n;; Official goal name: look_at_obj_in_light-Bowl-None-TableLampType\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n        (exists (?o - object)\n        (exists (?r - receptacle)\n            (and \n                (objectType ?ot TableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for \"inspect a bowl by lamplight.\"\n;; Official goal name: look_at_obj_in_light-Bowl-None-TableLampType\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n        (exists (?o - object)\n        (exists (?r - receptacle)\n            (and \n                (objectType ?ot TableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o BowlType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-TomatoSliced-None-Fridge-19/trial_T20190907_162559_502428": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cooked tomato slice inside the fridge.\n;; PDDL guess 1 for 'place a cooked tomato slice inside the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice inside the fridge.\n;; PDDL guess 1 for 'place a cooked tomato slice inside the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice inside the fridge.\n;; PDDL guess 1 for 'place a cooked tomato slice inside the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice inside the fridge.\n;; PDDL guess 1 for 'place a cooked tomato slice inside the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice inside the fridge.\n;; PDDL guess 1 for 'place a cooked tomato slice inside the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice inside the fridge.\n;; PDDL guess 1 for 'place a cooked tomato slice inside the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice inside the fridge.\n;; PDDL guess 1 for 'place a cooked tomato slice inside the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice inside the fridge.\n;; PDDL guess 1 for 'place a cooked tomato slice inside the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice inside the fridge.\n;; PDDL guess 1 for 'place a cooked tomato slice inside the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked tomato slice inside the fridge.\n;; PDDL guess 1 for 'place a cooked tomato slice inside the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cooked tomato slice inside the fridge.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a cooked tomato slice inside the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a cooked tomato slice inside the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a cooked tomato slice inside the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-OnionSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OnionType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a cooked tomato slice inside the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Cup-None-Cabinet-18/trial_T20190907_150623_388922": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a warmed glass in the cabinet.\n;; PDDL guess 1 for 'put a warmed glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed glass in the cabinet.\n;; PDDL guess 1 for 'put a warmed glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed glass in the cabinet.\n;; PDDL guess 1 for 'put a warmed glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed glass in the cabinet.\n;; PDDL guess 1 for 'put a warmed glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed glass in the cabinet.\n;; PDDL guess 1 for 'put a warmed glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed glass in the cabinet.\n;; PDDL guess 1 for 'put a warmed glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed glass in the cabinet.\n;; PDDL guess 1 for 'put a warmed glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed glass in the cabinet.\n;; PDDL guess 1 for 'put a warmed glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed glass in the cabinet.\n;; PDDL guess 1 for 'put a warmed glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed glass in the cabinet.\n;; PDDL guess 1 for 'put a warmed glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a warmed glass in the cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a warmed glass in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-Glass-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a warmed glass in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a warmed glass in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-BowlType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a warmed glass in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-CupType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-BreadSliced-None-Microwave-6/trial_T20190909_115420_904817": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold piece of bread in the microwave.\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cold piece of bread in the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-BreadType-100-MicrowaveType-100;\n\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-SliceOfBreadType-100-MicrowaveType-100;\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SliceOfBreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a cold piece of bread in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-Sliced-Microwave;\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-RemoteControl-None-FloorLamp-210/trial_T20190909_005614_868994": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a remote in the light of a tall lamp.\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a remote in the light of a tall lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for 'examine a remote in the light of a tall lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-RemoteControl-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o RemoteControlType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/look_at_obj_in_light-CreditCard-None-FloorLamp-216/trial_T20190907_160540_519104": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nhold a credit card while turning on a lamp.\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.hold a credit card while turning on a lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for 'hold a credit card while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CreditCard-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CreditCardType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan-23/trial_T20190909_034745_393039": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a slice of heated tomato in the trash bin.\n;; PDDL guess 1 for 'throw away a slice of heated tomato in the trash bin.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.throw away a slice of heated tomato in the trash bin.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"throw away a slice of heated tomato in the trash bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"throw away a slice of heated tomato in the trash bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"throw away a slice of heated tomato in the trash bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-RecycleBin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r RecycleBinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"throw away a slice of heated tomato in the trash bin.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Pen-None-FloorLamp-212/trial_T20190907_000516_042741": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ngrab the pen from the table , turn on the floor lamp.\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.grab the pen from the table , turn on the floor lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'grab the pen from the table , turn on the floor lamp.'\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n(:goal\n    (and\n        (exists (?a - agent)\n        (exists (?l - location)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and\n                (atLocation ?a ?l)\n                (objectAtLocation ?o ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n                (objectAtLocation ?ot ?l)\n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot)\n            )\n        ))))\n    )\n)\n",
            "\n;; PDDL guess 2 for 'grab the pen from the table , turn on the floor lamp.'\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n(:goal\n    (and\n        (exists (?a - agent)\n        (exists (?l - location)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and\n                (atLocation ?a ?l)\n                (objectAtLocation ?o ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n                (objectAtLocation ?ot ?l)\n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot)\n            )\n        ))))\n    )\n)\n",
            "\n;; PDDL guess 3 for 'grab the pen from the table , turn on the floor lamp.'\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n(:goal\n    (and\n        (exists (?a - agent)\n        (exists (?l - location)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and\n                (atLocation ?a ?l)\n                (objectAtLocation ?o ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n                (objectAtLocation ?ot ?l)\n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot)\n            )\n        ))))\n    )\n)\n",
            "\n;; PDDL guess 4 for 'grab the pen from the table , turn on the floor lamp.'\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n(:goal\n    (and\n        (exists (?a - agent)\n        (exists (?l - location)\n        (exists (?o - object)\n        (exists (?ot - object)\n            (and\n                (atLocation ?a ?l)\n                (objectAtLocation ?o ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n                (objectAtLocation ?ot ?l)\n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot)\n            )\n        ))))\n    )\n)\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin-24/trial_T20190918_232253_006450": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cooked slice of potato in the sink.\n;; PDDL guess 1 for 'place a cooked slice of potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked slice of potato in the sink.\n;; PDDL guess 1 for 'place a cooked slice of potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked slice of potato in the sink.\n;; PDDL guess 1 for 'place a cooked slice of potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked slice of potato in the sink.\n;; PDDL guess 1 for 'place a cooked slice of potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked slice of potato in the sink.\n;; PDDL guess 1 for 'place a cooked slice of potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked slice of potato in the sink.\n;; PDDL guess 1 for 'place a cooked slice of potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked slice of potato in the sink.\n;; PDDL guess 1 for 'place a cooked slice of potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked slice of potato in the sink.\n;; PDDL guess 1 for 'place a cooked slice of potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked slice of potato in the sink.\n;; PDDL guess 1 for 'place a cooked slice of potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooked slice of potato in the sink.\n;; PDDL guess 1 for 'place a cooked slice of potato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cooked slice of potato in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a cooked slice of potato in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a cooked slice of potato in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a cooked slice of potato in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a cooked slice of potato in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Mug-None-CoffeeMachine-24/trial_T20190906_185346_459023": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean mug in the coffee machine.\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a clean mug in the coffee machine.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'put a clean mug in the coffee machine.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan-25/trial_T20190907_165437_326025": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nthrow away a cooked slice of potato.\n;; PDDL guess 1 for 'throw away a cooked slice of potato.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a cooked slice of potato.\n;; PDDL guess 1 for 'throw away a cooked slice of potato.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a cooked slice of potato.\n;; PDDL guess 1 for 'throw away a cooked slice of potato.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a cooked slice of potato.\n;; PDDL guess 1 for 'throw away a cooked slice of potato.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a cooked slice of potato.\n;; PDDL guess 1 for 'throw away a cooked slice of potato.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a cooked slice of potato.\n;; PDDL guess 1 for 'throw away a cooked slice of potato.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a cooked slice of potato.\n;; PDDL guess 1 for 'throw away a cooked slice of potato.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a cooked slice of potato.\n;; PDDL guess 1 for 'throw away a cooked slice of potato.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a cooked slice of potato.\n;; PDDL guess 1 for 'throw away a cooked slice of potato.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a cooked slice of potato.\n;; PDDL guess 1 for 'throw away a cooked slice of potato.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.throw away a cooked slice of potato.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"throw away a cooked slice of potato.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"throw away a cooked slice of potato.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"throw away a cooked slice of potato.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"throw away a cooked slice of potato.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233941_496641": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nuse a large metal knife to slice up a tomato on the counter.\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a large metal knife to slice up a tomato on the counter.\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a large metal knife to slice up a tomato on the counter.\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a large metal knife to slice up a tomato on the counter.\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a large metal knife to slice up a tomato on the counter.\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a large metal knife to slice up a tomato on the counter.\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a large metal knife to slice up a tomato on the counter.\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a large metal knife to slice up a tomato on the counter.\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a large metal knife to slice up a tomato on the counter.\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a large metal knife to slice up a tomato on the counter.\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.use a large metal knife to slice up a tomato on the counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Official goal name: pick_and_place_simple-AppleSliced-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Official goal name: pick_and_place_simple-TomatoType-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'use a large metal knife to slice up a tomato on the counter.'\n;; Official goal name: pick_and_place_simple-AppleSliceType-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-Candle-None-CounterTop-417/trial_T20190909_142343_223524": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a green candle on a counter.\n;; PDDL guess 1 for 'place a green candle on a counter.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a green candle on a counter.\n;; PDDL guess 1 for 'place a green candle on a counter.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a green candle on a counter.\n;; PDDL guess 1 for 'place a green candle on a counter.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a green candle on a counter.\n;; PDDL guess 1 for 'place a green candle on a counter.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a green candle on a counter.\n;; PDDL guess 1 for 'place a green candle on a counter.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a green candle on a counter.\n;; PDDL guess 1 for 'place a green candle on a counter.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a green candle on a counter.\n;; PDDL guess 1 for 'place a green candle on a counter.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a green candle on a counter.\n;; PDDL guess 1 for 'place a green candle on a counter.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a green candle on a counter.\n;; PDDL guess 1 for 'place a green candle on a counter.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a green candle on a counter.\n;; PDDL guess 1 for 'place a green candle on a counter.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a green candle on a counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a green candle on a counter.\"\n;; Official goal name: pick_and_place_simple-Candle-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"place a green candle on a counter.\"\n;; Official goal name: pick_and_place_simple-Candle-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"place a green candle on a counter.\"\n;; Official goal name: pick_and_place_simple-Candle-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"place a green candle on a counter.\"\n;; Official goal name: pick_and_place_simple-Candle-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-TomatoSliced-None-DiningTable-18/trial_T20190914_033809_050650": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n;; PDDL guess 1 for 'pick up knife , cut tomato , place into fridge , remove from fridge , place on table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up knife , cut tomato , place into fridge , remove from fridge , place on table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"pick up knife , cut tomato , place into fridge , remove from fridge , place on table.\"\n;; Official goal name: pick_and_place_simple-Knife-None-TableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r TableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"pick up knife , cut tomato , place into fridge , remove from fridge , place on table.\"\n;; Official goal name: slice_object-Tomato\n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (sliceable ?o) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"pick up knife , cut tomato , place into fridge , remove from fridge , place on table.\"\n;; Official goal name: pick_and_place_simple-CabinetType-None-Knife\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (receptacleType ?r CabinetType)\n                (objectType ?o KnifeType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"pick up knife , cut tomato , place into fridge , remove from fridge , place on table.\"\n;; Official goal name: pick_and_place_simple-TableType-None-Tomato\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (receptacleType ?r TableType)\n                (objectType ?o TomatoType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Tomato-None-DiningTable-11/trial_T20190908_220012_692282": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cold tomato on the table.\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold tomato on the table.\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold tomato on the table.\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold tomato on the table.\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold tomato on the table.\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold tomato on the table.\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold tomato on the table.\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold tomato on the table.\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold tomato on the table.\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold tomato on the table.\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cold tomato on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a cold tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put a cold tomato on the table.'\n;; Simplified Goal:\npick_cool_then_place_in_recep-Mug-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a cold tomato on the table.'\n;; Simplified Goal:\npick_cool_then_place_in_recep-Plate-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a cold tomato on the table.'\n;; Simplified Goal:\npick_cool_then_place_in_recep-Bowl-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Laptop-None-DeskLamp-323/trial_T20190908_014226_839563": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a notebook computer by the light of a lamp.\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o LaptopType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a notebook computer by the light of a lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: look_at_obj_in_light-Laptop-None-DeskLamp\n\n(:goal\n    (exists (?a - agent)\n        (exists (?r - receptacle)\n            (exists (?o - object)\n                (exists (?ot - object)\n                    (exists (?l - location)\n                        (and \n                            (objectType ?ot DeskLampType)\n                            (toggleable ?ot)\n                            (isToggled ?ot) \n                            (objectAtLocation ?ot ?l)\n                            (atLocation ?a ?l)\n                            (objectType ?o LaptopType)\n                            (holds ?a ?o)\n                        )\n                    )\n                )\n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 2 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: look_at_obj_in_light-Laptop-None-TableLamp\n\n(:goal\n    (exists (?a - agent)\n        (exists (?r - receptacle)\n            (exists (?o - object)\n                (exists (?ot - object)\n                    (exists (?l - location)\n                        (and \n                            (objectType ?ot TableLampType)\n                            (toggleable ?ot)\n                            (isToggled ?ot) \n                            (objectAtLocation ?ot ?l)\n                            (atLocation ?a ?l)\n                            (objectType ?o LaptopType)\n                            (holds ?a ?o)\n                        )\n                    )\n                )\n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 3 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: look_at_obj_in_light-Laptop-None-FloorLamp\n(:goal\n    (exists (?a - agent)\n        (exists (?r - receptacle)\n            (exists (?o - object)\n                (exists (?ot - object)\n                    (exists (?l - location)\n                        (and \n                            (objectType ?ot FloorLampType)\n                            (toggleable ?ot)\n                            (isToggled ?ot) \n                            (objectAtLocation ?ot ?l)\n                            (atLocation ?a ?l)\n                            (objectType ?o LaptopType)\n                            (holds ?a ?o)\n                        )\n                    )\n                )\n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 4 for 'examine a notebook computer by the light of a lamp.'\n;; Simplified Goal: look_at_obj_in_light-Laptop-None-DeskLamp\n(:goal\n    (exists (?a - agent)\n        (exists (?r - receptacle)\n            (exists (?o - object)\n                (exists (?ot - object)\n                    (exists (?l - location)\n                        (and \n                            (objectType ?ot DeskLampType)\n                            (toggleable ?ot)\n                            (isToggled ?ot) \n                            (objectAtLocation ?ot ?l)\n                            (atLocation ?a ?l)\n                            (objectType ?o LaptopType)\n                            (holds ?a ?o)\n                        )\n                    )\n                )\n            )\n        )\n    )\n)\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Tomato-None-SinkBasin-6/trial_T20190907_204944_538890": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a warmed tomato in the sink.\n;; PDDL guess 1 for 'put a warmed tomato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed tomato in the sink.\n;; PDDL guess 1 for 'put a warmed tomato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed tomato in the sink.\n;; PDDL guess 1 for 'put a warmed tomato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed tomato in the sink.\n;; PDDL guess 1 for 'put a warmed tomato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed tomato in the sink.\n;; PDDL guess 1 for 'put a warmed tomato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed tomato in the sink.\n;; PDDL guess 1 for 'put a warmed tomato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed tomato in the sink.\n;; PDDL guess 1 for 'put a warmed tomato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed tomato in the sink.\n;; PDDL guess 1 for 'put a warmed tomato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed tomato in the sink.\n;; PDDL guess 1 for 'put a warmed tomato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed tomato in the sink.\n;; PDDL guess 1 for 'put a warmed tomato in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Tomato-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a warmed tomato in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a warmed tomato in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a warmed tomato in the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-Tomato-None-Sink\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a warmed tomato in the sink.\"\n;; Official goal name: pick_then_place_in_recep-Tomato-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a warmed tomato in the sink.\"\n;; Official goal name: pick_then_place_in_recep-Tomato-None-Sink\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkType)\n                (inReceptacle ?o ?r)\n                (heatable ?o) \n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Potato-None-GarbageCan-6/trial_T20190907_164308_014097": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cooled potato in a garbage bin.\n;; PDDL guess 1 for 'place a cooled potato in a garbage bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled potato in a garbage bin.\n;; PDDL guess 1 for 'place a cooled potato in a garbage bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled potato in a garbage bin.\n;; PDDL guess 1 for 'place a cooled potato in a garbage bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled potato in a garbage bin.\n;; PDDL guess 1 for 'place a cooled potato in a garbage bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled potato in a garbage bin.\n;; PDDL guess 1 for 'place a cooled potato in a garbage bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled potato in a garbage bin.\n;; PDDL guess 1 for 'place a cooled potato in a garbage bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled potato in a garbage bin.\n;; PDDL guess 1 for 'place a cooled potato in a garbage bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled potato in a garbage bin.\n;; PDDL guess 1 for 'place a cooled potato in a garbage bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled potato in a garbage bin.\n;; PDDL guess 1 for 'place a cooled potato in a garbage bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled potato in a garbage bin.\n;; PDDL guess 1 for 'place a cooled potato in a garbage bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cooled potato in a garbage bin.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a cooled potato in a garbage bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-Potato-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a cooled potato in a garbage bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a cooled potato in a garbage bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-Cup-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a cooled potato in a garbage bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-Plate-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-AppleSliced-None-SideTable-21/trial_T20190908_030402_887474": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a microwaved apple slice on top of the black table.\n;; PDDL guess 1 for 'place a microwaved apple slice on top of the black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a microwaved apple slice on top of the black table.\n;; PDDL guess 1 for 'place a microwaved apple slice on top of the black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a microwaved apple slice on top of the black table.\n;; PDDL guess 1 for 'place a microwaved apple slice on top of the black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a microwaved apple slice on top of the black table.\n;; PDDL guess 1 for 'place a microwaved apple slice on top of the black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a microwaved apple slice on top of the black table.\n;; PDDL guess 1 for 'place a microwaved apple slice on top of the black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a microwaved apple slice on top of the black table.\n;; PDDL guess 1 for 'place a microwaved apple slice on top of the black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a microwaved apple slice on top of the black table.\n;; PDDL guess 1 for 'place a microwaved apple slice on top of the black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a microwaved apple slice on top of the black table.\n;; PDDL guess 1 for 'place a microwaved apple slice on top of the black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a microwaved apple slice on top of the black table.\n;; PDDL guess 1 for 'place a microwaved apple slice on top of the black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a microwaved apple slice on top of the black table.\n;; PDDL guess 1 for 'place a microwaved apple slice on top of the black table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a microwaved apple slice on top of the black table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a microwaved apple slice on top of the black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a microwaved apple slice on top of the black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-CoffeeTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a microwaved apple slice on top of the black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a microwaved apple slice on top of the black table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Lettuce-None-DiningTable-27/trial_T20190907_175045_014819": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ncool the cabbage in the refrigerator , put it back on the table.\n;; PDDL guess 1 for 'cool the cabbage in the refrigerator , put it back on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool the cabbage in the refrigerator , put it back on the table.\n;; PDDL guess 1 for 'cool the cabbage in the refrigerator , put it back on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool the cabbage in the refrigerator , put it back on the table.\n;; PDDL guess 1 for 'cool the cabbage in the refrigerator , put it back on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool the cabbage in the refrigerator , put it back on the table.\n;; PDDL guess 1 for 'cool the cabbage in the refrigerator , put it back on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool the cabbage in the refrigerator , put it back on the table.\n;; PDDL guess 1 for 'cool the cabbage in the refrigerator , put it back on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool the cabbage in the refrigerator , put it back on the table.\n;; PDDL guess 1 for 'cool the cabbage in the refrigerator , put it back on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool the cabbage in the refrigerator , put it back on the table.\n;; PDDL guess 1 for 'cool the cabbage in the refrigerator , put it back on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool the cabbage in the refrigerator , put it back on the table.\n;; PDDL guess 1 for 'cool the cabbage in the refrigerator , put it back on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool the cabbage in the refrigerator , put it back on the table.\n;; PDDL guess 1 for 'cool the cabbage in the refrigerator , put it back on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool the cabbage in the refrigerator , put it back on the table.\n;; PDDL guess 1 for 'cool the cabbage in the refrigerator , put it back on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.cool the cabbage in the refrigerator , put it back on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"cool the cabbage in the refrigerator , put it back on the table.\"\n;; Official goal name: pick_cool_then_place_in_recep-Lettuce-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"cool the cabbage in the refrigerator , put it back on the table.\"\n;; Official goal name: pick_cool_then_place_in_recep-Kale-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KaleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"cool the cabbage in the refrigerator , put it back on the table.\"\n;; Official goal name: pick_cool_then_place_in_recep-Cabbage-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CabbageType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"cool the cabbage in the refrigerator , put it back on the table.\"\n;; Official goal name: pick_cool_then_place_in_recep-Kale-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KaleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-CellPhone-None-Desk-327/trial_T20190907_162400_978293": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove the cell phone from the shelves to desk.\n;; PDDL guess 1 for 'move the cell phone from the shelves to desk.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cell phone from the shelves to desk.\n;; PDDL guess 1 for 'move the cell phone from the shelves to desk.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cell phone from the shelves to desk.\n;; PDDL guess 1 for 'move the cell phone from the shelves to desk.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cell phone from the shelves to desk.\n;; PDDL guess 1 for 'move the cell phone from the shelves to desk.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cell phone from the shelves to desk.\n;; PDDL guess 1 for 'move the cell phone from the shelves to desk.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cell phone from the shelves to desk.\n;; PDDL guess 1 for 'move the cell phone from the shelves to desk.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cell phone from the shelves to desk.\n;; PDDL guess 1 for 'move the cell phone from the shelves to desk.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cell phone from the shelves to desk.\n;; PDDL guess 1 for 'move the cell phone from the shelves to desk.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cell phone from the shelves to desk.\n;; PDDL guess 1 for 'move the cell phone from the shelves to desk.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the cell phone from the shelves to desk.\n;; PDDL guess 1 for 'move the cell phone from the shelves to desk.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Desk\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move the cell phone from the shelves to desk.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"move the cell phone from the shelves to desk.\"\n;; Official goal name: pick_and_place_simple-CellPhone-None-Desk\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"move the cell phone from the shelves to desk.\"\n;; Official goal name: pick_and_place_simple-CellPhone-None-Desk\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"move the cell phone from the shelves to desk.\"\n;; Official goal name: pick_and_place_simple-CellPhone-None-Desk\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"move the cell phone from the shelves to desk.\"\n;; Official goal name: pick_and_place_simple-CellPhone-None-Desk\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Bowl-None-Cabinet-18/trial_T20190908_031815_585714": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput in the chilled bowl inside the cabinet.\n;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bowl-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput in the chilled bowl inside the cabinet.\n;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bowl-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput in the chilled bowl inside the cabinet.\n;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bowl-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput in the chilled bowl inside the cabinet.\n;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bowl-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput in the chilled bowl inside the cabinet.\n;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bowl-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput in the chilled bowl inside the cabinet.\n;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bowl-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput in the chilled bowl inside the cabinet.\n;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bowl-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput in the chilled bowl inside the cabinet.\n;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bowl-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput in the chilled bowl inside the cabinet.\n;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bowl-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput in the chilled bowl inside the cabinet.\n;; PDDL guess 1 for 'put in the chilled bowl inside the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bowl-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put in the chilled bowl inside the cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put in the chilled bowl inside the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Bowl-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put in the chilled bowl inside the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Plate-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put in the chilled bowl inside the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Cup-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put in the chilled bowl inside the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Mug-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-KeyChain-None-Sofa-229/trial_T20190908_123359_988104": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the keys on the couch.\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the keys on the couch.\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the keys on the couch.\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the keys on the couch.\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the keys on the couch.\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the keys on the couch.\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the keys on the couch.\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the keys on the couch.\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the keys on the couch.\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the keys on the couch.\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the keys on the couch.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put the keys on the couch.'\n;; Official goal name: pick_and_place_simple-KeyChain-None-Sofa\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put the keys on the couch.'\n;; Official goal name: pick_and_place_simple-KeyChain-None-ArmChairType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put the keys on the couch.'\n;; Official goal name: pick_and_place_simple-KeyChain-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put the keys on the couch.'\n;; Official goal name: pick_and_place_simple-KeyChain-None-CoffeeTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-CellPhone-None-DeskLamp-318/trial_T20190909_005934_726946": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up a smartphone , turn on a lamp.\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up a smartphone , turn on a lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 2 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 3 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 4 for 'pick up a smartphone , turn on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CellPhone-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CellPhoneType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"
        ]
    },
    "train/look_at_obj_in_light-KeyChain-None-FloorLamp-203/trial_T20190909_060210_354107": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the keys and then turn the lamp on behind the blue chair.\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up the keys and then turn the lamp on behind the blue chair.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n    (exists (?a - agent)\n        (exists (?r - receptacle)\n            (exists (?o - object)\n                (exists (?ot - object)\n                    (exists (?l - location)\n                        (and \n                            (objectType ?ot FloorLampType)\n                            (toggleable ?ot)\n                            (isToggled ?ot) \n                            (objectAtLocation ?ot ?l)\n                            (atLocation ?a ?l)\n                            (objectType ?o KeyChainType)\n                            (holds ?a ?o)\n                        )\n                    )\n                )\n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 2 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n    (exists (?a - agent)\n        (exists (?r - receptacle)\n            (exists (?o - object)\n                (exists (?ot - object)\n                    (exists (?l - location)\n                        (and \n                            (objectType ?ot FloorLampType)\n                            (toggleable ?ot)\n                            (isToggled ?ot) \n                            (objectAtLocation ?ot ?l)\n                            (atLocation ?a ?l)\n                            (objectType ?o KeyChainType)\n                            (holds ?a ?o)\n                        )\n                    )\n                )\n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 3 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n    (exists (?a - agent)\n        (exists (?r - receptacle)\n            (exists (?o - object)\n                (exists (?ot - object)\n                    (exists (?l - location)\n                        (and \n                            (objectType ?ot FloorLampType)\n                            (toggleable ?ot)\n                            (isToggled ?ot) \n                            (objectAtLocation ?ot ?l)\n                            (atLocation ?a ?l)\n                            (objectType ?o KeyChainType)\n                            (holds ?a ?o)\n                        )\n                    )\n                )\n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 4 for 'pick up the keys and then turn the lamp on behind the blue chair.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n    (exists (?a - agent)\n        (exists (?r - receptacle)\n            (exists (?o - object)\n                (exists (?ot - object)\n                    (exists (?l - location)\n                        (and \n                            (objectType ?ot FloorLampType)\n                            (toggleable ?ot)\n                            (isToggled ?ot) \n                            (objectAtLocation ?ot ?l)\n                            (atLocation ?a ?l)\n                            (objectType ?o KeyChainType)\n                            (holds ?a ?o)\n                        )\n                    )\n                )\n            )\n        )\n    )\n)\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-AppleSliced-None-SinkBasin-18/trial_T20190909_005234_628704": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a microwaved slice of apple in the sink.\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of apple in the sink.\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of apple in the sink.\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of apple in the sink.\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of apple in the sink.\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of apple in the sink.\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of apple in the sink.\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of apple in the sink.\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of apple in the sink.\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of apple in the sink.\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a microwaved slice of apple in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a microwaved slice of apple in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Mug-None-Cabinet-30/trial_T20190909_044843_334172": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated mug into a cupboard.\n;; PDDL guess 1 for 'put a heated mug into a cupboard.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug into a cupboard.\n;; PDDL guess 1 for 'put a heated mug into a cupboard.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug into a cupboard.\n;; PDDL guess 1 for 'put a heated mug into a cupboard.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug into a cupboard.\n;; PDDL guess 1 for 'put a heated mug into a cupboard.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug into a cupboard.\n;; PDDL guess 1 for 'put a heated mug into a cupboard.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug into a cupboard.\n;; PDDL guess 1 for 'put a heated mug into a cupboard.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug into a cupboard.\n;; PDDL guess 1 for 'put a heated mug into a cupboard.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug into a cupboard.\n;; PDDL guess 1 for 'put a heated mug into a cupboard.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug into a cupboard.\n;; PDDL guess 1 for 'put a heated mug into a cupboard.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated mug into a cupboard.\n;; PDDL guess 1 for 'put a heated mug into a cupboard.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated mug into a cupboard.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a heated mug into a cupboard.\"\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a heated mug into a cupboard.\"\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a heated mug into a cupboard.\"\n;; Official goal name: pick_heat_then_place_in_recep-CupType-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a heated mug into a cupboard.\"\n;; Official goal name: pick_heat_then_place_in_recep-CupType-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Pot-None-DiningTable-27/trial_T20190909_013328_302952": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up a pan from the stove , refrigerate it , put in on the table.\n;; PDDL guess 1 for 'pick up a pan from the stove , refrigerate it , put in on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up a pan from the stove , refrigerate it , put in on the table.\n;; PDDL guess 1 for 'pick up a pan from the stove , refrigerate it , put in on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up a pan from the stove , refrigerate it , put in on the table.\n;; PDDL guess 1 for 'pick up a pan from the stove , refrigerate it , put in on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up a pan from the stove , refrigerate it , put in on the table.\n;; PDDL guess 1 for 'pick up a pan from the stove , refrigerate it , put in on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up a pan from the stove , refrigerate it , put in on the table.\n;; PDDL guess 1 for 'pick up a pan from the stove , refrigerate it , put in on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up a pan from the stove , refrigerate it , put in on the table.\n;; PDDL guess 1 for 'pick up a pan from the stove , refrigerate it , put in on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up a pan from the stove , refrigerate it , put in on the table.\n;; PDDL guess 1 for 'pick up a pan from the stove , refrigerate it , put in on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up a pan from the stove , refrigerate it , put in on the table.\n;; PDDL guess 1 for 'pick up a pan from the stove , refrigerate it , put in on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up a pan from the stove , refrigerate it , put in on the table.\n;; PDDL guess 1 for 'pick up a pan from the stove , refrigerate it , put in on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up a pan from the stove , refrigerate it , put in on the table.\n;; PDDL guess 1 for 'pick up a pan from the stove , refrigerate it , put in on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up a pan from the stove , refrigerate it , put in on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"pick up a pan from the stove , refrigerate it , put in on the table.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"pick up a pan from the stove , refrigerate it , put in on the table.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"pick up a pan from the stove , refrigerate it , put in on the table.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"pick up a pan from the stove , refrigerate it , put in on the table.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Cup-None-Cabinet-27/trial_T20190908_123907_725964": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a warm glass in the cabinet.\n;; PDDL guess 1 for 'place a warm glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a warm glass in the cabinet.\n;; PDDL guess 1 for 'place a warm glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a warm glass in the cabinet.\n;; PDDL guess 1 for 'place a warm glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a warm glass in the cabinet.\n;; PDDL guess 1 for 'place a warm glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a warm glass in the cabinet.\n;; PDDL guess 1 for 'place a warm glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a warm glass in the cabinet.\n;; PDDL guess 1 for 'place a warm glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a warm glass in the cabinet.\n;; PDDL guess 1 for 'place a warm glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a warm glass in the cabinet.\n;; PDDL guess 1 for 'place a warm glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a warm glass in the cabinet.\n;; PDDL guess 1 for 'place a warm glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a warm glass in the cabinet.\n;; PDDL guess 1 for 'place a warm glass in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a warm glass in the cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a warm glass in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-Glass-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a warm glass in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a warm glass in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-CoffeeCup-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeCupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a warm glass in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TeaCup-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeaCupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Mug-None-Shelf-7/trial_T20190907_022308_669309": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nheat the white cup from table in the microwave , put it on the shelf.\n;; PDDL guess 1 for 'heat the white cup from table in the microwave , put it on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat the white cup from table in the microwave , put it on the shelf.\n;; PDDL guess 1 for 'heat the white cup from table in the microwave , put it on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat the white cup from table in the microwave , put it on the shelf.\n;; PDDL guess 1 for 'heat the white cup from table in the microwave , put it on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat the white cup from table in the microwave , put it on the shelf.\n;; PDDL guess 1 for 'heat the white cup from table in the microwave , put it on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat the white cup from table in the microwave , put it on the shelf.\n;; PDDL guess 1 for 'heat the white cup from table in the microwave , put it on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat the white cup from table in the microwave , put it on the shelf.\n;; PDDL guess 1 for 'heat the white cup from table in the microwave , put it on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat the white cup from table in the microwave , put it on the shelf.\n;; PDDL guess 1 for 'heat the white cup from table in the microwave , put it on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat the white cup from table in the microwave , put it on the shelf.\n;; PDDL guess 1 for 'heat the white cup from table in the microwave , put it on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat the white cup from table in the microwave , put it on the shelf.\n;; PDDL guess 1 for 'heat the white cup from table in the microwave , put it on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat the white cup from table in the microwave , put it on the shelf.\n;; PDDL guess 1 for 'heat the white cup from table in the microwave , put it on the shelf.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.heat the white cup from table in the microwave , put it on the shelf.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"heat the white cup from table in the microwave, put it on the shelf.\"\n;; Official goal name: pick_heat_then_place_in_recep-Cup-None-Shelf\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"heat the white cup from table in the microwave, put it on the shelf.\"\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Shelf\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"heat the white cup from table in the microwave, put it on the shelf.\"\n;; Official goal name: pick_heat_then_place_in_recep-CoffeeCup-None-Shelf\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeCupType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"heat the white cup from table in the microwave, put it on the shelf.\"\n;; Official goal name: pick_heat_then_place_in_recep-TeaCup-None-Shelf\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeaCupType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-SoapBar-None-BathtubBasin-411/trial_T20190907_033311_020938": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap on the edge of the bathtub.\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place wet soap on the edge of the bathtub.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'place wet soap on the edge of the bathtub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Pot-None-Cabinet-1/trial_T20190908_184157_888194": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold pot in the cabinet.\n;; PDDL guess 1 for 'put a cold pot in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cold pot in the cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a cold pot in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pot-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a cold pot in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Pan-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a cold pot in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Bowl-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a cold pot in the cabinet.\"\n;; Official goal name: pick_cool_then_place_in_recep-Plate-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Cup-None-Fridge-22/trial_T20190908_072702_772430": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a heated cup inside the refrigerator.\n;; PDDL guess 1 for 'place a heated cup inside the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated cup inside the refrigerator.\n;; PDDL guess 1 for 'place a heated cup inside the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated cup inside the refrigerator.\n;; PDDL guess 1 for 'place a heated cup inside the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated cup inside the refrigerator.\n;; PDDL guess 1 for 'place a heated cup inside the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated cup inside the refrigerator.\n;; PDDL guess 1 for 'place a heated cup inside the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated cup inside the refrigerator.\n;; PDDL guess 1 for 'place a heated cup inside the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated cup inside the refrigerator.\n;; PDDL guess 1 for 'place a heated cup inside the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated cup inside the refrigerator.\n;; PDDL guess 1 for 'place a heated cup inside the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated cup inside the refrigerator.\n;; PDDL guess 1 for 'place a heated cup inside the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated cup inside the refrigerator.\n;; PDDL guess 1 for 'place a heated cup inside the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a heated cup inside the refrigerator.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a heated cup inside the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-Cup-None-Fridge\n\n;; PDDL goal:\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)   \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a heated cup inside the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-Fridge\n\n;; PDDL goal:\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)   \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a heated cup inside the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-TeaCup-None-Fridge\n\n;; PDDL goal:\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeaCupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)   \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a heated cup inside the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-CoffeeCup-None-Fridge\n\n;; PDDL goal:\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeCupType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)   \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Pillow-None-DeskLamp-314/trial_T20190908_115844_093537": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at the pillow in the light.\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.look at the pillow in the light.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-Window\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot WindowType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for 'look at the pillow in the light.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/pick_and_place_simple-BreadSliced-None-SideTable-3/trial_T20190907_000233_574076": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a slice of bread on a stand.\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of bread on a stand.\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of bread on a stand.\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of bread on a stand.\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of bread on a stand.\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of bread on a stand.\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of bread on a stand.\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of bread on a stand.\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of bread on a stand.\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of bread on a stand.\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a slice of bread on a stand.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSlice-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSlice-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSlice-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a slice of bread on a stand.'\n;; Simplified Goal: \npick_and_place_simple-BreadSlice-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Pen-None-FloorLamp-221/trial_T20190907_180910_112762": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a floor lamp.\n;; PDDL guess 1 for 'examine a pen by the light of a floor lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a pen by the light of a floor lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL goal guess 1 for \"examine a pen by the light of a floor lamp.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-FloorLamp\n(:goal\n\t(exists (?a - agent)\n\t(exists (?r - receptacle)\n\t(exists (?o - object)\n\t(exists (?ot - object)\n\t(exists (?l - location)\n\t\t(and \n\t\t\t(objectType ?ot FloorLampType)\n\t\t\t(toggleable ?ot)\n\t\t\t(isToggled ?ot)\n\t\t\t(objectAtLocation ?ot ?l)\n\t\t\t(atLocation ?a ?l)\n\t\t\t(objectType ?o PenType)\n\t\t\t(holds ?a ?o)\n\t\t)\n\t))))))\n\n",
            "\n;; PDDL goal guess 2 for \"examine a pen by the light of a floor lamp.\"\n;; Official goal name: look_at_obj_in_light-Marker-None-FloorLamp\n(:goal\n\t(exists (?a - agent)\n\t(exists (?r - receptacle)\n\t(exists (?o - object)\n\t(exists (?ot - object)\n\t(exists (?l - location)\n\t\t(and \n\t\t\t(objectType ?ot FloorLampType)\n\t\t\t(toggleable ?ot)\n\t\t\t(isToggled ?ot)\n\t\t\t(objectAtLocation ?ot ?l)\n\t\t\t(atLocation ?a ?l)\n\t\t\t(objectType ?o MarkerType)\n\t\t\t(holds ?a ?o)\n\t\t)\n\t))))))\n\n",
            "\n;; PDDL goal guess 3 for \"examine a pen by the light of a floor lamp.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-CeilingLamp\n(:goal\n\t(exists (?a - agent)\n\t(exists (?r - receptacle)\n\t(exists (?o - object)\n\t(exists (?ot - object)\n\t(exists (?l - location)\n\t\t(and \n\t\t\t(objectType ?ot CeilingLampType)\n\t\t\t(toggleable ?ot)\n\t\t\t(isToggled ?ot)\n\t\t\t(objectAtLocation ?ot ?l)\n\t\t\t(atLocation ?a ?l)\n\t\t\t(objectType ?o PenType)\n\t\t\t(holds ?a ?o)\n\t\t)\n\t))))))\n\n",
            "\n;; PDDL goal guess 4 for \"examine a pen by the light of a floor lamp.\"\n;; Official goal name: look_at_obj_in_light-Pencil-None-FloorLamp\n(:goal\n\t(exists (?a - agent)\n\t(exists (?r - receptacle)\n\t(exists (?o - object)\n\t(exists (?ot - object)\n\t(exists (?l - location)\n\t\t(and \n\t\t\t(objectType ?ot FloorLampType)\n\t\t\t(toggleable ?ot)\n\t\t\t(isToggled ?ot)\n\t\t\t(objectAtLocation ?ot ?l)\n\t\t\t(atLocation ?a ?l)\n\t\t\t(objectType ?o PencilType)\n\t\t\t(holds ?a ?o)\n\t\t)\n\t))))))\n\n"
        ]
    },
    "train/pick_and_place_simple-Cloth-None-SinkBasin-417/trial_T20190908_120422_949453": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove a rag from a cabinet to the sink.\n;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'\n;; Simplified Goal: \npick_and_place_simple-Cloth-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a rag from a cabinet to the sink.\n;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'\n;; Simplified Goal: \npick_and_place_simple-Cloth-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a rag from a cabinet to the sink.\n;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'\n;; Simplified Goal: \npick_and_place_simple-Cloth-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a rag from a cabinet to the sink.\n;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'\n;; Simplified Goal: \npick_and_place_simple-Cloth-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a rag from a cabinet to the sink.\n;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'\n;; Simplified Goal: \npick_and_place_simple-Cloth-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a rag from a cabinet to the sink.\n;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'\n;; Simplified Goal: \npick_and_place_simple-Cloth-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a rag from a cabinet to the sink.\n;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'\n;; Simplified Goal: \npick_and_place_simple-Cloth-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a rag from a cabinet to the sink.\n;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'\n;; Simplified Goal: \npick_and_place_simple-Cloth-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a rag from a cabinet to the sink.\n;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'\n;; Simplified Goal: \npick_and_place_simple-Cloth-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a rag from a cabinet to the sink.\n;; PDDL guess 1 for 'move a rag from a cabinet to the sink.'\n;; Simplified Goal: \npick_and_place_simple-Cloth-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move a rag from a cabinet to the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"move a rag from a cabinet to the sink.\"\n;; Official goal name: pick_and_place_simple-Cloth-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"move a rag from a cabinet to the sink.\"\n;; Official goal name: pick_and_place_simple-Cloth-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"move a rag from a cabinet to the sink.\"\n;; Official goal name: pick_and_place_simple-Pillow-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PillowType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"move a rag from a cabinet to the sink.\"\n;; Official goal name: pick_and_place_simple-Pillow-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PillowType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Pillow-None-FloorLamp-212/trial_T20190907_163730_866373": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on a lamp while holding a red cushion.\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn on a lamp while holding a red cushion.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'turn on a lamp while holding a red cushion.'\n;; Official goal name: look_at_obj_in_light-Pillow-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))\n",
            "\n;; PDDL guess 2 for 'turn on a lamp while holding a red cushion.'\n;; Official goal name: look_at_obj_in_light-Cushion-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CushionType)\n                (holds ?a ?o)\n            )\n    ))))\n",
            "\n;; PDDL guess 3 for 'turn on a lamp while holding a red cushion.'\n;; Official goal name: look_at_obj_in_light-Pillow-None-TableLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot TableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))\n",
            "\n;; PDDL guess 4 for 'turn on a lamp while holding a red cushion.'\n;; Official goal name: look_at_obj_in_light-Cushion-None-TableLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot TableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CushionType)\n                (holds ?a ?o)\n            )\n    ))))\n"
        ]
    },
    "train/look_at_obj_in_light-KeyChain-None-FloorLamp-223/trial_T20190909_110146_114031": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on the lamp while holding the keys.\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Simplified Goal: \nlook_at_obj_in_light-KeyChain-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn on the lamp while holding the keys.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'turn on the lamp while holding the keys.'\n;; Official goal name: look_at_obj_in_light-KeyChain-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o KeyChainType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for 'turn on the lamp while holding the keys.'\n;; Official goal name: pick_heat_then_place_in_recep-KeyChain-None-FloorLamp-Cabinet\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (and \n            (objectType ?o KeyChainType) \n            (receptacleType ?r FloorLampType)\n            (inReceptacle ?o ?r)\n            (toggleable ?r)\n            (isToggled ?r)\n        )\n    )))\n",
            "\n;; PDDL guess 3 for 'turn on the lamp while holding the keys.'\n;; Official goal name: pick_heat_then_place_in_recep-KeyChain-None-FloorLamp-Shelf\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (and \n            (objectType ?o KeyChainType) \n            (receptacleType ?r FloorLampType)\n            (inReceptacle ?o ?r)\n            (toggleable ?r)\n            (isToggled ?r)\n        )\n    )))\n",
            "\n;; PDDL guess 4 for 'turn on the lamp while holding the keys.'\n;; Official goal name: look_at_obj_in_light-KeyChain-None-FloorLamp-Drawer\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (and \n            (objectType ?o KeyChainType) \n            (receptacleType ?r FloorLampType)\n            (inReceptacle ?o ?r)\n            (toggleable ?r)\n            (isToggled ?r)\n        )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Apple-None-GarbageCan-12/trial_T20190908_172302_166350": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warmed apple in the trash can.\n;; PDDL guess 1 for 'put a warmed apple in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a warmed apple in the trash can.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Pear-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PearType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Lemon-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LemonType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a warmed apple in the trash can.\"\n;; Official goal name: pick_heat_then_place_in_recep-Orange-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OrangeType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Tomato-None-DiningTable-23/trial_T20190909_000922_271997": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a rinsed tomato on a table.\n;; PDDL guess 1 for 'place a rinsed tomato on a table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed tomato on a table.\n;; PDDL guess 1 for 'place a rinsed tomato on a table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed tomato on a table.\n;; PDDL guess 1 for 'place a rinsed tomato on a table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed tomato on a table.\n;; PDDL guess 1 for 'place a rinsed tomato on a table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed tomato on a table.\n;; PDDL guess 1 for 'place a rinsed tomato on a table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed tomato on a table.\n;; PDDL guess 1 for 'place a rinsed tomato on a table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed tomato on a table.\n;; PDDL guess 1 for 'place a rinsed tomato on a table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed tomato on a table.\n;; PDDL guess 1 for 'place a rinsed tomato on a table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed tomato on a table.\n;; PDDL guess 1 for 'place a rinsed tomato on a table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed tomato on a table.\n;; PDDL guess 1 for 'place a rinsed tomato on a table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a rinsed tomato on a table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a rinsed tomato on a table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"place a rinsed tomato on a table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"place a rinsed tomato on a table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-CoffeeTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"place a rinsed tomato on a table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Tomato-None-Desk\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-AppleSliced-None-DiningTable-18/trial_T20190909_022438_980686": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto cool a piece of apple and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a piece of apple and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a piece of apple and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a piece of apple and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a piece of apple and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a piece of apple and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a piece of apple and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a piece of apple and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a piece of apple and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a piece of apple and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to cool a piece of apple and place it on the kitchen table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'to cool a piece of apple and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-AppleSliced-None-SinkBasin-4/trial_T20190907_154132_135926": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a slice of cooked apple into the sink.\n;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of cooked apple into the sink.\n;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of cooked apple into the sink.\n;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of cooked apple into the sink.\n;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of cooked apple into the sink.\n;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of cooked apple into the sink.\n;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of cooked apple into the sink.\n;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of cooked apple into the sink.\n;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of cooked apple into the sink.\n;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a slice of cooked apple into the sink.\n;; PDDL guess 1 for 'put a slice of cooked apple into the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-AppleSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a slice of cooked apple into the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a slice of cooked apple into the sink.\"\n;; Official goal name: pick_and_place_simple-AppleSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a slice of cooked apple into the sink.\"\n;; Official goal name: pick_and_place_simple-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a slice of cooked apple into the sink.\"\n;; Official goal name: pick_and_place_simple-PearSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PearType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a slice of cooked apple into the sink.\"\n;; Official goal name: pick_and_place_simple-OrangeSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o OrangeType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Apple-None-Fridge-27/trial_T20190906_220808_492885": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cleaned apple in the fridge.\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned apple in the fridge.\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned apple in the fridge.\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned apple in the fridge.\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned apple in the fridge.\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned apple in the fridge.\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned apple in the fridge.\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned apple in the fridge.\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned apple in the fridge.\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned apple in the fridge.\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cleaned apple in the fridge.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a cleaned apple in the fridge.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Apple-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Cup-None-Cabinet-8/trial_T20190907_170522_408193": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nheat a glass and put it in the cabinet.\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat a glass and put it in the cabinet.\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat a glass and put it in the cabinet.\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat a glass and put it in the cabinet.\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat a glass and put it in the cabinet.\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat a glass and put it in the cabinet.\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat a glass and put it in the cabinet.\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat a glass and put it in the cabinet.\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat a glass and put it in the cabinet.\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nheat a glass and put it in the cabinet.\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Cup-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.heat a glass and put it in the cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'heat a glass and put it in the cabinet.'\n;; Official goal name: pick_heat_then_place_in_recep-Cup-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n",
            "\n;; PDDL guess 2 for 'heat a glass and put it in the cabinet.'\n;; Official goal name: pick_heat_then_place_in_recep-GlassType-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n",
            "\n;; PDDL guess 3 for 'heat a glass and put it in the cabinet.'\n;; Official goal name: pick_heat_then_place_in_recep-GlassbottleType-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n",
            "\n;; PDDL guess 4 for 'heat a glass and put it in the cabinet.'\n;; Official goal name: pick_heat_then_place_in_recep-Winebottle-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WinebottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-AppleSliced-None-Microwave-11/trial_T20190909_152218_676963": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto cool an apple piece as well as place it in the microwave.\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool an apple piece as well as place it in the microwave.\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool an apple piece as well as place it in the microwave.\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool an apple piece as well as place it in the microwave.\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool an apple piece as well as place it in the microwave.\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool an apple piece as well as place it in the microwave.\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool an apple piece as well as place it in the microwave.\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool an apple piece as well as place it in the microwave.\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool an apple piece as well as place it in the microwave.\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool an apple piece as well as place it in the microwave.\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to cool an apple piece as well as place it in the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-ApplePiece-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSlice-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'to cool an apple piece as well as place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-ApplePiece-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-7/trial_T20190908_123421_558588": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated coffee mug in a coffeemaker.\n;; PDDL guess 1 for 'place a heated coffee mug in a coffeemaker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a heated coffee mug in a coffeemaker.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a heated coffee mug in a coffeemaker\"\n;; Official goal name: pick_heat_then_place_in_recep-CoffeeMug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeMugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n",
            "\n;; PDDL guess 2 for \"place a heated coffee mug in a coffeemaker\"\n;; Official goal name: pick_heat_then_place_in_recep-TeaCup-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeaCupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n",
            "\n;; PDDL guess 3 for \"place a heated coffee mug in a coffeemaker\"\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n",
            "\n;; PDDL guess 4 for \"place a heated coffee mug in a coffeemaker\"\n;; Official goal name: pick_heat_then_place_in_recep-CoffeeCup-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CoffeeCupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Apple-None-Microwave-12/trial_T20190911_003046_688848": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold apple in the microwave.\n;; PDDL guess 1 for 'put a cold apple in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Apple-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cold apple in the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Apple-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Apple-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Apple-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a cold apple in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Apple-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n)))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-ButterKnife-None-Drawer-30/trial_T20190908_051931_072703": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean knife in the cabinet drawer.\n;; PDDL guess 1 for 'put the clean knife in the cabinet drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the clean knife in the cabinet drawer.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put the clean knife in the cabinet drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-KnifeType-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put the clean knife in the cabinet drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnifeType-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put the clean knife in the cabinet drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-KnifeType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put the clean knife in the cabinet drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnifeType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-WineBottle-None-Cabinet-16/trial_T20190907_084106_624638": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput chilled wine in the cabinet.\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put chilled wine in the cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put chilled wine in the cabinet.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WineBottle-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-ButterKnife-None-Drawer-2/trial_T20190908_044255_995925": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed knife in a drawer.\n;; PDDL guess 1 for 'place a rinsed knife in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-ButterKnife-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a rinsed knife in a drawer.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-ButterKnife-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spoon-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-WhiskType-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WhiskType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a rinsed knife in a drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-KnifeType-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-Bowl-None-CoffeeTable-201/trial_T20190907_171714_885383": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nset the bowl on the coffee table.\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nset the bowl on the coffee table.\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nset the bowl on the coffee table.\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nset the bowl on the coffee table.\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nset the bowl on the coffee table.\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nset the bowl on the coffee table.\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nset the bowl on the coffee table.\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nset the bowl on the coffee table.\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nset the bowl on the coffee table.\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nset the bowl on the coffee table.\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.set the bowl on the coffee table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Bowl-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Dish-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o DishType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Plate-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'set the bowl on the coffee table.'\n;; Simplified Goal: \npick_and_place_simple-Cup-None-CoffeeTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable-23/trial_T20190907_061945_946479": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a microwaved tomato slice on the counter.\n;; PDDL guess 1 for 'put a microwaved tomato slice on the counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved tomato slice on the counter.\n;; PDDL guess 1 for 'put a microwaved tomato slice on the counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved tomato slice on the counter.\n;; PDDL guess 1 for 'put a microwaved tomato slice on the counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved tomato slice on the counter.\n;; PDDL guess 1 for 'put a microwaved tomato slice on the counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved tomato slice on the counter.\n;; PDDL guess 1 for 'put a microwaved tomato slice on the counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved tomato slice on the counter.\n;; PDDL guess 1 for 'put a microwaved tomato slice on the counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved tomato slice on the counter.\n;; PDDL guess 1 for 'put a microwaved tomato slice on the counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved tomato slice on the counter.\n;; PDDL guess 1 for 'put a microwaved tomato slice on the counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved tomato slice on the counter.\n;; PDDL guess 1 for 'put a microwaved tomato slice on the counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved tomato slice on the counter.\n;; PDDL guess 1 for 'put a microwaved tomato slice on the counter.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a microwaved tomato slice on the counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a microwaved tomato slice on the counter.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a microwaved tomato slice on the counter.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a microwaved tomato slice on the counter.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a microwaved tomato slice on the counter.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Bread-None-CounterTop-7/trial_T20190909_012427_332210": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto chill a loaf of bread and put it on the counter.\n;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto chill a loaf of bread and put it on the counter.\n;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto chill a loaf of bread and put it on the counter.\n;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto chill a loaf of bread and put it on the counter.\n;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto chill a loaf of bread and put it on the counter.\n;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto chill a loaf of bread and put it on the counter.\n;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto chill a loaf of bread and put it on the counter.\n;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto chill a loaf of bread and put it on the counter.\n;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto chill a loaf of bread and put it on the counter.\n;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto chill a loaf of bread and put it on the counter.\n;; PDDL guess 1 for 'to chill a loaf of bread and put it on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to chill a loaf of bread and put it on the counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"to chill a loaf of bread and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Bread-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"to chill a loaf of bread and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Cake-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CakeType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"to chill a loaf of bread and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Toast-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ToastType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"to chill a loaf of bread and put it on the counter.\"\n;; Official goal name: pick_cool_then_place_in_recep-Baguette-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BaguetteType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan-14/trial_T20190908_022829_998348": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cooled slice of apple in the black bin.\n;; PDDL guess 1 for 'place a cooled slice of apple in the black bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled slice of apple in the black bin.\n;; PDDL guess 1 for 'place a cooled slice of apple in the black bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled slice of apple in the black bin.\n;; PDDL guess 1 for 'place a cooled slice of apple in the black bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled slice of apple in the black bin.\n;; PDDL guess 1 for 'place a cooled slice of apple in the black bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled slice of apple in the black bin.\n;; PDDL guess 1 for 'place a cooled slice of apple in the black bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled slice of apple in the black bin.\n;; PDDL guess 1 for 'place a cooled slice of apple in the black bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled slice of apple in the black bin.\n;; PDDL guess 1 for 'place a cooled slice of apple in the black bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled slice of apple in the black bin.\n;; PDDL guess 1 for 'place a cooled slice of apple in the black bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled slice of apple in the black bin.\n;; PDDL guess 1 for 'place a cooled slice of apple in the black bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled slice of apple in the black bin.\n;; PDDL guess 1 for 'place a cooled slice of apple in the black bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cooled slice of apple in the black bin.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a cooled slice of apple in the black bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a cooled slice of apple in the black bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-AppleSliced-None-Box\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r BoxType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a cooled slice of apple in the black bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a cooled slice of apple in the black bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Pan-None-StoveBurner-2/trial_T20190906_215744_388781": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a clean pan on the electric cooker.\n;; PDDL guess 1 for 'place a clean pan on the electric cooker.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Pan-None-StoveBurner\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a clean pan on the electric cooker.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a clean pan on the electric cooker.\"\n;; Official goal name: pick_clean_then_place_in_recep-Pan-None-StoveBurner\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a clean pan on the electric cooker.\"\n;; Official goal name: pick_clean_then_place_in_recep-Pot-None-StoveBurner\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r StoveBurnerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a clean pan on the electric cooker.\"\n;; Official goal name: pick_clean_then_place_in_recep-Pan-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a clean pan on the electric cooker.\"\n;; Official goal name: pick_clean_then_place_in_recep-Pot-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-CD-None-DeskLamp-302/trial_T20190907_154604_364291": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the cd under the light of the table lamp.\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine the cd under the light of the table lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for 'examine the cd under the light of the table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-CD-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o CDType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan-19/trial_T20190908_224803_743034": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled slice of tomato into a bin.\n;; PDDL guess 1 for 'place a chilled slice of tomato into a bin.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a chilled slice of tomato into a bin.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a chilled slice of tomato into a bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a chilled slice of tomato into a bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-TrashCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r TrashCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a chilled slice of tomato into a bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Bin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r BinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a chilled slice of tomato into a bin.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-WasteBasket\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r WasteBasketType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Cloth-None-BathtubBasin-419/trial_T20190909_014042_055607": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a rinsed towel inside a tub.\n;; PDDL guess 1 for 'place a rinsed towel inside a tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a rinsed towel inside a tub.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a rinsed towel inside a tub.\"\n;; Official goal name: pick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a rinsed towel inside a tub.\"\n;; Official goal name: pick_clean_then_place_in_recep-Towel-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TowelType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a rinsed towel inside a tub.\"\n;; Official goal name: pick_clean_then_place_in_recep-Cloth-None-SinkType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a rinsed towel inside a tub.\"\n;; Official goal name: pick_clean_then_place_in_recep-Towel-None-SinkType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TowelType) \n                (receptacleType ?r SinkType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-AppleSliced-None-GarbageCan-19/trial_T20190909_111859_174743": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a chilled apple slice.\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.throw away a chilled apple slice.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PearSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PearType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-TrashCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r TrashCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'throw away a chilled apple slice.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-RecyclingBin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r RecyclingBinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n"
        ]
    },
    "train/pick_and_place_simple-Candle-None-SideTable-420/trial_T20190907_025655_142954": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a candle on a table.\n;; PDDL guess 1 for 'put a candle on a table.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a candle on a table.\n;; PDDL guess 1 for 'put a candle on a table.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a candle on a table.\n;; PDDL guess 1 for 'put a candle on a table.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a candle on a table.\n;; PDDL guess 1 for 'put a candle on a table.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a candle on a table.\n;; PDDL guess 1 for 'put a candle on a table.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a candle on a table.\n;; PDDL guess 1 for 'put a candle on a table.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a candle on a table.\n;; PDDL guess 1 for 'put a candle on a table.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a candle on a table.\n;; PDDL guess 1 for 'put a candle on a table.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a candle on a table.\n;; PDDL guess 1 for 'put a candle on a table.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a candle on a table.\n;; PDDL guess 1 for 'put a candle on a table.'\n;; Simplified Goal: \npick_and_place_simple-Candle-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a candle on a table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a candle on a table.\"\n;; Official goal name: pick_and_place_simple-Candle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a candle on a table.\"\n;; Official goal name: pick_and_place_simple-Candle-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a candle on a table.\"\n;; Official goal name: pick_and_place_simple-Candle-None-CoffeeTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a candle on a table.\"\n;; Official goal name: pick_and_place_simple-Candle-None-BedType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CandleType) \n                (receptacleType ?r BedType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-PotatoSliced-None-Fridge-18/trial_T20190912_110736_098163": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a potato , cook it in the microwave , and put it in the refrigerator.\n;; PDDL guess 1 for 'slice a potato , cook it in the microwave , and put it in the refrigerator.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice a potato , cook it in the microwave , and put it in the refrigerator.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"slice a potato , cook it in the microwave , and put it in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"slice a potato , cook it in the microwave , and put it in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"slice a potato , cook it in the microwave , and put it in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"slice a potato , cook it in the microwave , and put it in the refrigerator.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n                (heatable ?o)\n                (isHot ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-KeyChain-None-Dresser-317/trial_T20190910_184933_511149": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput keys on the dresser.\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput keys on the dresser.\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput keys on the dresser.\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput keys on the dresser.\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput keys on the dresser.\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput keys on the dresser.\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput keys on the dresser.\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput keys on the dresser.\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput keys on the dresser.\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput keys on the dresser.\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put keys on the dresser.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-KeyChain-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KeyChainType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-ButterKnife-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ButterKnifeType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put keys on the dresser.'\n;; Simplified Goal: \npick_and_place_simple-PenType-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PenType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-PotatoSliced-None-Microwave-21/trial_T20190908_064303_598028": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a chilled potato slice inside the microwave.\n;; PDDL guess 1 for 'place a chilled potato slice inside the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled potato slice inside the microwave.\n;; PDDL guess 1 for 'place a chilled potato slice inside the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled potato slice inside the microwave.\n;; PDDL guess 1 for 'place a chilled potato slice inside the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled potato slice inside the microwave.\n;; PDDL guess 1 for 'place a chilled potato slice inside the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled potato slice inside the microwave.\n;; PDDL guess 1 for 'place a chilled potato slice inside the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled potato slice inside the microwave.\n;; PDDL guess 1 for 'place a chilled potato slice inside the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled potato slice inside the microwave.\n;; PDDL guess 1 for 'place a chilled potato slice inside the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled potato slice inside the microwave.\n;; PDDL guess 1 for 'place a chilled potato slice inside the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled potato slice inside the microwave.\n;; PDDL guess 1 for 'place a chilled potato slice inside the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled potato slice inside the microwave.\n;; PDDL guess 1 for 'place a chilled potato slice inside the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a chilled potato slice inside the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a chilled potato slice inside the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a chilled potato slice inside the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a chilled potato slice inside the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a chilled potato slice inside the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-PotatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Spatula-None-CounterTop-19/trial_T20190906_181322_850030": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cleaned spatula on the the counter.\n;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned spatula on the the counter.\n;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned spatula on the the counter.\n;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned spatula on the the counter.\n;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned spatula on the the counter.\n;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned spatula on the the counter.\n;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned spatula on the the counter.\n;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned spatula on the the counter.\n;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned spatula on the the counter.\n;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned spatula on the the counter.\n;; PDDL guess 1 for 'put a cleaned spatula on the the counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cleaned spatula on the the counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a cleaned spatula on the counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spatula-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a cleaned spatula on the counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spatula-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a cleaned spatula on the counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spatula-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a cleaned spatula on the counter.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spatula-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-RemoteControl-None-ArmChair-223/trial_T20190908_163723_604442": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove a remote control to a chair.\n;; PDDL guess 1 for 'move a remote control to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a remote control to a chair.\n;; PDDL guess 1 for 'move a remote control to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a remote control to a chair.\n;; PDDL guess 1 for 'move a remote control to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a remote control to a chair.\n;; PDDL guess 1 for 'move a remote control to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a remote control to a chair.\n;; PDDL guess 1 for 'move a remote control to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a remote control to a chair.\n;; PDDL guess 1 for 'move a remote control to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a remote control to a chair.\n;; PDDL guess 1 for 'move a remote control to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a remote control to a chair.\n;; PDDL guess 1 for 'move a remote control to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a remote control to a chair.\n;; PDDL guess 1 for 'move a remote control to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a remote control to a chair.\n;; PDDL guess 1 for 'move a remote control to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move a remote control to a chair.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"move a remote control to a chair.\"\n;; Official goal name: pick_and_place_simple-RemoteControl-None-ArmChair\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"move a remote control to a chair.\"\n;; Official goal name: pick_and_place_simple-RemoteControl-None-SofaType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"move a remote control to a chair.\"\n;; Official goal name: pick_and_place_simple-RemoteControl-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"move a remote control to a chair.\"\n;; Official goal name: pick_and_place_simple-RemoteControl-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_and_place_simple-CD-None-Shelf-319/trial_T20190908_060915_412301": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cd in the book shelf.\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cd in the book shelf.\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cd in the book shelf.\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cd in the book shelf.\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cd in the book shelf.\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cd in the book shelf.\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cd in the book shelf.\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cd in the book shelf.\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cd in the book shelf.\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cd in the book shelf.\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cd in the book shelf.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-CD-None-BookShelfType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CDType) \n                (receptacleType ?r BookShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-Disk-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o DiskType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a cd in the book shelf.'\n;; Simplified Goal: \npick_and_place_simple-Disk-None-BookShelfType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o DiskType) \n                (receptacleType ?r BookShelfType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Plate-None-FloorLamp-211/trial_T20190907_131058_267698": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine the plate under the light of the lamp.\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Plate-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PlateType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine the plate under the light of the lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-PlateType-None-FloorLampType\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (objectType ?o PlateType)\n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 2 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-PlateType-None-DeskLampType\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (objectType ?o PlateType)\n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 3 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-PlateType-None-TableLampType\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot TableLampType)\n                (objectType ?o PlateType)\n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 4 for 'examine the plate under the light of the lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-PlateType-None-BedsideLampType\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot BedsideLampType)\n                (objectType ?o PlateType)\n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"
        ]
    },
    "train/pick_and_place_simple-Vase-None-Safe-204/trial_T20190919_000336_714640": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a blue vase in the safe on the floor.\n;; PDDL guess 1 for 'put a blue vase in the safe on the floor.'\n;; Simplified Goal: \npick_and_place_simple-Vase-None-Safe\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a blue vase in the safe on the floor.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a blue vase in the safe on the floor.\"\n;; Official goal name: pick_and_place_simple-Vase-None-Safe\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SafeType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a blue vase in the safe on the floor.\"\n;; Official goal name: pick_and_place_simple-Vase-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a blue vase in the safe on the floor.\"\n;; Official goal name: pick_and_place_simple-Vase-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a blue vase in the safe on the floor.\"\n;; Official goal name: pick_and_place_simple-Vase-None-CoffeeTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o VaseType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-Newspaper-None-Sofa-211/trial_T20190906_175004_203092": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove a newspaper from a tv stand to a sofa.\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a newspaper from a tv stand to a sofa.\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a newspaper from a tv stand to a sofa.\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a newspaper from a tv stand to a sofa.\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a newspaper from a tv stand to a sofa.\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a newspaper from a tv stand to a sofa.\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a newspaper from a tv stand to a sofa.\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a newspaper from a tv stand to a sofa.\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a newspaper from a tv stand to a sofa.\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a newspaper from a tv stand to a sofa.\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move a newspaper from a tv stand to a sofa.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'move a newspaper from a tv stand to a sofa.'\n;; Simplified Goal: \npick_and_place_simple-Newspaper-None-Sofa\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o NewspaperType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-TomatoSliced-None-Microwave-12/trial_T20190908_165447_696883": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled tomato in the microwave.\n;; PDDL guess 1 for 'put the chilled tomato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the chilled tomato in the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put the chilled tomato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put the chilled tomato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put the chilled tomato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put the chilled tomato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Mug-None-CoffeeMachine-6/trial_T20190906_204029_896727": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto place a chilled mug in the coffee maker.\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to place a chilled mug in the coffee maker.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Glassbottle-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-WateringCan-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WateringCanType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'to place a chilled mug in the coffee maker.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-SodaCan-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SodaCanType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Plate-None-Shelf-7/trial_T20190906_193846_907707": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a hot plate on top of the shelves in the corner of the kitchen.\n;; PDDL guess 1 for 'place a hot plate on top of the shelves in the corner of the kitchen.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Plate-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a hot plate on top of the shelves in the corner of the kitchen.\n;; PDDL guess 1 for 'place a hot plate on top of the shelves in the corner of the kitchen.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Plate-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a hot plate on top of the shelves in the corner of the kitchen.\n;; PDDL guess 1 for 'place a hot plate on top of the shelves in the corner of the kitchen.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Plate-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a hot plate on top of the shelves in the corner of the kitchen.\n;; PDDL guess 1 for 'place a hot plate on top of the shelves in the corner of the kitchen.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Plate-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a hot plate on top of the shelves in the corner of the kitchen.\n;; PDDL guess 1 for 'place a hot plate on top of the shelves in the corner of the kitchen.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Plate-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a hot plate on top of the shelves in the corner of the kitchen.\n;; PDDL guess 1 for 'place a hot plate on top of the shelves in the corner of the kitchen.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Plate-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a hot plate on top of the shelves in the corner of the kitchen.\n;; PDDL guess 1 for 'place a hot plate on top of the shelves in the corner of the kitchen.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Plate-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a hot plate on top of the shelves in the corner of the kitchen.\n;; PDDL guess 1 for 'place a hot plate on top of the shelves in the corner of the kitchen.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Plate-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a hot plate on top of the shelves in the corner of the kitchen.\n;; PDDL guess 1 for 'place a hot plate on top of the shelves in the corner of the kitchen.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Plate-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a hot plate on top of the shelves in the corner of the kitchen.\n;; PDDL guess 1 for 'place a hot plate on top of the shelves in the corner of the kitchen.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Plate-None-Shelf\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a hot plate on top of the shelves in the corner of the kitchen.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a hot plate on top of the shelves in the corner of the kitchen.\"\n;; Official goal name: pick_heat_then_place_in_recep-Plate-None-ShelfType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlateType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n                (heatable ?o) \n                (isHot ?o) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"place a hot plate on top of the shelves in the corner of the kitchen.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotType-None-ShelfType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n                (heatable ?o) \n                (isHot ?o) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"place a hot plate on top of the shelves in the corner of the kitchen.\"\n;; Official goal name: pick_heat_then_place_in_recep-CupType-None-ShelfType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n                (heatable ?o) \n                (isHot ?o) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"place a hot plate on top of the shelves in the corner of the kitchen.\"\n;; Official goal name: pick_heat_then_place_in_recep-BowlType-None-ShelfType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BowlType) \n                (receptacleType ?r ShelfType)\n                (inReceptacle ?o ?r) \n                (heatable ?o) \n                (isHot ?o) \n            )\n)))\n"
        ]
    },
    "train/look_at_obj_in_light-Pen-None-DeskLamp-327/trial_T20190909_020734_953975": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\npick up the pen from the dresser and turn the lamp on.\n;; PDDL guess 1 for 'pick up the pen from the dresser and turn the lamp on.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up the pen from the dresser and turn the lamp on.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"pick up the pen from the dresser and turn the lamp on.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for \"pick up the pen from the dresser and turn the lamp on.\"\n;; Official goal name: look_at_obj_in_light-Pencil-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for \"pick up the pen from the dresser and turn the lamp on.\"\n;; Official goal name: look_at_obj_in_light-Pencil-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for \"pick up the pen from the dresser and turn the lamp on.\"\n;; Official goal name: look_at_obj_in_light-Pencil-None-FloorLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Mug-None-CoffeeMachine-13/trial_T20190908_092542_043460": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a heated mug on a coffee maker.\n;; PDDL guess 1 for 'place a heated mug on a coffee maker.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a heated mug on a coffee maker.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a heated mug on a coffee maker.\"\n;; Official goal name: pick_heat_then_place_in_recep-Mug-None-CoffeeMachine\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a heated mug on a coffee maker.\"\n;; Official goal name: pick_heat_then_place_in_recep-CupType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a heated mug on a coffee maker.\"\n;; Official goal name: pick_heat_then_place_in_recep-MugType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a heated mug on a coffee maker.\"\n;; Official goal name: pick_heat_then_place_in_recep-CupType-None-CoffeeMachineType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r CoffeeMachineType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091615_973891": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato that is on the microwave stand.\n;; PDDL guess 1 for 'slice a tomato that is on the microwave stand.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice a tomato that is on the microwave stand.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"slice a tomato that is on the microwave stand.\"\n;; Official goal name: pick_and_place_simple-Tomato-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"slice a tomato that is on the microwave stand.\"\n;; Official goal name: pick_and_place_simple-Tomato-None-CoffeeTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"slice a tomato that is on the microwave stand.\"\n;; Official goal name: pick_and_place_simple-Tomato-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"slice a tomato that is on the microwave stand.\"\n;; Official goal name: pick_and_place_simple-Tomato-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType)\n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Egg-None-CounterTop-27/trial_T20190909_002105_967038": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a chilled egg on the counter.\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled egg on the counter.\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled egg on the counter.\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled egg on the counter.\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled egg on the counter.\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled egg on the counter.\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled egg on the counter.\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled egg on the counter.\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled egg on the counter.\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled egg on the counter.\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a chilled egg on the counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'put a chilled egg on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Egg-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/look_at_obj_in_light-Pen-None-DeskLamp-305/trial_T20190907_115824_746935": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen next to the light of a lamp.\n;; PDDL guess 1 for 'examine a pen next to the light of a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a pen next to the light of a lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"examine a pen next to the light of a lamp.\"\n;; Official goal name: look_at_obj_in_light-Pen-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for \"examine a pen next to the light of a lamp.\"\n;; Official goal name: look_at_obj_in_light-LampType-None-TableType\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot LampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for \"examine a pen next to the light of a lamp.\"\n;; Official goal name: look_at_obj_in_light-PenType-None-TableType\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot PenType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for \"examine a pen next to the light of a lamp.\"\n;; Official goal name: look_at_obj_in_light-LampType-None-DeskLampType\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot LampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Pot-None-CounterTop-24/trial_T20190907_002332_305243": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cooled pan down on the kitchen counter corner.\n;; PDDL guess 1 for 'place a cooled pan down on the kitchen counter corner.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled pan down on the kitchen counter corner.\n;; PDDL guess 1 for 'place a cooled pan down on the kitchen counter corner.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled pan down on the kitchen counter corner.\n;; PDDL guess 1 for 'place a cooled pan down on the kitchen counter corner.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled pan down on the kitchen counter corner.\n;; PDDL guess 1 for 'place a cooled pan down on the kitchen counter corner.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled pan down on the kitchen counter corner.\n;; PDDL guess 1 for 'place a cooled pan down on the kitchen counter corner.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled pan down on the kitchen counter corner.\n;; PDDL guess 1 for 'place a cooled pan down on the kitchen counter corner.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled pan down on the kitchen counter corner.\n;; PDDL guess 1 for 'place a cooled pan down on the kitchen counter corner.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled pan down on the kitchen counter corner.\n;; PDDL guess 1 for 'place a cooled pan down on the kitchen counter corner.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled pan down on the kitchen counter corner.\n;; PDDL guess 1 for 'place a cooled pan down on the kitchen counter corner.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cooled pan down on the kitchen counter corner.\n;; PDDL guess 1 for 'place a cooled pan down on the kitchen counter corner.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Pot-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cooled pan down on the kitchen counter corner.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a cooled pan down on the kitchen counter corner.\"\n;; Official goal name: pick_and_place_simple-Pot-None-CounterTopType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (coolable ?o)\n                (isCool ?o)\n            )\n)))\n",
            "\n;; PDDL guess 2 for \"place a cooled pan down on the kitchen counter corner.\"\n;; Official goal name: pick_and_place_simple-Pan-None-CounterTopType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (coolable ?o)\n                (isCool ?o)\n            )\n)))\n",
            "\n;; PDDL guess 3 for \"place a cooled pan down on the kitchen counter corner.\"\n;; Official goal name: pick_and_place_simple-Pan-None-DresserType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PanType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n                (coolable ?o)\n                (isCool ?o)\n            )\n)))\n",
            "\n;; PDDL guess 4 for \"place a cooled pan down on the kitchen counter corner.\"\n;; Official goal name: pick_and_place_simple-Pot-None-DresserType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n                (coolable ?o)\n                (isCool ?o)\n            )\n)))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Spatula-None-CounterTop-30/trial_T20190909_050831_328612": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nreturn a washed spatula to a kitchen counter.\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.return a washed spatula to a kitchen counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'return a washed spatula to a kitchen counter.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_and_place_simple-Plunger-None-Cabinet-403/trial_T20190909_054730_826329": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove the plunger to the cabinet under the sink.\n;; PDDL guess 1 for 'move the plunger to the cabinet under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger to the cabinet under the sink.\n;; PDDL guess 1 for 'move the plunger to the cabinet under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger to the cabinet under the sink.\n;; PDDL guess 1 for 'move the plunger to the cabinet under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger to the cabinet under the sink.\n;; PDDL guess 1 for 'move the plunger to the cabinet under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger to the cabinet under the sink.\n;; PDDL guess 1 for 'move the plunger to the cabinet under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger to the cabinet under the sink.\n;; PDDL guess 1 for 'move the plunger to the cabinet under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger to the cabinet under the sink.\n;; PDDL guess 1 for 'move the plunger to the cabinet under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger to the cabinet under the sink.\n;; PDDL guess 1 for 'move the plunger to the cabinet under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger to the cabinet under the sink.\n;; PDDL guess 1 for 'move the plunger to the cabinet under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the plunger to the cabinet under the sink.\n;; PDDL guess 1 for 'move the plunger to the cabinet under the sink.'\n;; Simplified Goal: \npick_and_place_simple-Plunger-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move the plunger to the cabinet under the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"move the plunger to the cabinet under the sink.\"\n;; Official goal name: pick_and_place_simple-Plunger-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"move the plunger to the cabinet under the sink.\"\n;; Official goal name: pick_and_place_simple-Plunger-None-SinkBasinType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PlungerType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"move the plunger to the cabinet under the sink.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"move the plunger to the cabinet under the sink.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-SinkBasinType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Apple-None-SideTable-28/trial_T20190906_180710_251060": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a warm apple on the table.\n;; PDDL guess 1 for 'put a warm apple on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm apple on the table.\n;; PDDL guess 1 for 'put a warm apple on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm apple on the table.\n;; PDDL guess 1 for 'put a warm apple on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm apple on the table.\n;; PDDL guess 1 for 'put a warm apple on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm apple on the table.\n;; PDDL guess 1 for 'put a warm apple on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm apple on the table.\n;; PDDL guess 1 for 'put a warm apple on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm apple on the table.\n;; PDDL guess 1 for 'put a warm apple on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm apple on the table.\n;; PDDL guess 1 for 'put a warm apple on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm apple on the table.\n;; PDDL guess 1 for 'put a warm apple on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a warm apple on the table.\n;; PDDL guess 1 for 'put a warm apple on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Apple-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a warm apple on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a warm apple on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a warm apple on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleType-None-CoffeeTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a warm apple on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleType-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a warm apple on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleType-None-CartType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CartType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n)))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-PotatoSliced-None-Fridge-11/trial_T20190910_232930_757480": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cooked piece of potato into the fridge.\n;; PDDL guess 1 for 'put a cooked piece of potato into the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked piece of potato into the fridge.\n;; PDDL guess 1 for 'put a cooked piece of potato into the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked piece of potato into the fridge.\n;; PDDL guess 1 for 'put a cooked piece of potato into the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked piece of potato into the fridge.\n;; PDDL guess 1 for 'put a cooked piece of potato into the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked piece of potato into the fridge.\n;; PDDL guess 1 for 'put a cooked piece of potato into the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked piece of potato into the fridge.\n;; PDDL guess 1 for 'put a cooked piece of potato into the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked piece of potato into the fridge.\n;; PDDL guess 1 for 'put a cooked piece of potato into the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked piece of potato into the fridge.\n;; PDDL guess 1 for 'put a cooked piece of potato into the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked piece of potato into the fridge.\n;; PDDL guess 1 for 'put a cooked piece of potato into the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked piece of potato into the fridge.\n;; PDDL guess 1 for 'put a cooked piece of potato into the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cooked piece of potato into the fridge.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a cooked piece of potato into the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a cooked piece of potato into the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a cooked piece of potato into the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a cooked piece of potato into the fridge.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-Fridge\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Pillow-None-DeskLamp-305/trial_T20190909_110717_764199": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nlook at a striped pillow under a lit lamp.\n;; PDDL guess 1 for 'look at a striped pillow under a lit lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pillow-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.look at a striped pillow under a lit lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"look at a striped pillow under a lit lamp.\"\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for \"look at a striped pillow under a lit lamp.\"\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for \"look at a striped pillow under a lit lamp.\"\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for \"look at a striped pillow under a lit lamp.\"\n;; Official goal name: look_at_obj_in_light-Pillow-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PillowType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Cloth-None-Drawer-427/trial_T20190909_070336_423393": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cleaned cloth in a drawer.\n;; PDDL guess 1 for 'put a cleaned cloth in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned cloth in a drawer.\n;; PDDL guess 1 for 'put a cleaned cloth in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned cloth in a drawer.\n;; PDDL guess 1 for 'put a cleaned cloth in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned cloth in a drawer.\n;; PDDL guess 1 for 'put a cleaned cloth in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned cloth in a drawer.\n;; PDDL guess 1 for 'put a cleaned cloth in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned cloth in a drawer.\n;; PDDL guess 1 for 'put a cleaned cloth in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned cloth in a drawer.\n;; PDDL guess 1 for 'put a cleaned cloth in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned cloth in a drawer.\n;; PDDL guess 1 for 'put a cleaned cloth in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned cloth in a drawer.\n;; PDDL guess 1 for 'put a cleaned cloth in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned cloth in a drawer.\n;; PDDL guess 1 for 'put a cleaned cloth in a drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cleaned cloth in a drawer.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a cleaned cloth in a drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-Cloth-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a cleaned cloth in a drawer.\"\n;; Official goal name: pick_and_place_cleaned-ClothType-None-DrawerType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a cleaned cloth in a drawer.\"\n;; Official goal name: pick_and_clean-None-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a cleaned cloth in a drawer.\"\n;; Official goal name: pick_and_clean_then_place-None-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Potato-None-Microwave-25/trial_T20190908_113515_119158": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a chilled sweet potato in the microwave.\n;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled sweet potato in the microwave.\n;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled sweet potato in the microwave.\n;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled sweet potato in the microwave.\n;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled sweet potato in the microwave.\n;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled sweet potato in the microwave.\n;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled sweet potato in the microwave.\n;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled sweet potato in the microwave.\n;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled sweet potato in the microwave.\n;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled sweet potato in the microwave.\n;; PDDL guess 1 for 'put a chilled sweet potato in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Potato-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a chilled sweet potato in the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a chilled sweet potato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Potato-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a chilled sweet potato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-SweetPotato-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SweetPotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a chilled sweet potato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-Potato-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a chilled sweet potato in the microwave.\"\n;; Official goal name: pick_cool_then_place_in_recep-SweetPotato-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SweetPotatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Egg-None-GarbageCan-11/trial_T20190906_181033_636334": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nthrow away a rinsed egg.\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a rinsed egg.\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a rinsed egg.\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a rinsed egg.\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a rinsed egg.\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a rinsed egg.\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a rinsed egg.\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a rinsed egg.\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a rinsed egg.\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nthrow away a rinsed egg.\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.throw away a rinsed egg.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'throw away a rinsed egg.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Tomato-None-DiningTable-26/trial_T20190907_160916_014285": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ncol the tomato from the trash in the refrigerator , put the tomato on the table.\n;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncol the tomato from the trash in the refrigerator , put the tomato on the table.\n;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncol the tomato from the trash in the refrigerator , put the tomato on the table.\n;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncol the tomato from the trash in the refrigerator , put the tomato on the table.\n;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncol the tomato from the trash in the refrigerator , put the tomato on the table.\n;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncol the tomato from the trash in the refrigerator , put the tomato on the table.\n;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncol the tomato from the trash in the refrigerator , put the tomato on the table.\n;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncol the tomato from the trash in the refrigerator , put the tomato on the table.\n;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncol the tomato from the trash in the refrigerator , put the tomato on the table.\n;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncol the tomato from the trash in the refrigerator , put the tomato on the table.\n;; PDDL guess 1 for 'col the tomato from the trash in the refrigerator , put the tomato on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.col the tomato from the trash in the refrigerator , put the tomato on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"col the tomato from the trash in the refrigerator , put the tomato on the table.\"\n;; Official goal name: pick-cool-then-place_in-recep-Tomato-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"col the tomato from the trash in the refrigerator , put the tomato on the table.\"\n;; Official goal name: pick-cool-then-place_in-recep-Tomato-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"col the tomato from the trash in the refrigerator , put the tomato on the table.\"\n;; Official goal name: pick-cool-then-place_in-recep-Tomato-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"col the tomato from the trash in the refrigerator , put the tomato on the table.\"\n;; Official goal name: pick-cool-then-place_in-recep-Tomato-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Spatula-None-DiningTable-17/trial_T20190909_044854_236942": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a clean spatula on the table.\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean spatula on the table.\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean spatula on the table.\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean spatula on the table.\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean spatula on the table.\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean spatula on the table.\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean spatula on the table.\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean spatula on the table.\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean spatula on the table.\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean spatula on the table.\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a clean spatula on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a clean spatula on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Spatula-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpatulaType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-AlarmClock-None-DeskLamp-309/trial_T20190908_062755_880343": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine an alarm clock by the light of a table lamp.\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine an alarm clock by the light of a table lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 2 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 3 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n",
            "\n;; PDDL guess 4 for 'examine an alarm clock by the light of a table lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-TomatoSliced-None-Microwave-24/trial_T20190912_072414_861932": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto cool a tomato slice plus place it in the microwave.\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a tomato slice plus place it in the microwave.\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a tomato slice plus place it in the microwave.\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a tomato slice plus place it in the microwave.\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a tomato slice plus place it in the microwave.\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a tomato slice plus place it in the microwave.\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a tomato slice plus place it in the microwave.\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a tomato slice plus place it in the microwave.\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a tomato slice plus place it in the microwave.\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a tomato slice plus place it in the microwave.\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to cool a tomato slice plus place it in the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'to cool a tomato slice plus place it in the microwave.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-TomatoSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Cloth-None-BathtubBasin-406/trial_T20190907_183646_891246": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nwash the cloth from the tub in the sink , put it back in the tub.\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwash the cloth from the tub in the sink , put it back in the tub.\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwash the cloth from the tub in the sink , put it back in the tub.\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwash the cloth from the tub in the sink , put it back in the tub.\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwash the cloth from the tub in the sink , put it back in the tub.\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwash the cloth from the tub in the sink , put it back in the tub.\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwash the cloth from the tub in the sink , put it back in the tub.\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwash the cloth from the tub in the sink , put it back in the tub.\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwash the cloth from the tub in the sink , put it back in the tub.\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwash the cloth from the tub in the sink , put it back in the tub.\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.wash the cloth from the tub in the sink , put it back in the tub.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Official goal name: pick_clean_then_place_in_recep-Cloth-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Official goal name: pick_clean_then_place_in_recep-Shirt-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ShirtType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Official goal name: pick_clean_then_place_in_recep-Towel-None-BathtubBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TowelType) \n                (receptacleType ?r BathtubBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'wash the cloth from the tub in the sink , put it back in the tub.'\n;; Official goal name: pick_clean_then_place_in_recep-Cloth-None-SinkBasinType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClothType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-RemoteControl-None-ArmChair-230/trial_T20190909_020906_064567": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove the remote from the table to a chair.\n;; PDDL guess 1 for 'move the remote from the table to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the remote from the table to a chair.\n;; PDDL guess 1 for 'move the remote from the table to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the remote from the table to a chair.\n;; PDDL guess 1 for 'move the remote from the table to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the remote from the table to a chair.\n;; PDDL guess 1 for 'move the remote from the table to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the remote from the table to a chair.\n;; PDDL guess 1 for 'move the remote from the table to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the remote from the table to a chair.\n;; PDDL guess 1 for 'move the remote from the table to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the remote from the table to a chair.\n;; PDDL guess 1 for 'move the remote from the table to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the remote from the table to a chair.\n;; PDDL guess 1 for 'move the remote from the table to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the remote from the table to a chair.\n;; PDDL guess 1 for 'move the remote from the table to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove the remote from the table to a chair.\n;; PDDL guess 1 for 'move the remote from the table to a chair.'\n;; Simplified Goal: \npick_and_place_simple-RemoteControl-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move the remote from the table to a chair.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"move the remote from the table to a chair.\"\n;; Official goal name: pick_and_place_simple-RemoteControl-None-ArmChair\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 2 for \"move the remote from the table to a chair.\"\n;; Official goal name: pick_and_place_simple-RemoteControl-None-Sofa\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 3 for \"move the remote from the table to a chair.\"\n;; Official goal name: pick_and_place_simple-RemoteControl-None-DiningTableType\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 4 for \"move the remote from the table to a chair.\"\n;; Official goal name: pick_and_place_simple-RemoteControl-None-CoffeeTableType\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o RemoteControlType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n            )\n        )\n    )\n)\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-AppleSliced-None-DiningTable-27/trial_T20190907_171803_405680": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a chilled piece of apple between the two tomatoes on the table.\n;; PDDL guess 1 for 'place a chilled piece of apple between the two tomatoes on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled piece of apple between the two tomatoes on the table.\n;; PDDL guess 1 for 'place a chilled piece of apple between the two tomatoes on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled piece of apple between the two tomatoes on the table.\n;; PDDL guess 1 for 'place a chilled piece of apple between the two tomatoes on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled piece of apple between the two tomatoes on the table.\n;; PDDL guess 1 for 'place a chilled piece of apple between the two tomatoes on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled piece of apple between the two tomatoes on the table.\n;; PDDL guess 1 for 'place a chilled piece of apple between the two tomatoes on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled piece of apple between the two tomatoes on the table.\n;; PDDL guess 1 for 'place a chilled piece of apple between the two tomatoes on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled piece of apple between the two tomatoes on the table.\n;; PDDL guess 1 for 'place a chilled piece of apple between the two tomatoes on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled piece of apple between the two tomatoes on the table.\n;; PDDL guess 1 for 'place a chilled piece of apple between the two tomatoes on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled piece of apple between the two tomatoes on the table.\n;; PDDL guess 1 for 'place a chilled piece of apple between the two tomatoes on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a chilled piece of apple between the two tomatoes on the table.\n;; PDDL guess 1 for 'place a chilled piece of apple between the two tomatoes on the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-AppleSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a chilled piece of apple between the two tomatoes on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a chilled piece of apple between the two tomatoes on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a chilled piece of apple between the two tomatoes on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-Apple-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a chilled piece of apple between the two tomatoes on the table.\"\n;; Official goal name: pick_cool_then_place_in_recep-AppleSlice-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a chilled piece of apple between the two tomatoes on the table.\"\n;; Official goal name: pick_cool_then_place_in_recep-AppleSlice-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Cup-None-SinkBasin-12/trial_T20190906_180434_894600": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the chilled glass in the sink.\n;; PDDL guess 1 for 'put the chilled glass in the sink.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Cup-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the chilled glass in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put the chilled glass in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-Glass-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put the chilled glass in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-Cup-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put the chilled glass in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-Glassbottle-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassbottleType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put the chilled glass in the sink.\"\n;; Official goal name: pick_cool_then_place_in_recep-Glass-None-Sink\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CupType) \n                (receptacleType ?r SinkType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n)))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Egg-None-DiningTable-19/trial_T20190909_152159_542794": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput heated egg on kitchen table.\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput heated egg on kitchen table.\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput heated egg on kitchen table.\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput heated egg on kitchen table.\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput heated egg on kitchen table.\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput heated egg on kitchen table.\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput heated egg on kitchen table.\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput heated egg on kitchen table.\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput heated egg on kitchen table.\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput heated egg on kitchen table.\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put heated egg on kitchen table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-KitchenTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r KitchenTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTableType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put heated egg on kitchen table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-DiningTableType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/look_at_obj_in_light-Pencil-None-DeskLamp-306/trial_T20190907_235854_062993": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\ncarry a pencil while turning on a lamp.\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PencilType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.carry a pencil while turning on a lamp.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n\t\t(objectType ?ot DeskLampType)\n\t\t(toggleable ?ot)\n\t\t(isToggled ?ot) \n\t\t(objectAtLocation ?ot ?l)\n\t\t(atLocation ?a ?l)\n\t\t(objectType ?o PencilType)\n\t\t(holds ?a ?o)\n\t    )\n    ))))))\n\n",
            "\n;; PDDL guess 2 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n\t\t(objectType ?ot DeskLampType)\n\t\t(toggleable ?ot)\n\t\t(isToggled ?ot) \n\t\t(objectAtLocation ?ot ?l)\n\t\t(atLocation ?a ?l)\n\t\t(objectType ?o PencilType)\n\t\t(holds ?a ?o)\n\t    )\n    ))))))\n\n",
            "\n;; PDDL guess 3 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n\t\t(objectType ?ot DeskLampType)\n\t\t(toggleable ?ot)\n\t\t(isToggled ?ot) \n\t\t(objectAtLocation ?ot ?l)\n\t\t(atLocation ?a ?l)\n\t\t(objectType ?o PencilType)\n\t\t(holds ?a ?o)\n\t    )\n    ))))))\n\n",
            "\n;; PDDL guess 4 for 'carry a pencil while turning on a lamp.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pencil-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n\t\t(objectType ?ot DeskLampType)\n\t\t(toggleable ?ot)\n\t\t(isToggled ?ot) \n\t\t(objectAtLocation ?ot ?l)\n\t\t(atLocation ?a ?l)\n\t\t(objectType ?o PencilType)\n\t\t(holds ?a ?o)\n\t    )\n    ))))))\n\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-LettuceSliced-None-DiningTable-27/trial_T20190909_061209_506966": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nto cool a slice of lettuce and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of lettuce and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of lettuce and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of lettuce and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of lettuce and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of lettuce and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of lettuce and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of lettuce and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of lettuce and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nto cool a slice of lettuce and place it on the kitchen table.\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.to cool a slice of lettuce and place it on the kitchen table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'to cool a slice of lettuce and place it on the kitchen table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-SoapBottle-None-GarbageCan-417/trial_T20190909_120106_745160": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a bottle in a trash can.\n;; PDDL guess 1 for 'put a bottle in a trash can.'\n;; Simplified Goal: \npick_and_place_simple-SoapBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a bottle in a trash can.\n;; PDDL guess 1 for 'put a bottle in a trash can.'\n;; Simplified Goal: \npick_and_place_simple-SoapBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a bottle in a trash can.\n;; PDDL guess 1 for 'put a bottle in a trash can.'\n;; Simplified Goal: \npick_and_place_simple-SoapBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a bottle in a trash can.\n;; PDDL guess 1 for 'put a bottle in a trash can.'\n;; Simplified Goal: \npick_and_place_simple-SoapBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a bottle in a trash can.\n;; PDDL guess 1 for 'put a bottle in a trash can.'\n;; Simplified Goal: \npick_and_place_simple-SoapBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a bottle in a trash can.\n;; PDDL guess 1 for 'put a bottle in a trash can.'\n;; Simplified Goal: \npick_and_place_simple-SoapBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a bottle in a trash can.\n;; PDDL guess 1 for 'put a bottle in a trash can.'\n;; Simplified Goal: \npick_and_place_simple-SoapBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a bottle in a trash can.\n;; PDDL guess 1 for 'put a bottle in a trash can.'\n;; Simplified Goal: \npick_and_place_simple-SoapBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a bottle in a trash can.\n;; PDDL guess 1 for 'put a bottle in a trash can.'\n;; Simplified Goal: \npick_and_place_simple-SoapBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a bottle in a trash can.\n;; PDDL guess 1 for 'put a bottle in a trash can.'\n;; Simplified Goal: \npick_and_place_simple-SoapBottle-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a bottle in a trash can.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a bottle in a trash can.\"\n;; Official goal name: pick_and_place_simple-SoapBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a bottle in a trash can.\"\n;; Official goal name: pick_and_place_simple-GlassBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o GlassBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a bottle in a trash can.\"\n;; Official goal name: pick_and_place_simple-WateringCan-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WateringCanType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a bottle in a trash can.\"\n;; Official goal name: pick_and_place_simple-WineBottle-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o WineBottleType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_and_place_simple-TomatoSliced-None-CounterTop-25/trial_T20190908_233657_231915": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ncut a tomato on the counter.\n;; PDDL guess 1 for 'cut a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncut a tomato on the counter.\n;; PDDL guess 1 for 'cut a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncut a tomato on the counter.\n;; PDDL guess 1 for 'cut a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncut a tomato on the counter.\n;; PDDL guess 1 for 'cut a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncut a tomato on the counter.\n;; PDDL guess 1 for 'cut a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncut a tomato on the counter.\n;; PDDL guess 1 for 'cut a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncut a tomato on the counter.\n;; PDDL guess 1 for 'cut a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncut a tomato on the counter.\n;; PDDL guess 1 for 'cut a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncut a tomato on the counter.\n;; PDDL guess 1 for 'cut a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncut a tomato on the counter.\n;; PDDL guess 1 for 'cut a tomato on the counter.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.cut a tomato on the counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"cut a tomato on the counter.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"cut a tomato on the counter.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"cut a tomato on the counter.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"cut a tomato on the counter.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Lettuce-None-SideTable-21/trial_T20190907_101234_922599": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace a cleaned head of lettuce on a small side table.\n;; PDDL guess 1 for 'place a cleaned head of lettuce on a small side table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place a cleaned head of lettuce on a small side table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place a cleaned head of lettuce on a small side table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Lettuce-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place a cleaned head of lettuce on a small side table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Lettuce-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place a cleaned head of lettuce on a small side table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Lettuce-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place a cleaned head of lettuce on a small side table.\"\n;; Official goal name: pick_clean_then_place_in_recep-Lettuce-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Egg-None-Fridge-20/trial_T20190907_224507_776787": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nwarm up an egg to put in the fridge.\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.warm up an egg to put in the fridge.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal:\npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal:\npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'warm up an egg to put in the fridge.'\n;; Simplified Goal:\npick_heat_then_place_in_recep-Egg-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_and_place_simple-CellPhone-None-Drawer-302/trial_T20190907_235412_132976": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ntake the phone from the top of the nightstand and place it in the drawer.\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the phone from the top of the nightstand and place it in the drawer.\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the phone from the top of the nightstand and place it in the drawer.\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the phone from the top of the nightstand and place it in the drawer.\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the phone from the top of the nightstand and place it in the drawer.\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the phone from the top of the nightstand and place it in the drawer.\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the phone from the top of the nightstand and place it in the drawer.\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the phone from the top of the nightstand and place it in the drawer.\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the phone from the top of the nightstand and place it in the drawer.\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ntake the phone from the top of the nightstand and place it in the drawer.\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.take the phone from the top of the nightstand and place it in the drawer.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'take the phone from the top of the nightstand and place it in the drawer.'\n;; Simplified Goal: \npick_and_place_simple-CellPhone-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CellPhoneType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-BreadSliced-None-CounterTop-11/trial_T20190907_154448_313676": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a microwaved slice of bread on the counter by the stove top.\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of bread on the counter by the stove top.\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of bread on the counter by the stove top.\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of bread on the counter by the stove top.\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of bread on the counter by the stove top.\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of bread on the counter by the stove top.\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of bread on the counter by the stove top.\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of bread on the counter by the stove top.\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of bread on the counter by the stove top.\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a microwaved slice of bread on the counter by the stove top.\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a microwaved slice of bread on the counter by the stove top.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'put a microwaved slice of bread on the counter by the stove top.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)  \n                (sliceable ?o)\n                (isSliced ?o)   \n            )\n    )))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-BreadSliced-None-SideTable-28/trial_T20190907_180304_503402": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n;; PDDL guess 1 for 'slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-BreadSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice a loaf of bread with a knife , cook it in a microwave put it the small brown table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"slice a loaf of bread with a knife, cook it in a microwave, put it on the small brown table.\"\n;; Official goal name: pick_then_slice-BreadType\n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (sliceable ?o) \n                (holdsAny ?a - agent) \n                (holds ?a ?o)\n            )\n))\n",
            "\n;; PDDL guess 2 for \"slice a loaf of bread with a knife, cook it in a microwave, put it on the small brown table.\"\n;; Official goal name: pick_then_slice-ToasterType\n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o ToasterType) \n                (sliceable ?o) \n                (holdsAny ?a - agent) \n                (holds ?a ?o)\n            )\n))\n",
            "\n;; PDDL guess 3 for \"slice a loaf of bread with a knife, cook it in a microwave, put it on the small brown table.\"\n;; Official goal name: pick_then_slice-CuttingBoardType\n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o CuttingBoardType) \n                (sliceable ?o) \n                (holdsAny ?a - agent) \n                (holds ?a ?o)\n            )\n))\n",
            "\n;; PDDL guess 4 for \"slice a loaf of bread with a knife, cook it in a microwave, put it on the small brown table.\"\n;; Official goal name: pick_then_slice-BreadKnifeType\n(:goal\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadKnifeType) \n                (sliceable ?o) \n                (holdsAny ?a - agent) \n                (holds ?a ?o)\n            )\n))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-SoapBar-None-Cabinet-418/trial_T20190907_035143_529621": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nplace wet soap in a cabinet.\n;; PDDL guess 1 for 'place wet soap in a cabinet.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-Cabinet\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.place wet soap in a cabinet.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_and_place_clean-SoapBarType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_and_place_clean-SoapBarType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_and_place_clean-SoapBarType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"place wet soap in a cabinet.\"\n;; Official goal name: pick_and_place_clean-SoapBarType-None-CabinetType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Lettuce-None-GarbageCan-16/trial_T20190909_014736_101510": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cold head of lettuce in the garbage.\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold head of lettuce in the garbage.\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold head of lettuce in the garbage.\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold head of lettuce in the garbage.\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold head of lettuce in the garbage.\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold head of lettuce in the garbage.\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold head of lettuce in the garbage.\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold head of lettuce in the garbage.\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold head of lettuce in the garbage.\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cold head of lettuce in the garbage.\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cold head of lettuce in the garbage.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'put a cold head of lettuce in the garbage.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Lettuce-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-LettuceSliced-None-CounterTop-1/trial_T20190909_153325_717118": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a chilled slice of lettuce on the counter.\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled slice of lettuce on the counter.\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled slice of lettuce on the counter.\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled slice of lettuce on the counter.\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled slice of lettuce on the counter.\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled slice of lettuce on the counter.\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled slice of lettuce on the counter.\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled slice of lettuce on the counter.\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled slice of lettuce on the counter.\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a chilled slice of lettuce on the counter.\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a chilled slice of lettuce on the counter.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'put a chilled slice of lettuce on the counter.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-LettuceSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin-1/trial_T20190909_120859_255584": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cooked slice of potato in the middle of the sink.\n;; PDDL guess 1 for 'put a cooked slice of potato in the middle of the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cooked slice of potato in the middle of the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a cooked slice of potato in the middle of the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a cooked slice of potato in the middle of the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a cooked slice of potato in the middle of the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)\n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a cooked slice of potato in the middle of the sink.\"\n;; Official goal name: pick_heat_then_place_in_recep-PotatoSliced-None-SinkBasin\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n                (sliceable ?o)\n                (isSliced ?o)\n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-Egg-None-GarbageCan-5/trial_T20190906_190505_376018": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated egg in the trash can.\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated egg in the trash can.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a heated egg in the trash can.'\n;; Simplified Goal: pick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put a heated egg in the trash can.'\n;; Simplified Goal: pick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a heated egg in the trash can.'\n;; Simplified Goal: pick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a heated egg in the trash can.'\n;; Simplified Goal: pick_heat_then_place_in_recep-Egg-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o EggType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-TomatoSliced-None-SideTable-3/trial_T20190908_091633_587949": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nremove the tomato from the fridge and cut it up on the table.\n;; PDDL guess 1 for 'remove the tomato from the fridge and cut it up on the table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.remove the tomato from the fridge and cut it up on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"remove the tomato from the fridge and cut it up on the table.\"\n;; Official goal name: pick_and_place_simple-Tomato-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"remove the tomato from the fridge and cut it up on the table.\"\n;; Official goal name: pick_and_place_simple-Tomato-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"remove the tomato from the fridge and cut it up on the table.\"\n;; Official goal name: pick_and_place_simple-Tomato-None-CoffeeTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"remove the tomato from the fridge and cut it up on the table.\"\n;; Official goal name: pick_and_place_simple-Tomato-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Bread-None-DiningTable-26/trial_T20190906_184052_211612": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nchill a loaf of bread and move it to the table.\n;; PDDL guess 1 for 'chill a loaf of bread and move it to the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a loaf of bread and move it to the table.\n;; PDDL guess 1 for 'chill a loaf of bread and move it to the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a loaf of bread and move it to the table.\n;; PDDL guess 1 for 'chill a loaf of bread and move it to the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a loaf of bread and move it to the table.\n;; PDDL guess 1 for 'chill a loaf of bread and move it to the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a loaf of bread and move it to the table.\n;; PDDL guess 1 for 'chill a loaf of bread and move it to the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a loaf of bread and move it to the table.\n;; PDDL guess 1 for 'chill a loaf of bread and move it to the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a loaf of bread and move it to the table.\n;; PDDL guess 1 for 'chill a loaf of bread and move it to the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a loaf of bread and move it to the table.\n;; PDDL guess 1 for 'chill a loaf of bread and move it to the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a loaf of bread and move it to the table.\n;; PDDL guess 1 for 'chill a loaf of bread and move it to the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill a loaf of bread and move it to the table.\n;; PDDL guess 1 for 'chill a loaf of bread and move it to the table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Bread-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.chill a loaf of bread and move it to the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"chill a loaf of bread and move it to the table.\"\n;; Official goal name: \npick_cool_then_place_in_recep-Bread-None-DiningTableType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"chill a loaf of bread and move it to the table.\"\n;; Official goal name: \npick_cool_then_place_in_recep-Bread-None-DiningTableType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"chill a loaf of bread and move it to the table.\"\n;; Official goal name: \npick_cool_then_place_in_recep-Bread-None-DiningTableType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"chill a loaf of bread and move it to the table.\"\n;; Official goal name: \npick_cool_then_place_in_recep-Bread-None-DiningTableType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o BreadType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Tomato-None-GarbageCan-6/trial_T20190909_083011_638518": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nchill the tomato in the fridge then throw it away.\n;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill the tomato in the fridge then throw it away.\n;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill the tomato in the fridge then throw it away.\n;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill the tomato in the fridge then throw it away.\n;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill the tomato in the fridge then throw it away.\n;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill the tomato in the fridge then throw it away.\n;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill the tomato in the fridge then throw it away.\n;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill the tomato in the fridge then throw it away.\n;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill the tomato in the fridge then throw it away.\n;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nchill the tomato in the fridge then throw it away.\n;; PDDL guess 1 for 'chill the tomato in the fridge then throw it away.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Tomato-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.chill the tomato in the fridge then throw it away.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"chill the tomato in the fridge then throw it away.\"\n;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"chill the tomato in the fridge then throw it away.\"\n;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"chill the tomato in the fridge then throw it away.\"\n;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"chill the tomato in the fridge then throw it away.\"\n;; Official goal name: pick_cool_then_place_in_recep-Tomato-None-GarbageCan\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin-15/trial_T20190909_043958_476680": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated tomato slice in the sink.\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato slice in the sink.\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato slice in the sink.\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato slice in the sink.\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato slice in the sink.\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato slice in the sink.\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato slice in the sink.\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato slice in the sink.\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato slice in the sink.\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated tomato slice in the sink.\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated tomato slice in the sink.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'put a heated tomato slice in the sink.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SinkBasin\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SinkBasinType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_and_place_simple-CreditCard-None-ArmChair-206/trial_T20190909_023729_905485": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a credit card on the blue chair.\n;; PDDL guess 1 for 'put a credit card on the blue chair.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a credit card on the blue chair.\n;; PDDL guess 1 for 'put a credit card on the blue chair.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a credit card on the blue chair.\n;; PDDL guess 1 for 'put a credit card on the blue chair.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a credit card on the blue chair.\n;; PDDL guess 1 for 'put a credit card on the blue chair.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a credit card on the blue chair.\n;; PDDL guess 1 for 'put a credit card on the blue chair.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a credit card on the blue chair.\n;; PDDL guess 1 for 'put a credit card on the blue chair.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a credit card on the blue chair.\n;; PDDL guess 1 for 'put a credit card on the blue chair.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a credit card on the blue chair.\n;; PDDL guess 1 for 'put a credit card on the blue chair.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a credit card on the blue chair.\n;; PDDL guess 1 for 'put a credit card on the blue chair.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a credit card on the blue chair.\n;; PDDL guess 1 for 'put a credit card on the blue chair.'\n;; Simplified Goal: \npick_and_place_simple-CreditCard-None-ArmChair\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a credit card on the blue chair.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a credit card on the blue chair.\"\n;; Official goal name: pick_and_place_simple-CreditCard-None-ArmChair\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r ArmChairType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a credit card on the blue chair.\"\n;; Official goal name: pick_and_place_simple-CreditCard-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a credit card on the blue chair.\"\n;; Official goal name: pick_and_place_simple-CreditCard-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a credit card on the blue chair.\"\n;; Official goal name: pick_and_place_simple-CreditCard-None-SofaType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o CreditCardType) \n                (receptacleType ?r SofaType)\n                (inReceptacle ?o ?r) \n            )\n)))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-Mug-None-SideTable-21/trial_T20190907_153609_495974": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\ncool down the cup on the small black table.\n;; PDDL guess 1 for 'cool down the cup on the small black table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool down the cup on the small black table.\n;; PDDL guess 1 for 'cool down the cup on the small black table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool down the cup on the small black table.\n;; PDDL guess 1 for 'cool down the cup on the small black table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool down the cup on the small black table.\n;; PDDL guess 1 for 'cool down the cup on the small black table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool down the cup on the small black table.\n;; PDDL guess 1 for 'cool down the cup on the small black table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool down the cup on the small black table.\n;; PDDL guess 1 for 'cool down the cup on the small black table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool down the cup on the small black table.\n;; PDDL guess 1 for 'cool down the cup on the small black table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool down the cup on the small black table.\n;; PDDL guess 1 for 'cool down the cup on the small black table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool down the cup on the small black table.\n;; PDDL guess 1 for 'cool down the cup on the small black table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\ncool down the cup on the small black table.\n;; PDDL guess 1 for 'cool down the cup on the small black table.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-Mug-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.cool down the cup on the small black table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"cool down the cup on the small black table.\"\n;; Official goal name: pick_cool_then_place_in_recep-Mug-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"cool down the cup on the small black table.\"\n;; Official goal name: pick_cool_then_place_in_recep-Mug-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o MugType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"cool down the cup on the small black table.\"\n;; Official goal name: pick_cool_then_place_in_recep-TeaCup-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeaCupType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"cool down the cup on the small black table.\"\n;; Official goal name: pick_cool_then_place_in_recep-TeaCup-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TeaCupType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)  \n            )\n)))\n"
        ]
    },
    "train/look_at_obj_in_light-Pen-None-DeskLamp-309/trial_T20190909_052008_160445": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nexamine a pen by the light of a lamp on a small table.\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.examine a pen by the light of a lamp on a small table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-FloorLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot FloorLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-TableLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot TableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for 'examine a pen by the light of a lamp on a small table.'\n;; Simplified Goal: \nlook_at_obj_in_light-Pen-None-BedsideTableLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot BedsideTableLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o PenType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/look_at_obj_in_light-AlarmClock-None-DeskLamp-327/trial_T20190909_102016_233685": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\nHuman written natural language goal\nturn on desk lamp with clock in hand.\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Simplified Goal: \nlook_at_obj_in_light-AlarmClock-None-DeskLamp\n\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.turn on desk lamp with clock in hand.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'turn on desk lamp with clock in hand.'\n;; Official goal name: look_at_obj_in_light-AlarmClock-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 2 for 'turn on desk lamp with clock in hand.'\n;; Official goal name: look_at_obj_in_light-WatchType-None-DeskLampType\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 3 for 'turn on desk lamp with clock in hand.'\n;; Official goal name: look_at_obj_in_light-WatchType-None-DeskLampType\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o WatchType)\n                (holds ?a ?o)\n            )\n    ))))))\n",
            "\n;; PDDL guess 4 for 'turn on desk lamp with clock in hand.'\n;; Official goal name: look_at_obj_in_light-AlarmClock-None-DeskLamp\n(:goal\n        (exists (?a - agent)\n        (exists (?r - receptacle)\n        (exists (?o - object)\n        (exists (?ot - object)\n        (exists (?l - location)\n            (and \n                (objectType ?ot DeskLampType)\n                (toggleable ?ot)\n                (isToggled ?ot) \n                (objectAtLocation ?ot ?l)\n                (atLocation ?a ?l)\n                (objectType ?o AlarmClockType)\n                (holds ?a ?o)\n            )\n    ))))))\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan-18/trial_T20190909_070406_229146": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\npick up knife , cut potato , place potato in fridge , place potato into trash can.\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut potato , place potato in fridge , place potato into trash can.\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut potato , place potato in fridge , place potato into trash can.\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut potato , place potato in fridge , place potato into trash can.\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut potato , place potato in fridge , place potato into trash can.\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut potato , place potato in fridge , place potato into trash can.\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut potato , place potato in fridge , place potato into trash can.\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut potato , place potato in fridge , place potato into trash can.\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut potato , place potato in fridge , place potato into trash can.\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\npick up knife , cut potato , place potato in fridge , place potato into trash can.\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.pick up knife , cut potato , place potato in fridge , place potato into trash can.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'pick up knife , cut potato , place potato in fridge , place potato into trash can.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Fork-None-Drawer-30/trial_T20190908_030821_996789": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a clean fork in the drawer.\n;; PDDL guess 1 for 'put a clean fork in the drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean fork in the drawer.\n;; PDDL guess 1 for 'put a clean fork in the drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean fork in the drawer.\n;; PDDL guess 1 for 'put a clean fork in the drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean fork in the drawer.\n;; PDDL guess 1 for 'put a clean fork in the drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean fork in the drawer.\n;; PDDL guess 1 for 'put a clean fork in the drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean fork in the drawer.\n;; PDDL guess 1 for 'put a clean fork in the drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean fork in the drawer.\n;; PDDL guess 1 for 'put a clean fork in the drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean fork in the drawer.\n;; PDDL guess 1 for 'put a clean fork in the drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean fork in the drawer.\n;; PDDL guess 1 for 'put a clean fork in the drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean fork in the drawer.\n;; PDDL guess 1 for 'put a clean fork in the drawer.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-Drawer\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a clean fork in the drawer.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a clean fork in the drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-Fork-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put a clean fork in the drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-Spoon-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put a clean fork in the drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-Knife-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o KnifeType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put a clean fork in the drawer.\"\n;; Official goal name: pick_clean_then_place_in_recep-PotType-None-Drawer\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotType) \n                (receptacleType ?r DrawerType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n"
        ]
    },
    "train/pick_and_place_simple-TomatoSliced-None-Fridge-6/trial_T20190907_233151_665009": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the bell pepper in the fridge.\n;; PDDL guess 1 for 'slice the bell pepper in the fridge.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-Fridge\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice the bell pepper in the fridge.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"slice the bell pepper in the fridge.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-Fridge\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 2 for \"slice the bell pepper in the fridge.\"\n;; Official goal name: pick_and_place_simple-PepperSliced-None-Fridge\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PepperType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 3 for \"slice the bell pepper in the fridge.\"\n;; Official goal name: pick_and_place_simple-PepperSliced-None-Fridge\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PepperType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 4 for \"slice the bell pepper in the fridge.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-Fridge\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (sliceable ?o)\n                (isSliced ?o)\n            )\n        )\n    )\n)\n"
        ]
    },
    "train/pick_cool_then_place_in_recep-PotatoSliced-None-CounterTop-19/trial_T20190918_170643_072586": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n;; PDDL guess 1 for 'slice the potato and cool it down in the refrigerator so it can be returned to the counter top.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n;; PDDL guess 1 for 'slice the potato and cool it down in the refrigerator so it can be returned to the counter top.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n;; PDDL guess 1 for 'slice the potato and cool it down in the refrigerator so it can be returned to the counter top.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n;; PDDL guess 1 for 'slice the potato and cool it down in the refrigerator so it can be returned to the counter top.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n;; PDDL guess 1 for 'slice the potato and cool it down in the refrigerator so it can be returned to the counter top.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n;; PDDL guess 1 for 'slice the potato and cool it down in the refrigerator so it can be returned to the counter top.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n;; PDDL guess 1 for 'slice the potato and cool it down in the refrigerator so it can be returned to the counter top.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n;; PDDL guess 1 for 'slice the potato and cool it down in the refrigerator so it can be returned to the counter top.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n;; PDDL guess 1 for 'slice the potato and cool it down in the refrigerator so it can be returned to the counter top.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n;; PDDL guess 1 for 'slice the potato and cool it down in the refrigerator so it can be returned to the counter top.'\n;; Simplified Goal: \npick_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice the potato and cool it down in the refrigerator so it can be returned to the counter top.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"slice the potato and cool it down in the refrigerator so it can be returned to the counter top.\"\n;; Official goal name: pick_slice_cool_then_place_in_recep-PotatoSliced-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"slice the potato and cool it down in the refrigerator so it can be returned to the counter top.\"\n;; Official goal name: pick_slice_cool_then_place_in_recep-TomatoSliced-None-CounterTop\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"slice the potato and cool it down in the refrigerator so it can be returned to the counter top.\"\n;; Official goal name: pick_slice_cool_then_place_in_recep-PotatoSliced-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"slice the potato and cool it down in the refrigerator so it can be returned to the counter top.\"\n;; Official goal name: pick_slice_cool_then_place_in_recep-TomatoSliced-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (coolable ?o)\n                (isCool ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n)))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Lettuce-None-DiningTable-21/trial_T20190908_215554_002650": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a clean head of lettuce on the table.\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean head of lettuce on the table.\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean head of lettuce on the table.\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean head of lettuce on the table.\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean head of lettuce on the table.\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean head of lettuce on the table.\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean head of lettuce on the table.\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean head of lettuce on the table.\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean head of lettuce on the table.\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean head of lettuce on the table.\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a clean head of lettuce on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'put a clean head of lettuce on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Lettuce-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LettuceType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Tomato-None-DiningTable-23/trial_T20190909_000844_354286": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput the clean tomato on the table.\n;; PDDL guess 1 for 'put the clean tomato on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean tomato on the table.\n;; PDDL guess 1 for 'put the clean tomato on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean tomato on the table.\n;; PDDL guess 1 for 'put the clean tomato on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean tomato on the table.\n;; PDDL guess 1 for 'put the clean tomato on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean tomato on the table.\n;; PDDL guess 1 for 'put the clean tomato on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean tomato on the table.\n;; PDDL guess 1 for 'put the clean tomato on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean tomato on the table.\n;; PDDL guess 1 for 'put the clean tomato on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean tomato on the table.\n;; PDDL guess 1 for 'put the clean tomato on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean tomato on the table.\n;; PDDL guess 1 for 'put the clean tomato on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput the clean tomato on the table.\n;; PDDL guess 1 for 'put the clean tomato on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Tomato-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put the clean tomato on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put the clean tomato on the table.\"\n;; Official goal name: pick_and_place_clean-TomatoType-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"put the clean tomato on the table.\"\n;; Official goal name: pick_and_place_clean-TomatoType-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"put the clean tomato on the table.\"\n;; Official goal name: pick_and_place_clean-TomatoType-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"put the clean tomato on the table.\"\n;; Official goal name: pick_and_place_clean-TomatoType-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (cleanable ?o)\n                (isClean ?o) \n            )\n)))\n"
        ]
    },
    "train/pick_and_place_simple-AppleSliced-None-Microwave-14/trial_T20190908_171220_804585": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nuse a butter knife to slice up an apple that is in the microwave.\n;; PDDL guess 1 for 'use a butter knife to slice up an apple that is in the microwave.'\n;; Simplified Goal: \npick_and_place_simple-AppleSliced-None-Microwave\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.use a butter knife to slice up an apple that is in the microwave.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"use a butter knife to slice up an apple that is in the microwave.\"\n;; Official goal name: pick_and_place_simple-AppleSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"use a butter knife to slice up an apple that is in the microwave.\"\n;; Official goal name: pick_and_place_simple-AppleSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"use a butter knife to slice up an apple that is in the microwave.\"\n;; Official goal name: pick_and_place_simple-AppleSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"use a butter knife to slice up an apple that is in the microwave.\"\n;; Official goal name: pick_and_place_simple-AppleSliced-None-Microwave\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r MicrowaveType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-Fork-None-DiningTable-15/trial_T20190907_203144_140359": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a cleaned fork on the table.\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned fork on the table.\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned fork on the table.\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned fork on the table.\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned fork on the table.\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned fork on the table.\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned fork on the table.\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned fork on the table.\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned fork on the table.\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a cleaned fork on the table.\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a cleaned fork on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 2 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 3 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n",
            "\n;; PDDL guess 4 for 'put a cleaned fork on the table.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-Fork-None-DiningTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n"
        ]
    },
    "train/pick_clean_then_place_in_recep-SoapBar-None-GarbageCan-403/trial_T20190909_080111_999655": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a clean bar of soap in a small green bin.\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in a small green bin.\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in a small green bin.\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in a small green bin.\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in a small green bin.\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in a small green bin.\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in a small green bin.\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in a small green bin.\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in a small green bin.\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a clean bar of soap in a small green bin.\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: \npick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a clean bar of soap in a small green bin.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: pick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 2 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: pick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 3 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: pick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n        )\n    )\n)\n",
            "\n;; PDDL guess 4 for 'put a clean bar of soap in a small green bin.'\n;; Simplified Goal: pick_clean_then_place_in_recep-SoapBar-None-GarbageCan\n(:goal\n    (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SoapBarType) \n                (receptacleType ?r GarbageCanType)\n                (inReceptacle ?o ?r)\n                (cleanable ?o)\n                (isClean ?o) \n            )\n        )\n    )\n)\n"
        ]
    },
    "train/pick_and_place_simple-TomatoSliced-None-SideTable-28/trial_T20190908_213541_082467": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nslice a tomato on the black table.\n;; PDDL guess 1 for 'slice a tomato on the black table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato on the black table.\n;; PDDL guess 1 for 'slice a tomato on the black table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato on the black table.\n;; PDDL guess 1 for 'slice a tomato on the black table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato on the black table.\n;; PDDL guess 1 for 'slice a tomato on the black table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato on the black table.\n;; PDDL guess 1 for 'slice a tomato on the black table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato on the black table.\n;; PDDL guess 1 for 'slice a tomato on the black table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato on the black table.\n;; PDDL guess 1 for 'slice a tomato on the black table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato on the black table.\n;; PDDL guess 1 for 'slice a tomato on the black table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato on the black table.\n;; PDDL guess 1 for 'slice a tomato on the black table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nslice a tomato on the black table.\n;; PDDL guess 1 for 'slice a tomato on the black table.'\n;; Simplified Goal: \npick_and_place_simple-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.slice a tomato on the black table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"slice a tomato on the black table.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-SideTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n)))\n",
            "\n;; PDDL guess 2 for \"slice a tomato on the black table.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-CoffeeTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n)))\n",
            "\n;; PDDL guess 3 for \"slice a tomato on the black table.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-DiningTable\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n)))\n",
            "\n;; PDDL guess 4 for \"slice a tomato on the black table.\"\n;; Official goal name: pick_and_place_simple-TomatoSliced-None-Desk\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n                (sliceable ?o)\n                (isSliced ?o) \n            )\n)))\n"
        ]
    },
    "train/pick_and_place_simple-AlarmClock-None-Dresser-319/trial_T20190908_002730_200712": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nmove a clock to the dresser.\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a clock to the dresser.\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a clock to the dresser.\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a clock to the dresser.\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a clock to the dresser.\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a clock to the dresser.\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a clock to the dresser.\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a clock to the dresser.\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a clock to the dresser.\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\nHuman written natural language goal\nmove a clock to the dresser.\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.move a clock to the dresser.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 2 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-ClockType-None-DresserType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 3 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-ClockType-None-DresserType\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n",
            "\n;; PDDL guess 4 for 'move a clock to the dresser.'\n;; Simplified Goal: \npick_and_place_simple-AlarmClock-None-Dresser\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AlarmClockType) \n                (receptacleType ?r DresserType)\n                (inReceptacle ?o ?r) \n            )\n    )))\n"
        ]
    },
    "train/pick_heat_then_place_in_recep-TomatoSliced-None-SideTable-28/trial_T20190908_083001_373327": {
        "codex_prompt": [
            {
                "role": "system",
                "content": ";; You are a software engineer who will be writing goal definitions for a robot in the PDDL planning language.\n;; These operators are based on the following PDDL domain definition. \n;; Note that there are separate types for both objects (otype) and receptacles (rtype).\n(:requirements :adl)\n\n(:types \n\tagent location receptacle object rtype otype\n)\n\n;; otype: object types.\n(:otype\n        CandleType - otype\n        ShowerGlassType - otype\n        CDType - otype\n        TomatoType - otype\n        MirrorType - otype\n        ScrubBrushType - otype\n        MugType - otype\n        ToasterType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        LadleType - otype\n        BreadType - otype\n        PotType - otype\n        BookType - otype\n        TennisRacketType - otype\n        ButterKnifeType - otype\n        ShowerDoorType - otype\n        KeyChainType - otype\n        BaseballBatType - otype\n        EggType - otype\n        PenType - otype\n        ForkType - otype\n\t    WhiskType - otype\n        VaseType - otype\n        ClothType - otype\n        WindowType - otype\n        PencilType - otype\n        StatueType - otype\n        LightSwitchType - otype\n        WatchType - otype\n        SpatulaType - otype\n        PaperTowelRollType - otype\n        FloorLampType - otype\n        KettleType - otype\n        SoapBottleType - otype\n        BootsType - otype\n        TowelType - otype\n        PillowType - otype\n        AlarmClockType - otype\n        PotatoType - otype\n        ChairType - otype\n        PlungerType - otype\n        SprayBottleType - otype\n        HandTowelType - otype\n        BathtubType - otype\n        RemoteControlType - otype\n        PepperShakerType - otype\n        PlateType - otype\n        BasketBallType - otype\n        DeskLampType - otype\n        FootstoolType - otype\n        GlassbottleType - otype\n        PaperTowelType - otype\n        CreditCardType - otype\n        PanType - otype\n        ToiletPaperType - otype\n        SaltShakerType - otype\n        PosterType - otype\n        ToiletPaperRollType - otype\n        LettuceType - otype\n        WineBottleType - otype\n        KnifeType - otype\n        LaundryHamperLidType - otype\n        SpoonType - otype\n        TissueBoxType - otype\n        BowlType - otype\n        BoxType - otype\n        SoapBarType - otype\n        HousePlantType - otype\n        NewspaperType - otype\n        CupType - otype\n        DishSpongeType - otype\n        LaptopType - otype\n        TelevisionType - otype\n        StoveKnobType - otype\n        CurtainsType - otype\n        BlindsType - otype\n        TeddyBearType - otype\n        AppleType - otype\n        WateringCanType - otype\n        SinkType - otype\n)\n;; rtype: receptacle types.\n(:rtype\n        ArmChairType - rtype\n        BedType - rtype\n        BathtubBasinType - rtype\n        DresserType - rtype\n        SafeType - rtype\n        DiningTableType - rtype\n        SofaType - rtype\n        HandTowelHolderType - rtype\n        StoveBurnerType - rtype\n        CartType - rtype\n        DeskType - rtype\n        CoffeeMachineType - rtype\n        MicrowaveType - rtype\n        ToiletType - rtype\n        CounterTopType - rtype\n        GarbageCanType - rtype\n        CoffeeTableType - rtype\n        CabinetType - rtype\n        SinkBasinType - rtype\n        OttomanType - rtype\n        ToiletPaperHangerType - rtype\n        TowelHolderType - rtype\n        FridgeType - rtype\n        DrawerType - rtype\n        SideTableType - rtype\n        ShelfType - rtype\n        LaundryHamperType - rtype\n)\n\n;; Predicates defined on this domain. Note the types for each predicate.\n(:predicates\n\t(atLocation ?a - agent ?l - location) \n        (receptacleAtLocation ?r - receptacle ?l - location) \n        (objectAtLocation ?o - object ?l - location)\n        (inReceptacle ?o - object ?r - receptacle) \n        (receptacleType ?r - receptacle ?t - rtype) \n        (objectType ?o - object ?t - otype) \n        (holds ?a - agent ?o - object) \n        (holdsAny ?a - agent) \n        (holdsAnyReceptacleObject ?a - agent) \n        \n\t(openable ?r - receptacle) \n        (opened ?r - receptacle) \n        (isClean ?o - object) \n        (cleanable ?o - object) \n        (isHot ?o - object) \n        (heatable ?o - object) \n        (isCool ?o - object) \n        (coolable ?o - object) \n        (toggleable ?o - object) \n        (isOn ?o - object) \n        (isToggled ?o - object) \n        (sliceable ?o - object) \n        (isSliced ?o - object) \n )\n\n;; Example translations from natural language to a simplified goal name, and then a PDDL goal. Notice that PDDL goals MUST only use predicates, object types, and receptacle types exactly as they appear in the domain above. People may also have been unclear about which stimulus they were talking about, so we list multiple possible guesses for goal if there is uncertainty over what they meant.\n\n;; Human written natural language goal.\nput a soup spoon on a table.\n\n<START>\n;; PDDL guess 1 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Spoon-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o SpoonType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-Ladle-None-DeskType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o LadleType) \n                (receptacleType ?r DeskType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a soup spoon on a table.\"\n;; Official goal name: pick_and_place_simple-ForkType-None-SideTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o ForkTypeType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r) \n            )\n)))\n<END>\n\n;; Human written natural language goal.\nput a warmed up slice of pear in the cabinet.\n\n<START>\n;; PDDL guess 1 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 2 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cabinet\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CabinetType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 3 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-AppleSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o AppleType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n<START>\n;; PDDL guess 4 for \"put a warmed up slice of pear in the cabinet.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-Cupboard\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CupboardType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n<END>\n\n;; Human written natural language goal.\nput a hot potato in the refrigerator.\n<START>\n;; PDDL guess 1 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 2 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 3 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n<START>\n;; PDDL guess 4 for \"put a hot potato in the refrigerator.\"\n;; Official goal name:\npick_heat_then_place_in_recep-Potato-None-Fridge-12\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o PotatoType) \n                (receptacleType ?r FridgeType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o) \n            )\n    )))\n<END>\n\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\nHuman written natural language goal\nput a heated slice of tomato on the table.\n;; PDDL guess 1 for 'put a heated slice of tomato on the table.'\n;; Simplified Goal: \npick_heat_then_place_in_recep-TomatoSliced-None-SideTable\n\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r SideTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n\n<END>\n"
            },
            {
                "role": "user",
                "content": ";; Now write four guesses for the following human written natural language goal. Delimit each guess with <START> and <END>.\n;; Human written natural language goal.put a heated slice of tomato on the table.\n"
            }
        ],
        "codex_output": [
            "\n;; PDDL guess 1 for \"put a heated slice of tomato on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-DiningTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r DiningTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 2 for \"put a heated slice of tomato on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-KitchenTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r KitchenTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 3 for \"put a heated slice of tomato on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-CounterTopType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CounterTopType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n",
            "\n;; PDDL guess 4 for \"put a heated slice of tomato on the table.\"\n;; Official goal name: pick_heat_then_place_in_recep-TomatoSliced-None-CoffeeTableType\n(:goal\n        (exists (?r - receptacle)\n        (exists (?o - object)\n            (and \n                (objectType ?o TomatoType) \n                (receptacleType ?r CoffeeTableType)\n                (inReceptacle ?o ?r)\n                (heatable ?o)\n                (isHot ?o)\n                (sliceable ?o)\n                (isSliced ?o)  \n            )\n    )))\n"
        ]
    }
}