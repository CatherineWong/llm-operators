[{"file_name": "train_0", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o BeetrootSoup))))\n)", "plan": [{"action": "pick-up", "args": ["i1", "o19", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o20", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-beetroot-soup_0", "args": ["t9", "o7", "i1", "o19", "i2", "o20", "i3", "o22"], "operator_body": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_1", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t5"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t5", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t2", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_2", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Shears))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-shears2_2", "args": ["t10", "o3", "i1", "o13", "i2", "o22"], "operator_body": "(:action craft-shears2_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station ToolStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Shears)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldIngot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_3", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t5", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_4", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Arrow))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t8"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t8", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o11", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "craft-arrow", "args": ["i1", "i2", "i3", "o2", "o10", "o11", "o22", "t3"], "operator_body": "(:action craft-arrow\n  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WeaponStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Stick)\n    (inventory-holding ?ingredientinv2 ?ingredient2)\n    (object-of-type ?ingredient2 Feather)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target Arrow)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Stick))\n    (object-of-type ?ingredient1 Hypothetical)\n    (not (inventory-holding ?ingredientinv2 ?ingredient2))\n    (inventory-empty ?ingredientinv2)\n    (not (object-of-type ?ingredient2 Feather))\n    (object-of-type ?ingredient2 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_5", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o WoodPlank))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o8", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-wood-plank", "args": ["i1", "i2", "o1", "o8", "o21", "t8"], "operator_body": "(:action craft-wood-plank\n  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WorkStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Wood)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target WoodPlank)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Wood))\n    (object-of-type ?ingredient1 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_6", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Shears))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t1"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-shears2_2", "args": ["t1", "o3", "i1", "o13", "i2", "o22"], "operator_body": "(:action craft-shears2_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station ToolStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Shears)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldIngot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_7", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o BeetrootSoup))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o19", "t5"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t5", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o20", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-beetroot-soup_0", "args": ["t11", "o7", "i1", "o19", "i2", "o20", "i3", "o22"], "operator_body": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_8", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Stick))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-stick_0", "args": ["t5", "o1", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-stick_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_9", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o BeetrootSoup))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o19", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o20", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-beetroot-soup_0", "args": ["t8", "o7", "i1", "o19", "i2", "o20", "i3", "o22"], "operator_body": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_10", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "pick-up", "args": ["i1", "o21", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t12", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_11", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Arrow))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o11", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-arrow", "args": ["i1", "i2", "i3", "o2", "o10", "o11", "o22", "t8"], "operator_body": "(:action craft-arrow\n  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WeaponStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Stick)\n    (inventory-holding ?ingredientinv2 ?ingredient2)\n    (object-of-type ?ingredient2 Feather)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target Arrow)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Stick))\n    (object-of-type ?ingredient1 Hypothetical)\n    (not (inventory-holding ?ingredientinv2 ?ingredient2))\n    (inventory-empty ?ingredientinv2)\n    (not (object-of-type ?ingredient2 Feather))\n    (object-of-type ?ingredient2 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_12", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bowl))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bowl_1", "args": ["t10", "o1", "i1", "o9", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-bowl_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_13", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t2"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t2", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t7", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_14", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Arrow))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o11", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-arrow", "args": ["i1", "i2", "i3", "o2", "o10", "o11", "o22", "t10"], "operator_body": "(:action craft-arrow\n  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WeaponStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Stick)\n    (inventory-holding ?ingredientinv2 ?ingredient2)\n    (object-of-type ?ingredient2 Feather)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target Arrow)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Stick))\n    (object-of-type ?ingredient1 Hypothetical)\n    (not (inventory-holding ?ingredientinv2 ?ingredient2))\n    (inventory-empty ?ingredientinv2)\n    (not (object-of-type ?ingredient2 Feather))\n    (object-of-type ?ingredient2 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_15", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o BeetrootSoup))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o19", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o20", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-beetroot-soup_0", "args": ["t9", "o7", "i1", "o19", "i2", "o20", "i3", "o22"], "operator_body": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_16", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Sword))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o12", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-sword_0", "args": ["t12", "o2", "i1", "o10", "i2", "o12", "i3", "o22"], "operator_body": "(:action craft-sword_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WeaponStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Stick)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Sword)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Stick))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronIngot))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_17", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed1_0", "args": ["t2", "o5", "i1", "o9", "i2", "o22"], "operator_body": "(:action craft-bed1_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed1_2", "args": ["t2", "o5", "i1", "o9", "i1", "o9", "i2", "o22"], "operator_body": "(:action craft-bed1_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o8", "t6"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t6", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed1_1", "args": ["t2", "o5", "i1", "o8", "i1", "o8", "i2", "o22"], "operator_body": "(:action craft-bed1_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Wood)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wood)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Wood))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wood))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t1"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o17", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed_1", "args": ["t2", "o5", "i1", "o9", "i2", "o17", "i3", "o22"], "operator_body": "(:action craft-bed_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wool))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_18", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Sword))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t1"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o12", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-sword_0", "args": ["t10", "o2", "i1", "o10", "i2", "o12", "i3", "o22"], "operator_body": "(:action craft-sword_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WeaponStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Stick)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Sword)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Stick))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronIngot))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_19", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Boat))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "craft-boat_0", "args": ["t14", "o6", "i1", "o9", "i2", "o22"], "operator_body": "(:action craft-boat_0\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BoatStation)\n\t\t(inventory-holding ?ingredientinv ?ingredient)\n\t\t(object-of-type ?ingredient WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Boat)\n\t\t(not (inventory-holding ?ingredientinv ?ingredient))\n\t\t(inventory-empty ?ingredientinv)\n\t\t(not (object-of-type ?ingredient WoodPlank))\n\t\t(object-of-type ?ingredient Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_20", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Arrow))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o11", "t13"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t13", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-arrow", "args": ["i1", "i2", "i3", "o2", "o10", "o11", "o22", "t9"], "operator_body": "(:action craft-arrow\n  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WeaponStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Stick)\n    (inventory-holding ?ingredientinv2 ?ingredient2)\n    (object-of-type ?ingredient2 Feather)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target Arrow)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Stick))\n    (object-of-type ?ingredient1 Hypothetical)\n    (not (inventory-holding ?ingredientinv2 ?ingredient2))\n    (inventory-empty ?ingredientinv2)\n    (not (object-of-type ?ingredient2 Feather))\n    (object-of-type ?ingredient2 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_21", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bowl))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bowl_1", "args": ["t8", "o1", "i1", "o9", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-bowl_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_22", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Arrow))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o11", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-arrow", "args": ["i1", "i2", "i3", "o2", "o10", "o11", "o22", "t7"], "operator_body": "(:action craft-arrow\n  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WeaponStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Stick)\n    (inventory-holding ?ingredientinv2 ?ingredient2)\n    (object-of-type ?ingredient2 Feather)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target Arrow)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Stick))\n    (object-of-type ?ingredient1 Hypothetical)\n    (not (inventory-holding ?ingredientinv2 ?ingredient2))\n    (inventory-empty ?ingredientinv2)\n    (not (object-of-type ?ingredient2 Feather))\n    (object-of-type ?ingredient2 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_23", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Sword))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o12", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-sword_0", "args": ["t7", "o2", "i1", "o10", "i2", "o12", "i3", "o22"], "operator_body": "(:action craft-sword_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WeaponStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Stick)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Sword)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Stick))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronIngot))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_24", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Sword))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o12", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-sword_0", "args": ["t6", "o2", "i1", "o10", "i2", "o12", "i3", "o22"], "operator_body": "(:action craft-sword_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WeaponStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Stick)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Sword)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Stick))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronIngot))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_25", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_2", "args": ["t7", "o7", "i1", "o18", "i1", "o18", "i2", "o22"], "operator_body": "(:action craft-cooked-potato_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Potato)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Potato))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_0", "args": ["t7", "o7", "i1", "o18", "i2", "o22"], "operator_body": "(:action craft-cooked-potato_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o15", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_1", "args": ["t7", "o7", "i1", "o18", "i2", "o15", "i3", "o22"], "operator_body": "(:action craft-cooked-potato_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_26", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "pick-up", "args": ["i1", "o18", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o15", "t9"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t9", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_1", "args": ["t13", "o7", "i1", "o18", "i2", "o15", "i3", "o22"], "operator_body": "(:action craft-cooked-potato_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_27", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o14", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o15", "t9"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t9", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "smelt-iron-ore_1", "args": ["t2", "o4", "i1", "o14", "i2", "o15", "i3", "o21"], "operator_body": "(:action smelt-iron-ore_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 GoldOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 GoldOre))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-iron-ingot_1", "args": ["t4", "o1", "i1", "o13", "i2", "o21"], "operator_body": "(:action craft-iron-ingot_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "smelt-iron-ore_0", "args": ["t2", "o4", "i1", "o13", "i2", "o21"], "operator_body": "(:action smelt-iron-ore_0\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv ?ingredient)\n\t\t(object-of-type ?ingredient IronOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv ?ingredient))\n\t\t(inventory-empty ?ingredientinv)\n\t\t(not (object-of-type ?ingredient IronOre))\n\t\t(object-of-type ?ingredient Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "smelt-iron-ore_1", "args": ["t2", "o4", "i1", "o13", "i2", "o14", "i3", "o21"], "operator_body": "(:action smelt-iron-ore_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "smelt-iron_2", "args": ["t2", "o4", "i1", "o13", "i2", "o14", "i3", "o21"], "operator_body": "(:action smelt-iron_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-iron-ingot_2", "args": ["t2", "o4", "i1", "o13", "i2", "o14", "i3", "o21"], "operator_body": "(:action craft-iron-ingot_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_28", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o15", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_1", "args": ["t6", "o7", "i1", "o18", "i2", "o15", "i3", "o22"], "operator_body": "(:action craft-cooked-potato_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_29", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-iron-ingot_2", "args": ["t7", "o1", "i1", "o13", "i1", "o13", "i2", "o21"], "operator_body": "(:action craft-iron-ingot_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronOre))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o14", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "smelt-iron-ore_2", "args": ["t11", "o4", "i1", "o14", "i1", "o14", "i2", "o21"], "operator_body": "(:action smelt-iron-ore_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o14", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "smelt-iron-ore_0", "args": ["t11", "o4", "i1", "o14", "i2", "o21"], "operator_body": "(:action smelt-iron-ore_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o14", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o13", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "melt-iron-ore_0", "args": ["t11", "o4", "i1", "o14", "i2", "o13", "i3", "o21"], "operator_body": "(:action melt-iron-ore_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronOre))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-iron-ingot_0", "args": ["t11", "o4", "i1", "o13", "i2", "o21"], "operator_body": "(:action craft-iron-ingot_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "smelt-iron_2", "args": ["t11", "o4", "i1", "o13", "i2", "o14", "i3", "o21"], "operator_body": "(:action smelt-iron_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-iron-ingot_2", "args": ["t11", "o4", "i1", "o13", "i2", "o14", "i3", "o21"], "operator_body": "(:action craft-iron-ingot_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_30", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o15", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "craft-cooked-potato_1", "args": ["t12", "o7", "i1", "o18", "i2", "o15", "i3", "o22"], "operator_body": "(:action craft-cooked-potato_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_31", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o17", "t13"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t13", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed_1", "args": ["t7", "o5", "i1", "o9", "i2", "o17", "i3", "o22"], "operator_body": "(:action craft-bed_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wool))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_32", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bowl))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bowl_1", "args": ["t11", "o1", "i1", "o9", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-bowl_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_33", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t4", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_34", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o GoldIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o14", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o12", "t2"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t2", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "furnace_0", "args": ["t12", "o4", "i1", "o14", "i2", "o12", "i3", "o21"], "operator_body": "(:action furnace_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?resultinv - inventory ?result - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?resultinv)\n\t\t(object-of-type ?result Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?resultinv))\n\t\t(inventory-holding ?resultinv ?result)\n\t\t(not (object-of-type ?result Hypothetical))\n\t\t(object-of-type ?result GoldIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronIngot))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o GoldIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o15", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-gold-ingot_1", "args": ["t9", "o1", "i1", "o15", "i2", "o14", "i3", "o21"], "operator_body": "(:action craft-gold-ingot_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_35", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Boat))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t8"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t8", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-boat_0", "args": ["t10", "o6", "i1", "o9", "i2", "o22"], "operator_body": "(:action craft-boat_0\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BoatStation)\n\t\t(inventory-holding ?ingredientinv ?ingredient)\n\t\t(object-of-type ?ingredient WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Boat)\n\t\t(not (inventory-holding ?ingredientinv ?ingredient))\n\t\t(inventory-empty ?ingredientinv)\n\t\t(not (object-of-type ?ingredient WoodPlank))\n\t\t(object-of-type ?ingredient Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_36", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Boat))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-boat_0", "args": ["t8", "o6", "i1", "o9", "i2", "o22"], "operator_body": "(:action craft-boat_0\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BoatStation)\n\t\t(inventory-holding ?ingredientinv ?ingredient)\n\t\t(object-of-type ?ingredient WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Boat)\n\t\t(not (inventory-holding ?ingredientinv ?ingredient))\n\t\t(inventory-empty ?ingredientinv)\n\t\t(not (object-of-type ?ingredient WoodPlank))\n\t\t(object-of-type ?ingredient Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_37", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Stick))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-stick_0", "args": ["t11", "o1", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-stick_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_38", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o BeetrootSoup))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o19", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o20", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-beetroot-soup_0", "args": ["t9", "o7", "i1", "o19", "i2", "o20", "i3", "o22"], "operator_body": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_39", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Sword))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t9"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t9", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o12", "t13"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t13", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-sword_0", "args": ["t12", "o2", "i1", "o10", "i2", "o12", "i3", "o22"], "operator_body": "(:action craft-sword_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WeaponStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Stick)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Sword)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Stick))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronIngot))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_40", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o BeetrootSoup))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o19", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o20", "t6"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t6", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-beetroot-soup_0", "args": ["t3", "o7", "i1", "o19", "i2", "o20", "i3", "o22"], "operator_body": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_41", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o GoldIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o15", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t1"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-gold-ingot_1", "args": ["t6", "o1", "i1", "o15", "i2", "o14", "i3", "o21"], "operator_body": "(:action craft-gold-ingot_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_42", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o WoodPlank))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o8", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t1"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-wood-plank", "args": ["i1", "i2", "o1", "o8", "o21", "t1"], "operator_body": "(:action craft-wood-plank\n  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WorkStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Wood)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target WoodPlank)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Wood))\n    (object-of-type ?ingredient1 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_43", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o BeetrootSoup))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o19", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o20", "t5"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t5", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-beetroot-soup_0", "args": ["t14", "o7", "i1", "o19", "i2", "o20", "i3", "o22"], "operator_body": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_44", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bowl))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t6"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t6", "t1"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bowl_1", "args": ["t1", "o1", "i1", "o9", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-bowl_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_45", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o WoodPlank))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o8", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-wood-plank", "args": ["i1", "i2", "o1", "o8", "o21", "t8"], "operator_body": "(:action craft-wood-plank\n  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WorkStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Wood)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target WoodPlank)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Wood))\n    (object-of-type ?ingredient1 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_46", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bowl))))\n)", "plan": [{"action": "pick-up", "args": ["i1", "o9", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bowl_1", "args": ["t6", "o1", "i1", "o9", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-bowl_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_47", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o17", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed_1", "args": ["t4", "o5", "i1", "o9", "i2", "o17", "i3", "o22"], "operator_body": "(:action craft-bed_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wool))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_48", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bowl))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bowl_1", "args": ["t4", "o1", "i1", "o9", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-bowl_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_49", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o WoodPlank))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o8", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-wood-plank", "args": ["i1", "i2", "o1", "o8", "o21", "t7"], "operator_body": "(:action craft-wood-plank\n  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WorkStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Wood)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target WoodPlank)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Wood))\n    (object-of-type ?ingredient1 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_50", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t13", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_51", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Arrow))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t13"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t13", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o11", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-arrow", "args": ["i1", "i2", "i3", "o2", "o10", "o11", "o22", "t6"], "operator_body": "(:action craft-arrow\n  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WeaponStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Stick)\n    (inventory-holding ?ingredientinv2 ?ingredient2)\n    (object-of-type ?ingredient2 Feather)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target Arrow)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Stick))\n    (object-of-type ?ingredient1 Hypothetical)\n    (not (inventory-holding ?ingredientinv2 ?ingredient2))\n    (inventory-empty ?ingredientinv2)\n    (not (object-of-type ?ingredient2 Feather))\n    (object-of-type ?ingredient2 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_52", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Boat))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-boat_0", "args": ["t13", "o6", "i1", "o9", "i2", "o22"], "operator_body": "(:action craft-boat_0\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BoatStation)\n\t\t(inventory-holding ?ingredientinv ?ingredient)\n\t\t(object-of-type ?ingredient WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Boat)\n\t\t(not (inventory-holding ?ingredientinv ?ingredient))\n\t\t(inventory-empty ?ingredientinv)\n\t\t(not (object-of-type ?ingredient WoodPlank))\n\t\t(object-of-type ?ingredient Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_53", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o GoldIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o15", "t6"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t6", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t7"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t7", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-gold-ingot_1", "args": ["t8", "o1", "i1", "o15", "i2", "o14", "i3", "o21"], "operator_body": "(:action craft-gold-ingot_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_54", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Sword))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o12", "t2"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t2", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-sword_0", "args": ["t9", "o2", "i1", "o10", "i2", "o12", "i3", "o22"], "operator_body": "(:action craft-sword_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WeaponStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Stick)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Sword)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Stick))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronIngot))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_55", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t6"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t6", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t2", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_56", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "pick-up", "args": ["i1", "o9", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o17", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed_1", "args": ["t12", "o5", "i1", "o9", "i2", "o17", "i3", "o22"], "operator_body": "(:action craft-bed_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wool))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_57", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o WoodPlank))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o8", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-wood-plank", "args": ["i1", "i2", "o1", "o8", "o21", "t9"], "operator_body": "(:action craft-wood-plank\n  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WorkStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Wood)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target WoodPlank)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Wood))\n    (object-of-type ?ingredient1 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_58", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o GoldIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o15", "t8"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t8", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-gold-ingot_1", "args": ["t14", "o1", "i1", "o15", "i2", "o14", "i3", "o21"], "operator_body": "(:action craft-gold-ingot_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_59", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "pick-up", "args": ["i2", "o15", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_1", "args": ["t13", "o7", "i1", "o18", "i2", "o15", "i3", "o22"], "operator_body": "(:action craft-cooked-potato_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_60", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o WoodPlank))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o8", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-wood-plank", "args": ["i1", "i2", "o1", "o8", "o21", "t4"], "operator_body": "(:action craft-wood-plank\n  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WorkStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Wood)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target WoodPlank)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Wood))\n    (object-of-type ?ingredient1 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_61", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t3", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_62", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o17", "t6"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t6", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed_1", "args": ["t7", "o5", "i1", "o9", "i2", "o17", "i3", "o22"], "operator_body": "(:action craft-bed_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wool))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_63", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_0", "args": ["t13", "o7", "i1", "o18", "i2", "o22"], "operator_body": "(:action craft-cooked-potato_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o15", "t2"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t2", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_1", "args": ["t13", "o7", "i1", "o18", "i2", "o15", "i3", "o22"], "operator_body": "(:action craft-cooked-potato_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_64", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed1_2", "args": ["t8", "o5", "i1", "o9", "i1", "o9", "i2", "o22"], "operator_body": "(:action craft-bed1_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o17", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed_1", "args": ["t8", "o5", "i1", "o9", "i2", "o17", "i3", "o22"], "operator_body": "(:action craft-bed_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wool))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_65", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Boat))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t9"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t9", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-boat_0", "args": ["t11", "o6", "i1", "o9", "i2", "o22"], "operator_body": "(:action craft-boat_0\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BoatStation)\n\t\t(inventory-holding ?ingredientinv ?ingredient)\n\t\t(object-of-type ?ingredient WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Boat)\n\t\t(not (inventory-holding ?ingredientinv ?ingredient))\n\t\t(inventory-empty ?ingredientinv)\n\t\t(not (object-of-type ?ingredient WoodPlank))\n\t\t(object-of-type ?ingredient Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_66", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Arrow))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t8"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t8", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o11", "t5"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t5", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-arrow", "args": ["i1", "i2", "i3", "o2", "o10", "o11", "o22", "t2"], "operator_body": "(:action craft-arrow\n  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WeaponStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Stick)\n    (inventory-holding ?ingredientinv2 ?ingredient2)\n    (object-of-type ?ingredient2 Feather)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target Arrow)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Stick))\n    (object-of-type ?ingredient1 Hypothetical)\n    (not (inventory-holding ?ingredientinv2 ?ingredient2))\n    (inventory-empty ?ingredientinv2)\n    (not (object-of-type ?ingredient2 Feather))\n    (object-of-type ?ingredient2 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_67", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Stick))))\n)", "plan": [{"action": "pick-up", "args": ["i1", "o9", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-stick_0", "args": ["t5", "o1", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-stick_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_68", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t2"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t2", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t7", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_69", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o BeetrootSoup))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o19", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o20", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-beetroot-soup_0", "args": ["t6", "o7", "i1", "o19", "i2", "o20", "i3", "o22"], "operator_body": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_70", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Stick))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-stick_0", "args": ["t15", "o1", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-stick_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_71", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Shears))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t5"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t5", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-shears2_2", "args": ["t6", "o3", "i1", "o13", "i2", "o22"], "operator_body": "(:action craft-shears2_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station ToolStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Shears)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldIngot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_72", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o WoodPlank))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o8", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t1"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-wood-plank", "args": ["i1", "i2", "o1", "o8", "o21", "t1"], "operator_body": "(:action craft-wood-plank\n  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WorkStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Wood)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target WoodPlank)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Wood))\n    (object-of-type ?ingredient1 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_73", "plans": []}, {"file_name": "train_74", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o14", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "smelt-iron-ore_0", "args": ["t15", "o4", "i1", "o14", "i2", "o21"], "operator_body": "(:action smelt-iron-ore_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-iron-ingot_2", "args": ["t10", "o1", "i1", "o13", "i1", "o13", "i2", "o21"], "operator_body": "(:action craft-iron-ingot_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 IronOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 IronOre))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t14", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-iron-ingot_2", "args": ["t15", "o4", "i1", "o13", "i2", "o14", "i3", "o21"], "operator_body": "(:action craft-iron-ingot_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_75", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o BeetrootSoup))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o19", "t2"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t2", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o20", "t13"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t13", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-beetroot-soup_0", "args": ["t3", "o7", "i1", "o19", "i2", "o20", "i3", "o22"], "operator_body": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_76", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o GoldIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o15", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-gold-ingot_1", "args": ["t3", "o1", "i1", "o15", "i2", "o14", "i3", "o21"], "operator_body": "(:action craft-gold-ingot_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target GoldIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_77", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Arrow))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o10", "t8"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t8", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o11", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-arrow", "args": ["i1", "i2", "i3", "o2", "o10", "o11", "o22", "t14"], "operator_body": "(:action craft-arrow\n  :parameters (?ingredientinv1 - inventory ?ingredientinv2 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?ingredient2 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WeaponStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Stick)\n    (inventory-holding ?ingredientinv2 ?ingredient2)\n    (object-of-type ?ingredient2 Feather)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target Arrow)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Stick))\n    (object-of-type ?ingredient1 Hypothetical)\n    (not (inventory-holding ?ingredientinv2 ?ingredient2))\n    (inventory-empty ?ingredientinv2)\n    (not (object-of-type ?ingredient2 Feather))\n    (object-of-type ?ingredient2 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_78", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Boat))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "craft-boat_0", "args": ["t11", "o6", "i1", "o9", "i2", "o22"], "operator_body": "(:action craft-boat_0\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BoatStation)\n\t\t(inventory-holding ?ingredientinv ?ingredient)\n\t\t(object-of-type ?ingredient WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Boat)\n\t\t(not (inventory-holding ?ingredientinv ?ingredient))\n\t\t(inventory-empty ?ingredientinv)\n\t\t(not (object-of-type ?ingredient WoodPlank))\n\t\t(object-of-type ?ingredient Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_79", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o14", "t2"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t2", "t1"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "smelt-iron-ore_2", "args": ["t1", "o4", "i1", "o14", "i1", "o14", "i2", "o21"], "operator_body": "(:action smelt-iron-ore_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Coal)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Coal))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "pick-up", "args": ["i1", "o13", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-iron-ingot_1", "args": ["t4", "o1", "i1", "o13", "i2", "o21"], "operator_body": "(:action craft-iron-ingot_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}, {"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o IronIngot))))\n)", "plan": [{"action": "pick-up", "args": ["i1", "o13", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o14", "t2"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t2", "t1"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-iron-ingot_2", "args": ["t1", "o4", "i1", "o13", "i2", "o14", "i3", "o21"], "operator_body": "(:action craft-iron-ingot_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station Furnace)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 IronOre)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target IronIngot)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 IronOre))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_80", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o WoodPlank))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o8", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t7"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-wood-plank", "args": ["i1", "i2", "o1", "o8", "o21", "t7"], "operator_body": "(:action craft-wood-plank\n  :parameters (?ingredientinv1 - inventory ?targetinv - inventory ?station - object ?ingredient1 - object ?target - object ?t - tile)\n  :precondition (and\n    (agent-at ?t)\n    (object-at ?station ?t)\n    (object-of-type ?station WorkStation)\n    (inventory-holding ?ingredientinv1 ?ingredient1)\n    (object-of-type ?ingredient1 Wood)\n    (inventory-empty ?targetinv)\n    (object-of-type ?target Hypothetical)\n  )\n  :effect (and\n    (not (inventory-empty ?targetinv))\n    (inventory-holding ?targetinv ?target)\n    (not (object-of-type ?target Hypothetical))\n    (object-of-type ?target WoodPlank)\n    (not (inventory-holding ?ingredientinv1 ?ingredient1))\n    (inventory-empty ?ingredientinv1)\n    (not (object-of-type ?ingredient1 Wood))\n    (object-of-type ?ingredient1 Hypothetical)\n  )\n )"}]}]}, {"file_name": "train_81", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o BeetrootSoup))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o19", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o20", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-beetroot-soup_0", "args": ["t2", "o7", "i1", "o19", "i2", "o20", "i3", "o22"], "operator_body": "(:action craft-beetroot-soup_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Beetroot)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Bowl)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target BeetrootSoup)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Beetroot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Bowl))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_82", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Shears))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o13", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-shears2_2", "args": ["t14", "o3", "i1", "o13", "i2", "o22"], "operator_body": "(:action craft-shears2_2\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station ToolStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 GoldIngot)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Shears)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 GoldIngot))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_83", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t12"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t12", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t4", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_84", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Stick))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t14"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "craft-stick_0", "args": ["t14", "o1", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-stick_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_85", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bowl))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bowl_1", "args": ["t2", "o1", "i1", "o9", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-bowl_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_86", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t2"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t2", "t9"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o17", "t9"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t9", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed_1", "args": ["t11", "o5", "i1", "o9", "i2", "o17", "i3", "o22"], "operator_body": "(:action craft-bed_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wool))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_87", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t8"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t8", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t13", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_88", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Boat))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t13"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t13", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-boat_0", "args": ["t12", "o6", "i1", "o9", "i2", "o22"], "operator_body": "(:action craft-boat_0\n        :parameters (?t - tile ?station - object ?ingredientinv - inventory ?ingredient - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BoatStation)\n\t\t(inventory-holding ?ingredientinv ?ingredient)\n\t\t(object-of-type ?ingredient WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Boat)\n\t\t(not (inventory-holding ?ingredientinv ?ingredient))\n\t\t(inventory-empty ?ingredientinv)\n\t\t(not (object-of-type ?ingredient WoodPlank))\n\t\t(object-of-type ?ingredient Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_89", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Stick))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-stick_0", "args": ["t5", "o1", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-stick_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_90", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t6"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t6", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o15", "t13"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t13", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_1", "args": ["t3", "o7", "i1", "o18", "i2", "o15", "i3", "o22"], "operator_body": "(:action craft-cooked-potato_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_91", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t14"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t14", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_92", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Paper))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t3"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o21", "t3"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t3", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-paper_0", "args": ["t15", "o1", "i1", "o21", "i2", "o22"], "operator_body": "(:action craft-paper_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 SugarCane)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Paper)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 SugarCane))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_93", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bowl))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t4"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t4"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t4", "t8"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bowl_1", "args": ["t8", "o1", "i1", "o9", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-bowl_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_94", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bed))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t13"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t13"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t13", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o17", "t5"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t5", "t12"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bed_1", "args": ["t12", "o5", "i1", "o9", "i2", "o17", "i3", "o22"], "operator_body": "(:action craft-bed_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station BedStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Wool)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bed)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Wool))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_95", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Stick))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t2"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t2"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t2", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-stick_0", "args": ["t15", "o1", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-stick_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_96", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Bowl))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t10"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o9", "t10"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t10", "t1"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-bowl_1", "args": ["t1", "o1", "i1", "o9", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-bowl_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Bowl)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 WoodPlank))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_97", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o Stick))))\n)", "plan": [{"action": "pick-up", "args": ["i1", "o9", "t1"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t1", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-stick_0", "args": ["t5", "o1", "i1", "o9", "i2", "o21"], "operator_body": "(:action craft-stick_0\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station WorkStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 WoodPlank)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target Stick)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 WoodPlank))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_98", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t11"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "pick-up", "args": ["i2", "o15", "t11"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t11", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_1", "args": ["t6", "o7", "i1", "o18", "i2", "o15", "i3", "o22"], "operator_body": "(:action craft-cooked-potato_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}, {"file_name": "train_99", "plans": [{"goal": "(:goal\n\t(exists (?i - inventory)\n(exists (?o - object)\n(and \n\t\t(inventory-holding ?i ?o)\n\t\t(object-of-type ?o CookedPotato))))\n)", "plan": [{"action": "move-to", "args": ["t1", "t6"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i1", "o18", "t6"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t6", "t15"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "pick-up", "args": ["i2", "o15", "t15"], "operator_body": "(:action pick-up\n  :parameters (?i - inventory ?x - object ?t - tile)\n  :precondition (and (agent-at ?t) (object-at ?x ?t) (inventory-empty ?i))\n  :effect (and (inventory-holding ?i ?x) (not (object-at ?x ?t)) (not (inventory-empty ?i)))\n )"}, {"action": "move-to", "args": ["t15", "t5"], "operator_body": "(:action move-to\n  :parameters (?t1 - tile ?t2 - tile)\n  :precondition (and (agent-at ?t1))\n  :effect (and (agent-at ?t2) (not (agent-at ?t1)))\n )"}, {"action": "craft-cooked-potato_1", "args": ["t5", "o7", "i1", "o18", "i2", "o15", "i3", "o22"], "operator_body": "(:action craft-cooked-potato_1\n        :parameters (?t - tile ?station - object ?ingredientinv1 - inventory ?ingredient1 - object ?ingredientinv2 - inventory ?ingredient2 - object ?targetinv - inventory ?target - object)\n\n        :precondition (and \n\t\t(agent-at ?t)\n\t\t(object-at ?station ?t)\n\t\t(object-of-type ?station FoodStation)\n\t\t(inventory-holding ?ingredientinv1 ?ingredient1)\n\t\t(object-of-type ?ingredient1 Potato)\n\t\t(inventory-holding ?ingredientinv2 ?ingredient2)\n\t\t(object-of-type ?ingredient2 Coal)\n\t\t(inventory-empty ?targetinv)\n\t\t(object-of-type ?target Hypothetical)\n\t\t)\n        :effect (and \n\t\t(not (inventory-empty ?targetinv))\n\t\t(inventory-holding ?targetinv ?target)\n\t\t(not (object-of-type ?target Hypothetical))\n\t\t(object-of-type ?target CookedPotato)\n\t\t(not (inventory-holding ?ingredientinv1 ?ingredient1))\n\t\t(inventory-empty ?ingredientinv1)\n\t\t(not (object-of-type ?ingredient1 Potato))\n\t\t(object-of-type ?ingredient1 Hypothetical)\n\t\t(not (inventory-holding ?ingredientinv2 ?ingredient2))\n\t\t(inventory-empty ?ingredientinv2)\n\t\t(not (object-of-type ?ingredient2 Coal))\n\t\t(object-of-type ?ingredient2 Hypothetical)\n\t\t)\n)"}]}]}]