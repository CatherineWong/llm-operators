{"CutObject": ["(:action CutObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r CounterTopType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isSliced ?o)\n\t\t)\n)"], "CoolObject": ["(:action CoolObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(inReceptacle ?o ?r)\n\t\t(isHot ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"], "HeatObject": ["(:action HeatObject\n        :parameters (?a - agent ?o - object)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(cleanable ?o)\n\t\t(coolable ?o)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (isCool ?o))\n\t\t)\n)"], "DropObject": ["(:action DropObject\n        :parameters (?l - location ?a - agent ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(not (holds ?a ?o))\n\t\t)\n)"], "CookObject": ["(:action CookObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r StoveBurnerType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t)\n)"], "ChillObject": ["(:action ChillObject\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"], "ExamineObject": ["(:action ExamineObject\n        :parameters (?a - agent ?o - receptacle ?o - object ?lStart - location)\n\n        :precondition (and \n\t\t(atLocation ?a ?lStart)\n\t\t(objectAtLocation ?o ?lStart)\n\t\t)\n        :effect (and \n\t\t(receptacleType ?o CartType)\n\t\t)\n)"], "SwitchObjects": ["(:action SwitchObjects\n        :parameters (?l - location ?a - agent ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t(objectType ?o LightSwitchType)\n\t\t)\n        :effect (and \n\t\t(isOn ?o)\n\t\t(isClean ?o)\n\t\t)\n)"], "OpenContainer": ["(:action OpenContainer\n        :parameters (?l - location ?a - agent ?r - receptacle ?r - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?r)\n\t\t)\n        :effect (and \n\t\t(opened ?r)\n\t\t)\n)"], "CloseContainer": ["(:action CloseContainer\n        :parameters (?l - location ?a - agent ?r - receptacle ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t)\n        :effect (and \n\t\t(objectAtLocation ?o ?l)\n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)"], "RemoveObject": ["(:action RemoveObject\n        :parameters (?a - agent ?rEnd - receptacle ?rStart - receptacle ?o - object)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rStart)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(inReceptacle ?o ?rEnd)\n\t\t(not (inReceptacle ?o ?rStart))\n\t\t)\n)"], "GET": ["(:action GET\n        :parameters (?r - receptacle ?o - object ?lEnd - location ?lStart - location)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?r ?lStart)\n\t\t(inReceptacle ?o ?r)\n\t\t(objectAtLocation ?o ?lEnd)\n\t\t)\n        :effect (and \n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)"], "PUT": ["(:action PUT\n        :parameters (?l - location ?o - object ?c - receptacle)\n\n        :precondition (and \n\t\t(receptacleAtLocation ?c ?l)\n\t\t)\n        :effect (and \n\t\t(inReceptacle ?o ?c)\n\t\t)\n)"], "TurnOnObject": ["(:action TurnOnObject\n        :parameters (?l - location ?a - agent ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t)\n        :effect (and \n\t\t(isOn ?o)\n\t\t)\n)"], "GetObject1": ["(:action GetObject1\n        :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n\n        :precondition (and \n\t\t(inReceptacle ?o ?r)\n\t\t(openable ?r)\n\t\t(objectType ?o TomatoType)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holdsAny ?a)\n\t\t(atLocation ?a ?l)\n\t\t)\n        :effect (and \n\t\t(opened ?r)\n\t\t(holds ?a ?o)\n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)"]}