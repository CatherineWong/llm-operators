{"HeatObject": ["(:action HeatObject\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(holds ?a ?o)\n\t\t(heatable ?o)\n\t\t(not (isHot ?o))\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t(not (cleanable ?o))\n\t\t(not (coolable ?o))\n\t\t)\n)"], "GetObject": ["(:action GetObject\n        :parameters (?rend - receptacle ?a - agent ?lstart - location ?o - object)\n\n        :precondition (and \n\t\t(opened ?rend)\n\t\t(not (holdsAny ?a))\n\t\t(atLocation ?a ?lstart)\n\t\t(receptacleAtLocation ?rend ?lstart)\n\t\t(isCool ?o)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(wasInReceptacle ?o ?rend)\n\t\t)\n)"], "CookObject": ["(:action CookObject\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t)\n        :effect (and \n\t\t(isHot ?o)\n\t\t)\n)"], "Chill": ["(:action Chill\n        :parameters (?r - receptacle ?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(openable ?r)\n\t\t(opened ?r)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"], "LiftGlass": ["(:action LiftGlass\n        :parameters (?a - agent ?r - object ?o - object)\n\n        :precondition (and \n\t\t(holds ?a ?r)\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(not (holds ?a ?r))\n\t\t)\n)"], "SwitchOn": ["(:action SwitchOn\n        :parameters (?a - agent ?o - object)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(isOn ?o)\n\t\t)\n        :effect (and \n\t\t(isToggled ?o)\n\t\t)\n)"], "OnObject": ["(:action OnObject\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t)\n        :effect (and \n\t\t(isOn ?o)\n\t\t)\n)"], "OffObject": ["(:action OffObject\n        :parameters (?a - agent ?o - object)\n\n        :precondition (and \n\t\t(holds ?a ?o)\n\t\t(toggleable ?o)\n\t\t(isOn ?o)\n\t\t)\n        :effect (and \n\t\t(not (isOn ?o))\n\t\t)\n)"], "CoolObject": ["(:action CoolObject\n        :parameters (?r - receptacle ?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(receptacleType ?r FridgeType)\n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t(holds ?a ?o)\n\t\t)\n        :effect (and \n\t\t(isCool ?o)\n\t\t)\n)"], "pickup": ["(:action pickup\n        :parameters (?a - agent ?l - location ?o - object)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?o ?l)\n\t\t)\n        :effect (and \n\t\t(atLocation ?a ?l)\n\t\t(not (objectAtLocation ?o ?l))\n\t\t(holds ?a ?o)\n\t\t)\n)"], "put": ["(:action put\n        :parameters (?a - agent ?o0 - object ?o - object ?r0 - receptacle)\n\n        :precondition (and \n\t\t(holds ?a ?o0)\n\t\t(holdsAny ?a)\n\t\t(objectAtLocation ?o ?r0)\n\t\t)\n        :effect (and \n\t\t(not (holds ?a ?o0))\n\t\t(inReceptacle ?o0 ?r0)\n\t\t)\n)"], "GoL": ["(:action GoL\n        :parameters (?a - agent ?lStart - location ?lEnd - location)\n\n        :precondition (and \n\t\t(atLocation ?a ?lStart)\n\t\t)\n        :effect (and \n\t\t(atLocation ?a ?lEnd)\n\t\t(not (atLocation ?a ?lStart))\n\t\t)\n)"], "Go": ["(:action Go\n        :parameters (?a - agent ?lStart - location ?r - receptacle ?lEnd - location)\n\n        :precondition (and \n\t\t(atLocation ?a ?lStart)\n\t\t(receptacleAtLocation ?r ?lStart)\n\t\t)\n        :effect (and \n\t\t(atLocation ?a ?lEnd)\n\t\t(not (atLocation ?a ?lStart))\n\t\t)\n)"], "Approach": ["(:action Approach\n        :parameters (?a - agent ?l - location ?r - location)\n\n        :precondition (and \n\t\t(atLocation ?a ?l)\n\t\t(receptacleAtLocation ?r ?l)\n\t\t)\n        :effect (and \n\t\t(atLocation ?a ?r)\n\t\t(not (atLocation ?a ?l))\n\t\t)\n)"], "returnBox": ["(:action returnBox\n        :parameters (?r - receptacle ?a - agent ?o - object ?l - location)\n\n        :precondition (and \n\t\t(isReceptacleObject ?r)\n\t\t(holds ?a ?r)\n\t\t(inReceptacleObject ?o ?r)\n\t\t(atLocation ?a ?l)\n\t\t(objectAtLocation ?r ?l)\n\t\t(not (holds ?a ?o))\n\t\t)\n        :effect (and \n\t\t(holds ?a ?o)\n\t\t(not (inReceptacle ?o ?r))\n\t\t)\n)"]}